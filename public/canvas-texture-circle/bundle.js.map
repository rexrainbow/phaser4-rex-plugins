{
  "version": 3,
  "sources": ["node_modules/@phaserjs/phaser/GameInstance.js", "node_modules/@phaserjs/phaser/config/BackgroundColor.js", "node_modules/@phaserjs/phaser/config/Banner.js", "node_modules/@phaserjs/phaser/config/CanvasContext.js", "node_modules/@phaserjs/phaser/config/Size.js", "node_modules/@phaserjs/phaser/renderer/BindingQueue.js", "node_modules/@phaserjs/phaser/renderer/canvas/CanvasRenderer.js", "node_modules/@phaserjs/phaser/config/SetRenderer.js", "node_modules/@phaserjs/phaser/config/CanvasRenderer.js", "node_modules/@phaserjs/phaser/config/DefaultOrigin.js", "node_modules/@phaserjs/phaser/config/MaxTextures.js", "node_modules/@phaserjs/phaser/dom/GetElement.js", "node_modules/@phaserjs/phaser/config/Parent.js", "node_modules/@phaserjs/phaser/config/Scenes.js", "node_modules/@phaserjs/phaser/config/WebGLContext.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/FBOSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/GL.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/GetRGBArray.js", "node_modules/@phaserjs/phaser/math/matrix2d-funcs/ExactEquals.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateFramebuffer.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/CreateGLTexture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/DeleteFramebuffer.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/DeleteGLTexture.js", "node_modules/@phaserjs/phaser/math/pow2/IsSizePowerOfTwo.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/SetGLTextureFilterMode.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/UpdateGLTexture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/GLTextureBinding.js", "node_modules/@phaserjs/phaser/renderer/webgl1/buffers/IndexedBuffer.js", "node_modules/@phaserjs/phaser/textures/Frame.js", "node_modules/@phaserjs/phaser/textures/Texture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRendererInstance.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/SingleTextureQuadShader.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/MultiTextureQuadShader.js", "node_modules/@phaserjs/phaser/renderer/webgl1/cameras/Ortho.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/ShaderSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CheckShaderMaxIfStatements.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/TextureSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRenderer.js", "node_modules/@phaserjs/phaser/config/WebGLRenderer.js", "node_modules/@phaserjs/phaser/config/index.js", "node_modules/@phaserjs/phaser/events/Emit.js", "node_modules/@phaserjs/phaser/dom/AddToDOM.js", "node_modules/@phaserjs/phaser/dom/DOMContentLoaded.js", "node_modules/@phaserjs/phaser/events/EventEmitter.js", "node_modules/@phaserjs/phaser/events/EventInstance.js", "node_modules/@phaserjs/phaser/events/On.js", "node_modules/@phaserjs/phaser/events/Once.js", "node_modules/@phaserjs/phaser/scenes/CreateSceneRenderData.js", "node_modules/@phaserjs/phaser/scenes/ResetSceneRenderData.js", "node_modules/@phaserjs/phaser/scenes/SceneManagerInstance.js", "node_modules/@phaserjs/phaser/scenes/SceneManager.js", "node_modules/@phaserjs/phaser/textures/CreateCanvas.js", "node_modules/@phaserjs/phaser/textures/TextureManagerInstance.js", "node_modules/@phaserjs/phaser/textures/TextureManager.js", "node_modules/@phaserjs/phaser/Game.js", "node_modules/@phaserjs/phaser/scenes/GetConfigValue.js", "node_modules/@phaserjs/phaser/scenes/Install.js", "node_modules/@phaserjs/phaser/scenes/Scene.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearch.js", "node_modules/@phaserjs/phaser/display/GetChildIndex.js", "node_modules/@phaserjs/phaser/display/RemoveChildAt.js", "node_modules/@phaserjs/phaser/display/RemoveChild.js", "node_modules/@phaserjs/phaser/gameobjects/events/AddedToWorldEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/RemovedFromWorldEvent.js", "node_modules/@phaserjs/phaser/display/SetWorld.js", "node_modules/@phaserjs/phaser/display/SetParent.js", "node_modules/@phaserjs/phaser/display/AddChild.js", "node_modules/@phaserjs/phaser/display/AddChildAt.js", "node_modules/@phaserjs/phaser/display/AddChildren.js", "node_modules/@phaserjs/phaser/display/AddChildrenAt.js", "node_modules/@phaserjs/phaser/display/AddPosition.js", "node_modules/@phaserjs/phaser/display/AddRotation.js", "node_modules/@phaserjs/phaser/display/AddScale.js", "node_modules/@phaserjs/phaser/display/AddSkew.js", "node_modules/@phaserjs/phaser/gameobjects/DIRTY_CONST.js", "node_modules/@phaserjs/phaser/display/BringChildToTop.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursiveNested.js", "node_modules/@phaserjs/phaser/display/ConsoleTreeChildren.js", "node_modules/@phaserjs/phaser/display/CountMatchingChildren.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursive.js", "node_modules/@phaserjs/phaser/display/RemoveChildrenBetween.js", "node_modules/@phaserjs/phaser/display/DestroyChildren.js", "node_modules/@phaserjs/phaser/display/FindChildByName.js", "node_modules/@phaserjs/phaser/display/FindChildrenByName.js", "node_modules/@phaserjs/phaser/display/GetAllChildren.js", "node_modules/@phaserjs/phaser/display/GetChildAt.js", "node_modules/@phaserjs/phaser/display/GetChildren.js", "node_modules/@phaserjs/phaser/math/distance/DistanceBetweenPoints.js", "node_modules/@phaserjs/phaser/display/GetClosestChild.js", "node_modules/@phaserjs/phaser/display/GetFirstChild.js", "node_modules/@phaserjs/phaser/display/GetFurthestChild.js", "node_modules/@phaserjs/phaser/display/GetLastChild.js", "node_modules/@phaserjs/phaser/display/GetParents.js", "node_modules/@phaserjs/phaser/display/GetRandomChild.js", "node_modules/@phaserjs/phaser/display/MoveChildDown.js", "node_modules/@phaserjs/phaser/display/MoveChildTo.js", "node_modules/@phaserjs/phaser/display/MoveChildUp.js", "node_modules/@phaserjs/phaser/geom/intersects/RectangleToRectangle.js", "node_modules/@phaserjs/phaser/display/Overlap.js", "node_modules/@phaserjs/phaser/display/RemoveChildren.js", "node_modules/@phaserjs/phaser/display/RemoveChildrenAt.js", "node_modules/@phaserjs/phaser/display/ReparentChildren.js", "node_modules/@phaserjs/phaser/display/RotateChildrenLeft.js", "node_modules/@phaserjs/phaser/display/RotateChildrenRight.js", "node_modules/@phaserjs/phaser/display/SendChildToBack.js", "node_modules/@phaserjs/phaser/display/SetBounds.js", "node_modules/@phaserjs/phaser/display/SetChildrenValue.js", "node_modules/@phaserjs/phaser/display/SetName.js", "node_modules/@phaserjs/phaser/display/SetOrigin.js", "node_modules/@phaserjs/phaser/display/SetPosition.js", "node_modules/@phaserjs/phaser/display/SetRotation.js", "node_modules/@phaserjs/phaser/display/SetScale.js", "node_modules/@phaserjs/phaser/display/SetSize.js", "node_modules/@phaserjs/phaser/display/SetSkew.js", "node_modules/@phaserjs/phaser/display/SetType.js", "node_modules/@phaserjs/phaser/display/SetValue.js", "node_modules/@phaserjs/phaser/display/SetVisible.js", "node_modules/@phaserjs/phaser/display/ShuffleChildren.js", "node_modules/@phaserjs/phaser/display/SwapChildren.js", "node_modules/@phaserjs/phaser/display/index.js", "node_modules/@phaserjs/phaser/math/matrix2d/Matrix2D.js", "node_modules/@phaserjs/phaser/geom/rectangle/Contains.js", "node_modules/@phaserjs/phaser/geom/rectangle/Rectangle.js", "node_modules/@phaserjs/phaser/utils/NOOP.js", "node_modules/@phaserjs/phaser/math/vec2/Vec2Callback.js", "node_modules/@phaserjs/phaser/math/Wrap.js", "node_modules/@phaserjs/phaser/math/angle/WrapAngle.js", "node_modules/@phaserjs/phaser/camera/Camera.js", "node_modules/@phaserjs/phaser/camera/StaticCamera.js", "node_modules/@phaserjs/phaser/gameobjects/events/DestroyEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/PostUpdateEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/UpdateEvent.js", "node_modules/@phaserjs/phaser/events/Off.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVertices.js", "node_modules/@phaserjs/phaser/gameobjects/components/bounds/BoundsComponent.js", "node_modules/@phaserjs/phaser/gameobjects/components/input/InputComponent.js", "node_modules/@phaserjs/phaser/math/vec2/Vec2.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateLocalTransform.js", "node_modules/@phaserjs/phaser/math/matrix2d/Copy.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateWorldTransform.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/TransformComponent.js", "node_modules/@phaserjs/phaser/gameobjects/GameObject.js", "node_modules/@phaserjs/phaser/world/events/WorldRenderEvent.js", "node_modules/@phaserjs/phaser/world/events/WorldShutdownEvent.js", "node_modules/@phaserjs/phaser/index-664c5328.js", "node_modules/@phaserjs/phaser/world/CalculateTotalRenderable.js", "node_modules/@phaserjs/phaser/world/HasDirtyChildren.js", "node_modules/@phaserjs/phaser/world/UpdateCachedLayers.js", "node_modules/@phaserjs/phaser/world/WorldDepthFirstSearch.js", "node_modules/@phaserjs/phaser/world/BuildRenderList.js", "node_modules/@phaserjs/phaser/world/MergeRenderData.js", "node_modules/@phaserjs/phaser/world/ResetWorldRenderData.js", "node_modules/@phaserjs/phaser/world/BaseWorld.js", "node_modules/@phaserjs/phaser/world/CreateWorldRenderData.js", "node_modules/@phaserjs/phaser/world/StaticWorld.js", "node_modules/@phaserjs/phaser/world/World.js", "node_modules/@phaserjs/phaser/world/index.js", "node_modules/@phaserjs/phaser/textures/types/CanvasTexture.js", "src/texture/canvastexture/DrawCanvasTexture.ts", "src/utils/canvas/GetStyle.ts", "src/texture/canvastexture/CreateCircleTexture.ts", "src/texture/canvastexture/CreateRectangleTexture.ts", "src/texture/canvastexture/CreatePolygonTexture.ts", "src/texture/canvastexture/CreateTriangleTexture.ts", "src/texture/canvastexture/index.ts", "node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuad.js", "node_modules/@phaserjs/phaser/gameobjects/container/Container.js", "node_modules/@phaserjs/phaser/renderer/canvas/draw/DrawTexturedQuad.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColor.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColors.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetFrame.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetTexture.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/UpdateVertices.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/Sprite.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetAlpha.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetQuadAlpha.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetQuadTint.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetTint.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/index.js", "examples/canvas-texture/circle.ts"],
  "sourcesContent": ["let instance;\r\nlet frame = 0;\r\nlet elapsed = 0;\r\nconst GameInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (game) => {\r\n        instance = game;\r\n    },\r\n    getFrame: () => {\r\n        return frame;\r\n    },\r\n    setFrame: (current) => {\r\n        frame = current;\r\n    },\r\n    getElapsed: () => {\r\n        return elapsed;\r\n    },\r\n    setElapsed: (current) => {\r\n        elapsed = current;\r\n    }\r\n};\n\nexport { GameInstance, elapsed, frame, instance };\n", "let bgColor = 0;\r\nfunction BackgroundColor(color = 0) {\r\n    return () => {\r\n        bgColor = color;\r\n    };\r\n}\r\nfunction GetBackgroundColor() {\r\n    return bgColor;\r\n}\n\nexport { BackgroundColor, GetBackgroundColor };\n", "import { GameInstance } from '../GameInstance.js';\n\nlet title = 'Phaser';\r\nlet url = 'https://phaser4.io';\r\nlet color = '#fff';\r\nlet background = 'linear-gradient(#3e0081 40%, #00bcc3)';\r\nfunction Banner(gameTitle = '', gameURL = '', textColor, textBackground) {\r\n    return () => {\r\n        title = gameTitle;\r\n        url = gameURL;\r\n        if (textColor) {\r\n            color = textColor;\r\n        }\r\n        if (textBackground) {\r\n            background = textBackground;\r\n        }\r\n    };\r\n}\r\nfunction GetBanner() {\r\n    if (title !== '') {\r\n        const game = GameInstance.get();\r\n        const version = (title === 'Phaser') ? ' v' + game.VERSION : '';\r\n        console.log(`%c${title}${version}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, '');\r\n    }\r\n}\n\nexport { Banner, GetBanner };\n", "let _contextAttributes = {\r\n    alpha: false,\r\n    desynchronized: false\r\n};\r\nfunction CanvasContext(contextAttributes) {\r\n    return () => {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\nfunction GetCanvasContext() {\r\n    return _contextAttributes;\r\n}\n\nexport { CanvasContext, GetCanvasContext };\n", "let _width = 800;\r\nlet _height = 600;\r\nlet _resolution = 1;\r\nfunction Size(width = 800, height = 600, resolution = 1) {\r\n    if (resolution === 0) {\r\n        resolution = window.devicePixelRatio;\r\n    }\r\n    return () => {\r\n        _width = width;\r\n        _height = height;\r\n        _resolution = resolution;\r\n    };\r\n}\r\nfunction GetWidth() {\r\n    return _width;\r\n}\r\nfunction GetHeight() {\r\n    return _height;\r\n}\r\nfunction GetResolution() {\r\n    return _resolution;\r\n}\n\nexport { GetHeight, GetResolution, GetWidth, Size };\n", "const queue = [];\r\nconst BindingQueue = {\r\n    add: (texture) => {\r\n        queue.push(texture);\r\n    },\r\n    get: () => {\r\n        return queue;\r\n    },\r\n    clear: () => {\r\n        queue.length = 0;\r\n    }\r\n};\n\nexport { BindingQueue };\n", "import { GetBackgroundColor } from '../../config/BackgroundColor.js';\nimport { GetCanvasContext } from '../../config/CanvasContext.js';\nimport { GetWidth, GetHeight, GetResolution } from '../../config/Size.js';\nimport { BindingQueue } from '../BindingQueue.js';\n\nclass CanvasRenderer {\r\n    constructor() {\r\n        this.clearBeforeRender = true;\r\n        this.optimizeRedraw = true;\r\n        this.autoResize = true;\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n        const canvas = document.createElement('canvas');\r\n        this.canvas = canvas;\r\n        this.initContext();\r\n    }\r\n    initContext() {\r\n        const ctx = this.canvas.getContext('2d', GetCanvasContext());\r\n        this.ctx = ctx;\r\n        this.resize(this.width, this.height, this.resolution);\r\n    }\r\n    resize(width, height, resolution = 1) {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n        const canvas = this.canvas;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        if (this.autoResize) {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n    }\r\n    setBackgroundColor(color) {\r\n        const r = color >> 16 & 0xFF;\r\n        const g = color >> 8 & 0xFF;\r\n        const b = color & 0xFF;\r\n        const a = (color > 16777215) ? color >>> 24 : 255;\r\n        this.clearColor = `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        return this;\r\n    }\r\n    reset() {\r\n        const ctx = this.ctx;\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    render(renderData) {\r\n        BindingQueue.clear();\r\n        const ctx = this.ctx;\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if (this.clearBeforeRender) {\r\n            ctx.clearRect(0, 0, this.width, this.height);\r\n            ctx.fillStyle = this.clearColor;\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n        }\r\n        const worlds = renderData.worldData;\r\n        for (let i = 0; i < worlds.length; i++) {\r\n            const { camera, renderList, numRendered } = worlds[i];\r\n            const { a, b, c, d, tx, ty } = camera.worldTransform;\r\n            ctx.setTransform(a, b, c, d, tx, ty);\r\n        }\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { CanvasRenderer };\n", "let instance;\r\nfunction SetRenderer(renderer) {\r\n    instance = renderer;\r\n}\r\nfunction GetRenderer() {\r\n    return instance;\r\n}\n\nexport { GetRenderer, SetRenderer };\n", "import './BackgroundColor.js';\nimport './CanvasContext.js';\nimport './Size.js';\nimport '../renderer/BindingQueue.js';\nimport { CanvasRenderer as CanvasRenderer$1 } from '../renderer/canvas/CanvasRenderer.js';\nimport { SetRenderer } from './SetRenderer.js';\n\nfunction CanvasRenderer() {\r\n    return () => {\r\n        SetRenderer(CanvasRenderer$1);\r\n    };\r\n}\n\nexport { CanvasRenderer };\n", "let originX = 0.5;\r\nlet originY = 0.5;\r\nfunction DefaultOrigin(x = 0.5, y = x) {\r\n    return () => {\r\n        originX = x;\r\n        originY = y;\r\n    };\r\n}\n\nexport { DefaultOrigin, originX, originY };\n", "let maxTextures = 0;\r\nfunction MaxTextures(max = 0) {\r\n    return () => {\r\n        maxTextures = max;\r\n    };\r\n}\r\nfunction SetMaxTextures(max) {\r\n    maxTextures = max;\r\n}\r\nfunction GetMaxTextures() {\r\n    return maxTextures;\r\n}\n\nexport { GetMaxTextures, MaxTextures, SetMaxTextures };\n", "function GetElement(target) {\r\n    let element;\r\n    if (target) {\r\n        if (typeof target === 'string') {\r\n            element = document.getElementById(target);\r\n        }\r\n        else if (typeof target === 'object' && target.nodeType === 1) {\r\n            element = target;\r\n        }\r\n    }\r\n    if (!element) {\r\n        element = document.body;\r\n    }\r\n    return element;\r\n}\n\nexport { GetElement };\n", "import { GetElement } from '../dom/GetElement.js';\n\nlet parent;\r\nfunction Parent(parentElement) {\r\n    return () => {\r\n        if (parentElement) {\r\n            parent = GetElement(parentElement);\r\n        }\r\n    };\r\n}\r\nfunction GetParent() {\r\n    return parent;\r\n}\n\nexport { GetParent, Parent };\n", "let _scenes = [];\r\nfunction Scenes(scenes) {\r\n    return () => {\r\n        _scenes = [].concat(scenes);\r\n    };\r\n}\r\nfunction GetScenes() {\r\n    return _scenes;\r\n}\n\nexport { GetScenes, Scenes };\n", "let _contextAttributes = {\r\n    alpha: false,\r\n    antialias: false,\r\n    depth: false,\r\n    premultipliedAlpha: false\r\n};\r\nfunction WebGLContext(contextAttributes) {\r\n    return () => {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\nfunction GetWebGLContext() {\r\n    return _contextAttributes;\r\n}\n\nexport { GetWebGLContext, WebGLContext };\n", "class FBOSystem {\r\n    constructor(renderer) {\r\n        this.stack = [];\r\n        this.current = null;\r\n        this.renderer = renderer;\r\n    }\r\n    reset() {\r\n        this.stack = [];\r\n        this.current = null;\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, renderer.width, renderer.height);\r\n    }\r\n    add(framebuffer, clear = true, width = 0, height = 0) {\r\n        this.stack.push({ framebuffer, width, height });\r\n        this.set(framebuffer, clear, width, height);\r\n    }\r\n    set(framebuffer, clear = true, width = 0, height = 0) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        if (clear) {\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        if (width > 0) {\r\n            gl.viewport(0, 0, width, height);\r\n        }\r\n        this.current = framebuffer;\r\n    }\r\n    pop() {\r\n        this.stack.pop();\r\n        const len = this.stack.length;\r\n        if (len > 0) {\r\n            const entry = this.stack[len - 1];\r\n            this.set(entry.framebuffer, false, entry.width, entry.height);\r\n        }\r\n        else {\r\n            this.reset();\r\n        }\r\n    }\r\n    rebind() {\r\n        const gl = this.renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.current);\r\n    }\r\n    destroy() {\r\n        this.stack = [];\r\n    }\r\n}\n\nexport { FBOSystem };\n", "let gl;\r\nconst GL = {\r\n    get: () => {\r\n        return gl;\r\n    },\r\n    set: (context) => {\r\n        gl = context;\r\n    }\r\n};\n\nexport { GL };\n", "function GetRGBArray(color, output = []) {\r\n    const r = color >> 16 & 0xFF;\r\n    const g = color >> 8 & 0xFF;\r\n    const b = color & 0xFF;\r\n    const a = (color > 16777215) ? color >>> 24 : 255;\r\n    output[0] = r / 255;\r\n    output[1] = g / 255;\r\n    output[2] = b / 255;\r\n    output[3] = a / 255;\r\n    return output;\r\n}\n\nexport { GetRGBArray };\n", "function ExactEquals(a, b) {\r\n    return (a.a === b.a &&\r\n        a.b === b.b &&\r\n        a.c === b.c &&\r\n        a.d === b.d &&\r\n        a.tx === b.tx &&\r\n        a.ty === b.ty);\r\n}\n\nexport { ExactEquals };\n", "import { GL } from '../GL.js';\n\nfunction CreateFramebuffer(texture, attachment) {\r\n    const gl = GL.get();\r\n    if (!attachment) {\r\n        attachment = gl.COLOR_ATTACHMENT0;\r\n    }\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    return framebuffer;\r\n}\n\nexport { CreateFramebuffer };\n", "import { GL } from '../GL.js';\n\nfunction CreateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    const { parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT } = binding;\r\n    const source = parent.image;\r\n    let width = parent.width;\r\n    let height = parent.height;\r\n    const glTexture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\r\n    if (source) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n        width = source.width;\r\n        height = source.height;\r\n    }\r\n    else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n    if (generateMipmap && isPOT) {\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n    binding.texture = glTexture;\r\n    return glTexture;\r\n}\n\nexport { CreateGLTexture };\n", "import { GL } from '../GL.js';\n\nfunction DeleteFramebuffer(framebuffer) {\r\n    const gl = GL.get();\r\n    if (gl && gl.isFramebuffer(framebuffer)) {\r\n        gl.deleteFramebuffer(framebuffer);\r\n    }\r\n}\n\nexport { DeleteFramebuffer };\n", "import { GL } from '../GL.js';\n\nfunction DeleteGLTexture(texture) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    if (gl.isTexture(texture)) {\r\n        gl.deleteTexture(texture);\r\n    }\r\n}\n\nexport { DeleteGLTexture };\n", "function IsSizePowerOfTwo(width, height) {\r\n    if (width < 1 || height < 1) {\r\n        return false;\r\n    }\r\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\r\n}\n\nexport { IsSizePowerOfTwo };\n", "import { GL } from '../GL.js';\n\nfunction SetGLTextureFilterMode(texture, linear = true) {\r\n    const gl = GL.get();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\r\n}\n\nexport { SetGLTextureFilterMode };\n", "import { GL } from '../GL.js';\n\nfunction UpdateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    const source = binding.parent.image;\r\n    const width = source.width;\r\n    const height = source.height;\r\n    if (width > 0 && height > 0) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n    }\r\n    return binding.texture;\r\n}\n\nexport { UpdateGLTexture };\n", "import { GL } from '../GL.js';\nimport { CreateGLTexture } from './CreateGLTexture.js';\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer.js';\nimport { DeleteGLTexture } from './DeleteGLTexture.js';\nimport { IsSizePowerOfTwo } from '../../../math/pow2/IsSizePowerOfTwo.js';\nimport { SetGLTextureFilterMode } from './SetGLTextureFilterMode.js';\nimport { UpdateGLTexture } from './UpdateGLTexture.js';\n\nclass GLTextureBinding {\r\n    constructor(parent, config = {}) {\r\n        this.index = 0;\r\n        this.indexCounter = -1;\r\n        this.dirtyIndex = true;\r\n        this.unpackPremultiplyAlpha = true;\r\n        this.flipY = false;\r\n        this.isPOT = false;\r\n        this.generateMipmap = false;\r\n        const gl = GL.get();\r\n        this.parent = parent;\r\n        this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\r\n        const { texture = null, framebuffer = null, unpackPremultiplyAlpha = true, minFilter = gl.LINEAR, magFilter = gl.LINEAR, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, generateMipmap = this.isPOT, flipY = false } = config;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmap = generateMipmap;\r\n        this.flipY = flipY;\r\n        this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\r\n        if (framebuffer) {\r\n            this.framebuffer = framebuffer;\r\n        }\r\n        if (texture) {\r\n            this.texture = texture;\r\n        }\r\n        else {\r\n            CreateGLTexture(this);\r\n        }\r\n    }\r\n    setFilter(linear) {\r\n        if (this.texture) {\r\n            SetGLTextureFilterMode(this.texture, linear);\r\n        }\r\n    }\r\n    create() {\r\n        const texture = this.texture;\r\n        if (texture) {\r\n            DeleteGLTexture(texture);\r\n        }\r\n        return CreateGLTexture(this);\r\n    }\r\n    update() {\r\n        const texture = this.texture;\r\n        if (!texture) {\r\n            return CreateGLTexture(this);\r\n        }\r\n        else {\r\n            return UpdateGLTexture(this);\r\n        }\r\n    }\r\n    setIndex(index) {\r\n        this.dirtyIndex = (index !== this.index);\r\n        this.index = index;\r\n    }\r\n    destroy() {\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n        this.parent = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\n\nexport { GLTextureBinding };\n", "import { GL } from '../GL.js';\n\nclass IndexedBuffer {\r\n    constructor(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize) {\r\n        this.batchSize = batchSize;\r\n        this.dataSize = dataSize;\r\n        this.indexSize = indexSize;\r\n        this.vertexElementSize = vertexElementSize;\r\n        this.quadIndexSize = quadIndexSize;\r\n        this.vertexByteSize = vertexElementSize * dataSize;\r\n        this.quadByteSize = this.vertexByteSize * 4;\r\n        this.quadElementSize = vertexElementSize * 4;\r\n        this.bufferByteSize = batchSize * this.quadByteSize;\r\n        this.create();\r\n    }\r\n    create() {\r\n        let ibo = [];\r\n        for (let i = 0; i < (this.batchSize * this.indexSize); i += this.indexSize) {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n        this.data = new ArrayBuffer(this.bufferByteSize);\r\n        this.index = new Uint16Array(ibo);\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n        const gl = GL.get();\r\n        this.vertexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\r\n        this.indexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        ibo = [];\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { IndexedBuffer };\n", "class Frame {\r\n    constructor(texture, key, x, y, width, height) {\r\n        this.trimmed = false;\r\n        this.texture = texture;\r\n        this.key = key;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setPivot(x, y) {\r\n        this.pivot = { x, y };\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setSourceSize(width, height) {\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n    }\r\n    setTrim(width, height, x, y, w, h) {\r\n        this.trimmed = true;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.spriteSourceSizeX = x;\r\n        this.spriteSourceSizeY = y;\r\n        this.spriteSourceSizeWidth = w;\r\n        this.spriteSourceSizeHeight = h;\r\n    }\r\n    getExtent(originX, originY) {\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let left;\r\n        let right;\r\n        let top;\r\n        let bottom;\r\n        if (this.trimmed) {\r\n            left = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            right = left + this.spriteSourceSizeWidth;\r\n            top = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            bottom = top + this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            left = -originX * sourceSizeWidth;\r\n            right = left + sourceSizeWidth;\r\n            top = -originY * sourceSizeHeight;\r\n            bottom = top + sourceSizeHeight;\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    setExtent(child) {\r\n        const transform = child.transform;\r\n        const originX = transform.origin.x;\r\n        const originY = transform.origin.y;\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let x;\r\n        let y;\r\n        let width;\r\n        let height;\r\n        if (this.trimmed) {\r\n            x = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            y = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            width = this.spriteSourceSizeWidth;\r\n            height = this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            x = -originX * sourceSizeWidth;\r\n            y = -originY * sourceSizeHeight;\r\n            width = sourceSizeWidth;\r\n            height = sourceSizeHeight;\r\n        }\r\n        transform.setExtent(x, y, width, height);\r\n    }\r\n    updateUVs() {\r\n        const { x, y, width, height } = this;\r\n        const baseTextureWidth = this.texture.width;\r\n        const baseTextureHeight = this.texture.height;\r\n        this.u0 = x / baseTextureWidth;\r\n        this.v0 = y / baseTextureHeight;\r\n        this.u1 = (x + width) / baseTextureWidth;\r\n        this.v1 = (y + height) / baseTextureHeight;\r\n    }\r\n}\n\nexport { Frame };\n", "import { BindingQueue } from '../renderer/BindingQueue.js';\nimport { Frame } from './Frame.js';\n\nclass Texture {\r\n    constructor(image, width, height) {\r\n        this.key = '';\r\n        if (image) {\r\n            width = image.width;\r\n            height = image.height;\r\n        }\r\n        this.image = image;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.frames = new Map();\r\n        this.data = {};\r\n        this.addFrame('__BASE', 0, 0, width, height);\r\n        BindingQueue.add(this);\r\n    }\r\n    addFrame(key, x, y, width, height) {\r\n        if (this.frames.has(key)) {\r\n            return null;\r\n        }\r\n        const frame = new Frame(this, key, x, y, width, height);\r\n        this.frames.set(key, frame);\r\n        if (!this.firstFrame || this.firstFrame.key === '__BASE') {\r\n            this.firstFrame = frame;\r\n        }\r\n        return frame;\r\n    }\r\n    getFrame(key) {\r\n        if (!key) {\r\n            return this.firstFrame;\r\n        }\r\n        if (key instanceof Frame) {\r\n            key = key.key;\r\n        }\r\n        let frame = this.frames.get(key);\r\n        if (!frame) {\r\n            console.warn(`Frame missing: ${key}`);\r\n            frame = this.firstFrame;\r\n        }\r\n        return frame;\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        const frame = this.frames.get('__BASE');\r\n        frame.setSize(width, height);\r\n    }\r\n    destroy() {\r\n        if (this.binding) {\r\n            this.binding.destroy();\r\n        }\r\n        this.frames.clear();\r\n        this.data = null;\r\n        this.image = null;\r\n        this.firstFrame = null;\r\n    }\r\n}\n\nexport { Texture };\n", "let instance;\r\nconst WebGLRendererInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (renderer) => {\r\n        instance = renderer;\r\n    }\r\n};\n\nexport { WebGLRendererInstance, instance };\n", "import { GetWidth, GetHeight, GetResolution } from '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport { CreateFramebuffer } from '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport { GLTextureBinding } from '../textures/GLTextureBinding.js';\nimport { IndexedBuffer } from '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport { Texture } from '../../../textures/Texture.js';\nimport { WebGLRendererInstance } from '../WebGLRendererInstance.js';\n\nconst shaderSource = {\r\n    fragmentShader: `\r\n#define SHADER_NAME SINGLE_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`,\r\n    vertexShader: `\r\n#define SHADER_NAME SINGLE_QUAD_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aTextureId;\r\nattribute vec4 aTintColor;\r\n\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uCameraMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nvoid main (void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vTintColor = aTintColor;\r\n\r\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n}`\r\n};\r\nclass SingleTextureQuadShader {\r\n    constructor(config = {}) {\r\n        this.attribs = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\r\n        this.uniforms = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0, uTime: 0, uResolution: 0 };\r\n        this.renderToFBO = false;\r\n        this.renderer = WebGLRendererInstance.get();\r\n        const { batchSize = 4096, dataSize = 4, indexSize = 4, vertexElementSize = 6, quadIndexSize = 6, fragmentShader = shaderSource.fragmentShader, vertexShader = shaderSource.vertexShader, width = GetWidth(), height = GetHeight(), resolution = GetResolution(), renderToFBO = false } = config;\r\n        this.buffer = new IndexedBuffer(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize);\r\n        this.createShaders(fragmentShader, vertexShader);\r\n        this.count = 0;\r\n        this.renderToFBO = renderToFBO;\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n        const binding = new GLTextureBinding(texture);\r\n        texture.binding = binding;\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const gl = this.renderer.gl;\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        gl.compileShader(fragmentShader);\r\n        let failed = false;\r\n        let message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, vertexShaderSource);\r\n        gl.compileShader(vertexShader);\r\n        message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        if (failed) {\r\n            return;\r\n        }\r\n        const program = gl.createProgram();\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n        this.program = program;\r\n        for (const key of Object.keys(this.attribs)) {\r\n            const location = gl.getAttribLocation(program, key);\r\n            gl.enableVertexAttribArray(location);\r\n            this.attribs[key] = location;\r\n        }\r\n        for (const key of Object.keys(this.uniforms)) {\r\n            this.uniforms[key] = gl.getUniformLocation(program, key);\r\n        }\r\n    }\r\n    bind(projectionMatrix, cameraMatrix, textureID) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1i(uniforms.uTexture, renderer.textures.textureIndex[textureID]);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n    bindBuffers(indexBuffer, vertexBuffer) {\r\n        const gl = this.renderer.gl;\r\n        const stride = this.buffer.vertexByteSize;\r\n        const attribs = this.attribs;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);\r\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);\r\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);\r\n        this.count = 0;\r\n    }\r\n    draw(count) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const buffer = this.buffer;\r\n        if (count === buffer.batchSize) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.DYNAMIC_DRAW);\r\n        }\r\n        else {\r\n            const view = buffer.vertexViewF32.subarray(0, count * buffer.quadElementSize);\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n        }\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.add(this.framebuffer, true);\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, count * buffer.quadIndexSize, gl.UNSIGNED_SHORT, 0);\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.pop();\r\n        }\r\n    }\r\n    flush() {\r\n        const count = this.count;\r\n        if (count === 0) {\r\n            return false;\r\n        }\r\n        this.draw(count);\r\n        this.prevCount = count;\r\n        this.count = 0;\r\n        return true;\r\n    }\r\n}\n\nexport { SingleTextureQuadShader };\n", "import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport { GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nconst fragmentShader = `\r\n#define SHADER_NAME MULTI_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture[%count%];\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color;\r\n\r\n    %forloop%\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\nclass MultiTextureQuadShader extends SingleTextureQuadShader {\r\n    constructor(config = { fragmentShader }) {\r\n        super(config);\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const maxTextures = GetMaxTextures();\r\n        let src = '';\r\n        for (let i = 1; i < maxTextures; i++) {\r\n            if (i > 1) {\r\n                src += '\\n\\telse ';\r\n            }\r\n            if (i < maxTextures - 1) {\r\n                src += `if (vTextureId < ${i}.5)`;\r\n            }\r\n            src += '\\n\\t{';\r\n            src += `\\n\\t\\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\r\n            src += '\\n\\t}';\r\n        }\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\r\n        super.createShaders(fragmentShaderSource, vertexShaderSource);\r\n    }\r\n    bind(projectionMatrix, cameraMatrix) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1iv(uniforms.uTexture, renderer.textures.textureIndex);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n}\n\nexport { MultiTextureQuadShader };\n", "function Ortho(width, height, near = -1, far = 1) {\r\n    const m00 = -2 * (1 / -width);\r\n    const m11 = -2 * (1 / height);\r\n    const m22 = 2 * (1 / (near - far));\r\n    return new Float32Array([m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1]);\r\n}\n\nexport { Ortho };\n", "import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nclass ShaderSystem {\r\n    constructor(renderer, currentShader) {\r\n        this.renderer = renderer;\r\n        const stackEntry = {\r\n            shader: new currentShader()\r\n        };\r\n        this.stack = [stackEntry];\r\n        this.currentEntry = stackEntry;\r\n        this.current = stackEntry.shader;\r\n        this.singleQuadShader = new SingleTextureQuadShader();\r\n    }\r\n    add(shader, textureID) {\r\n        const stackEntry = { shader, textureID };\r\n        this.stack.push(stackEntry);\r\n        return stackEntry;\r\n    }\r\n    set(shader, textureID) {\r\n        this.flush();\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const success = shader.bind(projectionMatrix, cameraMatrix, textureID);\r\n        if (success) {\r\n            const entry = this.add(shader, textureID);\r\n            this.currentEntry = entry;\r\n            this.current = shader;\r\n        }\r\n        return success;\r\n    }\r\n    setDefault(textureID) {\r\n        this.set(this.singleQuadShader, textureID);\r\n    }\r\n    pop() {\r\n        this.flush();\r\n        const stack = this.stack;\r\n        if (stack.length > 1) {\r\n            stack.pop();\r\n        }\r\n        this.currentEntry = stack[stack.length - 1];\r\n        this.current = this.currentEntry.shader;\r\n    }\r\n    reset() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    flush() {\r\n        if (this.current.flush()) {\r\n            this.renderer.flushTotal++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    rebind() {\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const current = this.currentEntry;\r\n        current.shader.bind(projectionMatrix, cameraMatrix, current.textureID);\r\n    }\r\n    popAndRebind() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    clear() {\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { ShaderSystem };\n", "const fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}'\r\n].join('\\n');\r\nfunction GenerateSrc(maxIfs) {\r\n    let src = '';\r\n    for (let i = 0; i < maxIfs; ++i) {\r\n        if (i > 0) {\r\n            src += '\\nelse ';\r\n        }\r\n        if (i < maxIfs - 1) {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n    return src;\r\n}\r\nfunction CheckShaderMaxIfStatements(maxIfs, gl) {\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    while (true) {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return maxIfs;\r\n}\n\nexport { CheckShaderMaxIfStatements };\n", "import { BindingQueue } from '../../BindingQueue.js';\nimport { SetMaxTextures, GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport './CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport './DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport './SetGLTextureFilterMode.js';\nimport './UpdateGLTexture.js';\nimport { GLTextureBinding } from './GLTextureBinding.js';\nimport { CheckShaderMaxIfStatements } from '../shaders/CheckShaderMaxIfStatements.js';\n\nclass TextureSystem {\r\n    constructor(renderer) {\r\n        this.startActiveTexture = 0;\r\n        this.renderer = renderer;\r\n        this.tempTextures = [];\r\n        this.textureIndex = [];\r\n    }\r\n    init() {\r\n        const gl = this.renderer.gl;\r\n        let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\r\n        const maxConfigTextures = GetMaxTextures();\r\n        if (maxConfigTextures === 0 || (maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures)) {\r\n            SetMaxTextures(maxGPUTextures);\r\n        }\r\n        else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\r\n            maxGPUTextures = Math.max(8, maxConfigTextures);\r\n        }\r\n        const tempTextures = this.tempTextures;\r\n        if (tempTextures.length) {\r\n            tempTextures.forEach(texture => {\r\n                gl.deleteTexture(texture);\r\n            });\r\n        }\r\n        const index = [];\r\n        for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\r\n            const tempTexture = gl.createTexture();\r\n            gl.activeTexture(gl.TEXTURE0 + texturesIndex);\r\n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\r\n            tempTextures[texturesIndex] = tempTexture;\r\n            index.push(texturesIndex);\r\n        }\r\n        this.maxTextures = maxGPUTextures;\r\n        this.textureIndex = index;\r\n        this.currentActiveTexture = 1;\r\n    }\r\n    update() {\r\n        const queue = BindingQueue.get();\r\n        for (let i = 0; i < queue.length; i++) {\r\n            const texture = queue[i];\r\n            if (!texture.binding) {\r\n                texture.binding = new GLTextureBinding(texture);\r\n            }\r\n        }\r\n        BindingQueue.clear();\r\n    }\r\n    reset() {\r\n        const gl = this.renderer.gl;\r\n        const temp = this.tempTextures;\r\n        for (let i = 0; i < temp.length; i++) {\r\n            gl.activeTexture(gl.TEXTURE0 + i);\r\n            gl.bindTexture(gl.TEXTURE_2D, temp[i]);\r\n        }\r\n        this.currentActiveTexture = 1;\r\n        this.startActiveTexture++;\r\n    }\r\n    bind(texture, index = 0) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        binding.setIndex(index);\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n    }\r\n    unbind(index = 0) {\r\n        const gl = this.renderer.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.tempTextures[index]);\r\n        if (index > 0) {\r\n            this.startActiveTexture++;\r\n        }\r\n    }\r\n    request(texture) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        const currentActiveTexture = this.currentActiveTexture;\r\n        if (binding.indexCounter >= this.startActiveTexture) {\r\n            return false;\r\n        }\r\n        binding.indexCounter = this.startActiveTexture;\r\n        if (currentActiveTexture < this.maxTextures) {\r\n            binding.setIndex(currentActiveTexture);\r\n            gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture++;\r\n        }\r\n        else {\r\n            this.renderer.flush();\r\n            this.startActiveTexture++;\r\n            binding.indexCounter = this.startActiveTexture;\r\n            binding.setIndex(1);\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture = 2;\r\n        }\r\n        return true;\r\n    }\r\n}\n\nexport { TextureSystem };\n", "import { GetBackgroundColor } from '../../config/BackgroundColor.js';\nimport { GetWidth, GetHeight, GetResolution } from '../../config/Size.js';\nimport '../BindingQueue.js';\nimport '../../config/MaxTextures.js';\nimport { GetWebGLContext } from '../../config/WebGLContext.js';\nimport { FBOSystem } from './fbo/FBOSystem.js';\nimport { GL } from './GL.js';\nimport { GetRGBArray } from './colors/GetRGBArray.js';\nimport { ExactEquals } from '../../math/matrix2d-funcs/ExactEquals.js';\nimport './fbo/CreateFramebuffer.js';\nimport './textures/CreateGLTexture.js';\nimport './fbo/DeleteFramebuffer.js';\nimport './textures/DeleteGLTexture.js';\nimport '../../math/pow2/IsSizePowerOfTwo.js';\nimport './textures/SetGLTextureFilterMode.js';\nimport './textures/UpdateGLTexture.js';\nimport './textures/GLTextureBinding.js';\nimport './buffers/IndexedBuffer.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport { WebGLRendererInstance } from './WebGLRendererInstance.js';\nimport './shaders/SingleTextureQuadShader.js';\nimport { MultiTextureQuadShader } from './shaders/MultiTextureQuadShader.js';\nimport { Ortho } from './cameras/Ortho.js';\nimport { ShaderSystem } from './shaders/ShaderSystem.js';\nimport './shaders/CheckShaderMaxIfStatements.js';\nimport { TextureSystem } from './textures/TextureSystem.js';\n\nclass WebGLRenderer {\r\n    constructor() {\r\n        this.clearColor = [0, 0, 0, 1];\r\n        this.flushTotal = 0;\r\n        this.clearBeforeRender = true;\r\n        this.optimizeRedraw = false;\r\n        this.autoResize = true;\r\n        this.contextLost = false;\r\n        this.currentCamera = null;\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n        const canvas = document.createElement('canvas');\r\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\r\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\r\n        this.canvas = canvas;\r\n        this.fbo = new FBOSystem(this);\r\n        this.textures = new TextureSystem(this);\r\n        this.initContext();\r\n        WebGLRendererInstance.set(this);\r\n        this.shaders = new ShaderSystem(this, MultiTextureQuadShader);\r\n    }\r\n    initContext() {\r\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\r\n        GL.set(gl);\r\n        this.gl = gl;\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n        this.resize(this.width, this.height, this.resolution);\r\n        this.textures.init();\r\n    }\r\n    resize(width, height, resolution = 1) {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n        const canvas = this.canvas;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        if (this.autoResize) {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n        this.gl.viewport(0, 0, this.width, this.height);\r\n        this.projectionMatrix = Ortho(width, height);\r\n    }\r\n    onContextLost(event) {\r\n        event.preventDefault();\r\n        this.contextLost = true;\r\n    }\r\n    onContextRestored() {\r\n        this.contextLost = false;\r\n        this.initContext();\r\n    }\r\n    setBackgroundColor(color) {\r\n        GetRGBArray(color, this.clearColor);\r\n        return this;\r\n    }\r\n    reset(framebuffer = null, width = this.width, height = this.height) {\r\n        const gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        gl.viewport(0, 0, width, height);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        this.flushTotal = 0;\r\n        this.currentCamera = null;\r\n        this.textures.update();\r\n    }\r\n    render(renderData) {\r\n        if (this.contextLost) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\r\n            return;\r\n        }\r\n        const gl = this.gl;\r\n        if (this.clearBeforeRender) {\r\n            const cls = this.clearColor;\r\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        const worlds = renderData.worldData;\r\n        for (let i = 0; i < worlds.length; i++) {\r\n            const { camera, renderList } = worlds[i];\r\n            if (!this.currentCamera || !ExactEquals(camera.worldTransform, this.currentCamera.worldTransform)) {\r\n                this.flush();\r\n                this.currentCamera = camera;\r\n                this.shaders.rebind();\r\n            }\r\n            renderList.forEach(entry => {\r\n                if (entry.children.length) {\r\n                    this.renderNode(entry);\r\n                }\r\n                else {\r\n                    entry.node.renderGL(this);\r\n                }\r\n            });\r\n        }\r\n        this.flush();\r\n    }\r\n    renderNode(entry) {\r\n        entry.node.renderGL(this);\r\n        entry.children.forEach(child => {\r\n            if (child.children.length > 0) {\r\n                this.renderNode(child);\r\n            }\r\n            else {\r\n                child.node.renderGL(this);\r\n            }\r\n        });\r\n        entry.node.postRenderGL(this);\r\n    }\r\n    flush() {\r\n        this.shaders.flush();\r\n    }\r\n    destroy() {\r\n        WebGLRendererInstance.set(undefined);\r\n    }\r\n}\n\nexport { WebGLRenderer };\n", "import './BackgroundColor.js';\nimport './Size.js';\nimport '../renderer/BindingQueue.js';\nimport { SetRenderer } from './SetRenderer.js';\nimport './MaxTextures.js';\nimport './WebGLContext.js';\nimport '../renderer/webgl1/fbo/FBOSystem.js';\nimport '../renderer/webgl1/GL.js';\nimport '../renderer/webgl1/colors/GetRGBArray.js';\nimport '../math/matrix2d-funcs/ExactEquals.js';\nimport '../renderer/webgl1/fbo/CreateFramebuffer.js';\nimport '../renderer/webgl1/textures/CreateGLTexture.js';\nimport '../renderer/webgl1/fbo/DeleteFramebuffer.js';\nimport '../renderer/webgl1/textures/DeleteGLTexture.js';\nimport '../math/pow2/IsSizePowerOfTwo.js';\nimport '../renderer/webgl1/textures/SetGLTextureFilterMode.js';\nimport '../renderer/webgl1/textures/UpdateGLTexture.js';\nimport '../renderer/webgl1/textures/GLTextureBinding.js';\nimport '../renderer/webgl1/buffers/IndexedBuffer.js';\nimport '../textures/Frame.js';\nimport '../textures/Texture.js';\nimport '../renderer/webgl1/WebGLRendererInstance.js';\nimport '../renderer/webgl1/shaders/SingleTextureQuadShader.js';\nimport '../renderer/webgl1/shaders/MultiTextureQuadShader.js';\nimport '../renderer/webgl1/cameras/Ortho.js';\nimport '../renderer/webgl1/shaders/ShaderSystem.js';\nimport '../renderer/webgl1/shaders/CheckShaderMaxIfStatements.js';\nimport '../renderer/webgl1/textures/TextureSystem.js';\nimport { WebGLRenderer as WebGLRenderer$1 } from '../renderer/webgl1/WebGLRenderer.js';\n\nfunction WebGLRenderer() {\r\n    return () => {\r\n        SetRenderer(WebGLRenderer$1);\r\n    };\r\n}\n\nexport { WebGLRenderer };\n", "import '../GameInstance.js';\nexport { BackgroundColor, GetBackgroundColor } from './BackgroundColor.js';\nexport { Banner, GetBanner } from './Banner.js';\nexport { CanvasContext, GetCanvasContext } from './CanvasContext.js';\nexport { GetHeight, GetResolution, GetWidth, Size } from './Size.js';\nimport '../renderer/BindingQueue.js';\nimport '../renderer/canvas/CanvasRenderer.js';\nexport { GetRenderer, SetRenderer } from './SetRenderer.js';\nexport { CanvasRenderer } from './CanvasRenderer.js';\nexport { DefaultOrigin, originX, originY } from './DefaultOrigin.js';\nexport { GetMaxTextures, MaxTextures, SetMaxTextures } from './MaxTextures.js';\nimport '../dom/GetElement.js';\nexport { GetParent, Parent } from './Parent.js';\nexport { GetScenes, Scenes } from './Scenes.js';\nexport { GetWebGLContext, WebGLContext } from './WebGLContext.js';\nimport '../renderer/webgl1/fbo/FBOSystem.js';\nimport '../renderer/webgl1/GL.js';\nimport '../renderer/webgl1/colors/GetRGBArray.js';\nimport '../math/matrix2d-funcs/ExactEquals.js';\nimport '../renderer/webgl1/fbo/CreateFramebuffer.js';\nimport '../renderer/webgl1/textures/CreateGLTexture.js';\nimport '../renderer/webgl1/fbo/DeleteFramebuffer.js';\nimport '../renderer/webgl1/textures/DeleteGLTexture.js';\nimport '../math/pow2/IsSizePowerOfTwo.js';\nimport '../renderer/webgl1/textures/SetGLTextureFilterMode.js';\nimport '../renderer/webgl1/textures/UpdateGLTexture.js';\nimport '../renderer/webgl1/textures/GLTextureBinding.js';\nimport '../renderer/webgl1/buffers/IndexedBuffer.js';\nimport '../textures/Frame.js';\nimport '../textures/Texture.js';\nimport '../renderer/webgl1/WebGLRendererInstance.js';\nimport '../renderer/webgl1/shaders/SingleTextureQuadShader.js';\nimport '../renderer/webgl1/shaders/MultiTextureQuadShader.js';\nimport '../renderer/webgl1/cameras/Ortho.js';\nimport '../renderer/webgl1/shaders/ShaderSystem.js';\nimport '../renderer/webgl1/shaders/CheckShaderMaxIfStatements.js';\nimport '../renderer/webgl1/textures/TextureSystem.js';\nimport '../renderer/webgl1/WebGLRenderer.js';\nexport { WebGLRenderer } from './WebGLRenderer.js';\n", "function Emit(emitter, event, ...args) {\r\n    if (emitter.events.size === 0 || !emitter.events.has(event)) {\r\n        return false;\r\n    }\r\n    const listeners = emitter.events.get(event);\r\n    for (const ee of listeners) {\r\n        ee.callback.apply(ee.context, args);\r\n        if (ee.once) {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        emitter.events.delete(event);\r\n    }\r\n    return true;\r\n}\n\nexport { Emit };\n", "import { GetElement } from './GetElement.js';\n\nfunction AddToDOM(element, parent) {\r\n    const target = GetElement(parent);\r\n    target.appendChild(element);\r\n    return element;\r\n}\n\nexport { AddToDOM };\n", "function DOMContentLoaded(callback) {\r\n    const readyState = document.readyState;\r\n    if (readyState === 'complete' || readyState === 'interactive') {\r\n        callback();\r\n        return;\r\n    }\r\n    const check = () => {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n        callback();\r\n    };\r\n    if (!document.body) {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (window.hasOwnProperty('cordova')) {\r\n        document.addEventListener('deviceready', check, true);\r\n    }\r\n    else {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n}\n\nexport { DOMContentLoaded };\n", "class EventEmitter {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n}\n\nexport { EventEmitter };\n", "class EventInstance {\r\n    constructor(callback, context, once = false) {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\n\nexport { EventInstance };\n", "import { EventInstance } from './EventInstance.js';\n\nfunction On(emitter, event, callback, context = emitter, once = false) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n    if (!listeners) {\r\n        emitter.events.set(event, new Set([listener]));\r\n    }\r\n    else {\r\n        listeners.add(listener);\r\n    }\r\n    return listener;\r\n}\n\nexport { On };\n", "import './EventInstance.js';\nimport { On } from './On.js';\n\nfunction Once(emitter, event, callback, context = emitter) {\r\n    return On(emitter, event, callback, context, true);\r\n}\n\nexport { Once };\n", "function CreateSceneRenderData() {\r\n    return {\r\n        gameFrame: 0,\r\n        numTotalFrames: 0,\r\n        numDirtyFrames: 0,\r\n        numDirtyCameras: 0,\r\n        worldData: []\r\n    };\r\n}\n\nexport { CreateSceneRenderData };\n", "function ResetSceneRenderData(renderData, gameFrame = 0) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.numTotalFrames = 0;\r\n    renderData.numDirtyFrames = 0;\r\n    renderData.numDirtyCameras = 0;\r\n    renderData.worldData.length = 0;\r\n}\n\nexport { ResetSceneRenderData };\n", "let instance;\r\nconst SceneManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { SceneManagerInstance };\n", "import { GameInstance } from '../GameInstance.js';\nimport { GetScenes } from '../config/Scenes.js';\nimport { Emit } from '../events/Emit.js';\nimport '../events/EventInstance.js';\nimport '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport { CreateSceneRenderData } from './CreateSceneRenderData.js';\nimport { ResetSceneRenderData } from './ResetSceneRenderData.js';\nimport { SceneManagerInstance } from './SceneManagerInstance.js';\n\nclass SceneManager {\r\n    constructor() {\r\n        this.scenes = new Map();\r\n        this.sceneIndex = 0;\r\n        this.flush = false;\r\n        this.renderResult = CreateSceneRenderData();\r\n        this.game = GameInstance.get();\r\n        SceneManagerInstance.set(this);\r\n        Once(this.game, 'boot', () => this.boot());\r\n    }\r\n    boot() {\r\n        GetScenes().forEach(scene => new scene());\r\n    }\r\n    update(delta, time) {\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'update', delta, time);\r\n        }\r\n    }\r\n    render(gameFrame) {\r\n        const results = this.renderResult;\r\n        ResetSceneRenderData(results, gameFrame);\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'render', results);\r\n        }\r\n        if (this.flush) {\r\n            results.numDirtyFrames++;\r\n            this.flush = false;\r\n        }\r\n        return results;\r\n    }\r\n}\n\nexport { SceneManager };\n", "function CreateCanvas(width, height) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas.getContext('2d');\r\n}\n\nexport { CreateCanvas };\n", "let instance;\r\nconst TextureManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { TextureManagerInstance };\n", "import '../renderer/BindingQueue.js';\nimport './Frame.js';\nimport { Texture } from './Texture.js';\nimport { CreateCanvas } from './CreateCanvas.js';\nimport { TextureManagerInstance } from './TextureManagerInstance.js';\n\nclass TextureManager {\r\n    constructor() {\r\n        this.textures = new Map();\r\n        this.createDefaultTextures();\r\n        TextureManagerInstance.set(this);\r\n    }\r\n    createDefaultTextures() {\r\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\r\n        const missing = CreateCanvas(32, 32);\r\n        missing.strokeStyle = '#0f0';\r\n        missing.moveTo(0, 0);\r\n        missing.lineTo(32, 32);\r\n        missing.stroke();\r\n        missing.strokeRect(0.5, 0.5, 31, 31);\r\n        this.add('__MISSING', new Texture(missing.canvas));\r\n    }\r\n    get(key) {\r\n        const textures = this.textures;\r\n        if (textures.has(key)) {\r\n            return textures.get(key);\r\n        }\r\n        else {\r\n            return textures.get('__MISSING');\r\n        }\r\n    }\r\n    has(key) {\r\n        return this.textures.has(key);\r\n    }\r\n    add(key, source) {\r\n        let texture;\r\n        const textures = this.textures;\r\n        if (!textures.has(key)) {\r\n            if (source instanceof Texture) {\r\n                texture = source;\r\n            }\r\n            else {\r\n                texture = new Texture(source);\r\n            }\r\n            texture.key = key;\r\n            textures.set(key, texture);\r\n        }\r\n        return texture;\r\n    }\r\n}\n\nexport { TextureManager };\n", "import { GameInstance } from './GameInstance.js';\nimport { GetBanner } from './config/Banner.js';\nimport './renderer/BindingQueue.js';\nimport { GetRenderer } from './config/SetRenderer.js';\nimport './dom/GetElement.js';\nimport { GetParent } from './config/Parent.js';\nimport './config/Scenes.js';\nimport './textures/Frame.js';\nimport './textures/Texture.js';\nimport { Emit } from './events/Emit.js';\nimport { AddToDOM } from './dom/AddToDOM.js';\nimport { DOMContentLoaded } from './dom/DOMContentLoaded.js';\nimport { EventEmitter } from './events/EventEmitter.js';\nimport './events/EventInstance.js';\nimport './events/On.js';\nimport './events/Once.js';\nimport './scenes/CreateSceneRenderData.js';\nimport './scenes/ResetSceneRenderData.js';\nimport './scenes/SceneManagerInstance.js';\nimport { SceneManager } from './scenes/SceneManager.js';\nimport './textures/CreateCanvas.js';\nimport './textures/TextureManagerInstance.js';\nimport { TextureManager } from './textures/TextureManager.js';\n\nclass Game extends EventEmitter {\r\n    constructor(...settings) {\r\n        super();\r\n        this.VERSION = '4.0.0-beta1';\r\n        this.isBooted = false;\r\n        this.isPaused = false;\r\n        this.willUpdate = true;\r\n        this.willRender = true;\r\n        this.lastTick = 0;\r\n        this.elapsed = 0;\r\n        this.frame = 0;\r\n        GameInstance.set(this);\r\n        DOMContentLoaded(() => this.boot(settings));\r\n    }\r\n    boot(settings) {\r\n        settings.forEach(setting => setting());\r\n        const renderer = GetRenderer();\r\n        this.renderer = new renderer();\r\n        this.textureManager = new TextureManager();\r\n        this.sceneManager = new SceneManager();\r\n        const parent = GetParent();\r\n        if (parent) {\r\n            AddToDOM(this.renderer.canvas, parent);\r\n        }\r\n        this.isBooted = true;\r\n        GetBanner();\r\n        Emit(this, 'boot');\r\n        this.lastTick = performance.now();\r\n        this.step(this.lastTick);\r\n    }\r\n    pause() {\r\n        this.isPaused = true;\r\n    }\r\n    resume() {\r\n        this.isPaused = false;\r\n        this.lastTick = performance.now();\r\n    }\r\n    step(time) {\r\n        const delta = time - this.lastTick;\r\n        this.lastTick = time;\r\n        this.elapsed += delta;\r\n        if (!this.isPaused) {\r\n            if (this.willUpdate) {\r\n                this.sceneManager.update(delta, time);\r\n                Emit(this, 'update', delta, time);\r\n            }\r\n            if (this.willRender) {\r\n                this.renderer.render(this.sceneManager.render(this.frame));\r\n            }\r\n        }\r\n        this.frame++;\r\n        GameInstance.setFrame(this.frame);\r\n        GameInstance.setElapsed(this.elapsed);\r\n        requestAnimationFrame(now => this.step(now));\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { Game };\n", "function GetConfigValue(config, property, defaultValue) {\r\n    if (Object.prototype.hasOwnProperty.call(config, property)) {\r\n        return config[property];\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\n\nexport { GetConfigValue };\n", "import { SceneManagerInstance } from './SceneManagerInstance.js';\nimport { GetConfigValue } from './GetConfigValue.js';\n\nfunction Install(scene, config = {}) {\r\n    const sceneManager = SceneManagerInstance.get();\r\n    const size = sceneManager.scenes.size;\r\n    const sceneIndex = sceneManager.sceneIndex;\r\n    const firstScene = (size === 0);\r\n    if (typeof config === 'string') {\r\n        scene.key = config;\r\n    }\r\n    else if (config || (!config && firstScene)) {\r\n        scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex.toString());\r\n    }\r\n    if (sceneManager.scenes.has(scene.key)) {\r\n        console.warn('Scene key already in use: ' + scene.key);\r\n    }\r\n    else {\r\n        sceneManager.scenes.set(scene.key, scene);\r\n        sceneManager.flush = true;\r\n        sceneManager.sceneIndex++;\r\n    }\r\n}\n\nexport { Install };\n", "import { GameInstance } from '../GameInstance.js';\nimport './SceneManagerInstance.js';\nimport './GetConfigValue.js';\nimport { Install } from './Install.js';\n\nclass Scene {\r\n    constructor(config) {\r\n        this.game = GameInstance.get();\r\n        this.events = new Map();\r\n        Install(this, config);\r\n    }\r\n}\n\nexport { Scene };\n", "function DepthFirstSearch(parent) {\r\n    const stack = [parent];\r\n    const output = [];\r\n    while (stack.length > 0) {\r\n        const node = stack.shift();\r\n        output.push(node);\r\n        const numChildren = node.numChildren;\r\n        if (numChildren > 0) {\r\n            for (let i = numChildren - 1; i >= 0; i--) {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n    output.shift();\r\n    return output;\r\n}\n\nexport { DepthFirstSearch };\n", "function GetChildIndex(parent, child) {\r\n    return parent.children.indexOf(child);\r\n}\n\nexport { GetChildIndex };\n", "function RemoveChildAt(parent, index) {\r\n    const children = parent.children;\r\n    let child;\r\n    if (index >= 0 && index < children.length) {\r\n        const removed = children.splice(index, 1);\r\n        if (removed[0]) {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChildAt };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { RemoveChildAt } from './RemoveChildAt.js';\n\nfunction RemoveChild(parent, child) {\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex > -1) {\r\n        RemoveChildAt(parent, currentIndex);\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChild };\n", "const AddedToWorldEvent = 'addedtoworld';\n\nexport { AddedToWorldEvent };\n", "const RemovedFromWorldEvent = 'removedfromworld';\n\nexport { RemovedFromWorldEvent };\n", "import { AddedToWorldEvent } from '../gameobjects/events/AddedToWorldEvent.js';\nimport { RemovedFromWorldEvent } from '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\n\nfunction SetWorld(world, ...children) {\r\n    children.forEach(child => {\r\n        if (child.world) {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n        child.world = world;\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n    return children;\r\n}\n\nexport { SetWorld };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport { SetWorld } from './SetWorld.js';\n\nfunction SetParent(parent, ...children) {\r\n    children.forEach(child => {\r\n        if (child.parent) {\r\n            RemoveChild(child.parent, child);\r\n        }\r\n        child.parent = parent;\r\n    });\r\n    const parentWorld = parent.world;\r\n    if (parentWorld) {\r\n        SetWorld(parentWorld, ...DepthFirstSearch(parent));\r\n    }\r\n    return children;\r\n}\n\nexport { SetParent };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChild(parent, child) {\r\n    parent.children.push(child);\r\n    SetParent(parent, child);\r\n    child.transform.updateWorld();\r\n    return child;\r\n}\n\nexport { AddChild };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChildAt(parent, index, child) {\r\n    const children = parent.children;\r\n    if (index >= 0 && index <= children.length) {\r\n        SetParent(parent, child);\r\n        children.splice(index, 0, child);\r\n        child.transform.updateWorld();\r\n    }\r\n    return child;\r\n}\n\nexport { AddChildAt };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport './SetParent.js';\nimport { AddChild } from './AddChild.js';\n\nfunction AddChildren(parent, ...children) {\r\n    children.forEach(child => {\r\n        AddChild(parent, child);\r\n    });\r\n    return children;\r\n}\n\nexport { AddChildren };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChildrenAt(parent, index, ...children) {\r\n    const parentChildren = parent.children;\r\n    if (index >= 0 && index <= parentChildren.length) {\r\n        children.reverse().forEach(child => {\r\n            children.splice(index, 0, child);\r\n            SetParent(parent, child);\r\n            child.transform.updateWorld();\r\n        });\r\n    }\r\n    return children;\r\n}\n\nexport { AddChildrenAt };\n", "function AddPosition(x, y, ...children) {\r\n    children.forEach(child => {\r\n        child.x += x;\r\n        child.y += y;\r\n    });\r\n    return children;\r\n}\n\nexport { AddPosition };\n", "function AddRotation(rotation, ...children) {\r\n    children.forEach(child => {\r\n        child.rotation += rotation;\r\n    });\r\n    return children;\r\n}\n\nexport { AddRotation };\n", "function AddScale(scaleX, scaleY, ...children) {\r\n    children.forEach(child => {\r\n        child.scaleX += scaleX;\r\n        child.scaleY += scaleY;\r\n    });\r\n    return children;\r\n}\n\nexport { AddScale };\n", "function AddSkew(skewX, skewY, ...children) {\r\n    children.forEach(child => {\r\n        child.skewX += skewX;\r\n        child.skewY += skewY;\r\n    });\r\n    return children;\r\n}\n\nexport { AddSkew };\n", "const DIRTY_CONST = {\r\n    CLEAR: 0,\r\n    TRANSFORM: 1,\r\n    UPDATE: 2,\r\n    CHILD_CACHE: 4,\r\n    POST_RENDER: 8,\r\n    COLORS: 16,\r\n    BOUNDS: 32,\r\n    TEXTURE: 64,\r\n    FRAME: 128,\r\n    ALPHA: 256,\r\n    CHILD: 512,\r\n    DEFAULT: 1 + 2 + 16 + 32,\r\n    USER1: 536870912,\r\n    USER2: 1073741824,\r\n    USER3: 2147483648,\r\n    USER4: 4294967296\r\n};\n\nexport { DIRTY_CONST };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction BringChildToTop(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex < parentChildren.length) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.push(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { BringChildToTop };\n", "function DepthFirstSearchRecursiveNested(parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const node = parent.children[i];\r\n        const children = [];\r\n        output.push({ node, children });\r\n        if (node.numChildren > 0) {\r\n            DepthFirstSearchRecursiveNested(node, children);\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { DepthFirstSearchRecursiveNested };\n", "import { DepthFirstSearchRecursiveNested } from './DepthFirstSearchRecursiveNested.js';\n\nfunction GetInfo(entry) {\r\n    const legend = (entry.numChildren > 0) ? 'Parent' : 'Child';\r\n    return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\r\n}\r\nfunction LogChildren(entry) {\r\n    console.group(GetInfo(entry.node));\r\n    entry.children.forEach(child => {\r\n        if (child.children.length > 0) {\r\n            LogChildren(child);\r\n        }\r\n        else {\r\n            console.log(GetInfo(child.node));\r\n        }\r\n    });\r\n    console.groupEnd();\r\n}\r\nfunction ConsoleTreeChildren(parent) {\r\n    const entries = DepthFirstSearchRecursiveNested(parent);\r\n    if (parent.world === parent) {\r\n        console.group('World');\r\n    }\r\n    else {\r\n        console.group(GetInfo(parent));\r\n    }\r\n    entries.forEach(entry => {\r\n        if (entry.children.length) {\r\n            LogChildren(entry);\r\n        }\r\n        else {\r\n            console.log(GetInfo(entry.node));\r\n        }\r\n    });\r\n    console.groupEnd();\r\n}\n\nexport { ConsoleTreeChildren };\n", "function CountMatchingChildren(parent, property, value) {\r\n    const children = parent.children;\r\n    let total = 0;\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            total++;\r\n        }\r\n    });\r\n    return total;\r\n}\n\nexport { CountMatchingChildren };\n", "function DepthFirstSearchRecursive(parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const child = parent.children[i];\r\n        output.push(child);\r\n        if (child.numChildren > 0) {\r\n            DepthFirstSearchRecursive(child, output);\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { DepthFirstSearchRecursive };\n", "function RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\r\n    const children = parent.children;\r\n    if (endIndex === undefined) {\r\n        endIndex = children.length;\r\n    }\r\n    const range = endIndex - beginIndex;\r\n    if (range > 0 && range <= endIndex) {\r\n        const removed = children.splice(beginIndex, range);\r\n        removed.forEach(child => {\r\n            child.parent = null;\r\n        });\r\n        return removed;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\n\nexport { RemoveChildrenBetween };\n", "import { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction DestroyChildren(parent, beginIndex = 0, endIndex) {\r\n    const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    removed.forEach(child => {\r\n        child.destroy();\r\n    });\r\n}\n\nexport { DestroyChildren };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction FindChildByName(parent, searchString) {\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (regex.test(child.name)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { FindChildByName };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction FindChildrenByName(parent, searchString) {\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n    const results = [];\r\n    children.forEach(child => {\r\n        if (regex.test(child.name)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { FindChildrenByName };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction GetAllChildren(parent, property, value) {\r\n    const children = DepthFirstSearch(parent);\r\n    if (!property) {\r\n        return children;\r\n    }\r\n    const results = [];\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { GetAllChildren };\n", "function GetChildAt(parent, index) {\r\n    const children = parent.children;\r\n    if (index < 0 || index > children.length) {\r\n        throw new Error(`Index out of bounds: ${index}`);\r\n    }\r\n    return children[index];\r\n}\n\nexport { GetChildAt };\n", "function GetChildren(parent, property, value) {\r\n    const children = parent.children;\r\n    if (!property) {\r\n        return [...children];\r\n    }\r\n    const results = [];\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { GetChildren };\n", "function DistanceBetweenPoints(a, b) {\r\n    const dx = a.x - b.x;\r\n    const dy = a.y - b.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\n\nexport { DistanceBetweenPoints };\n", "import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints.js';\n\nfunction GetClosestChild(parent, point) {\r\n    const children = parent.children;\r\n    let closest = null;\r\n    let distance = 0;\r\n    children.forEach(child => {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n        if (!closest || childDistance < distance) {\r\n            closest = child;\r\n            distance = childDistance;\r\n        }\r\n    });\r\n    return closest;\r\n}\n\nexport { GetClosestChild };\n", "function GetFirstChild(parent, property, value) {\r\n    const children = parent.children;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { GetFirstChild };\n", "import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints.js';\n\nfunction GetFurthestChild(parent, point) {\r\n    const children = parent.children;\r\n    let furthest = null;\r\n    let distance = 0;\r\n    children.forEach(child => {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n        if (!furthest || childDistance > distance) {\r\n            furthest = child;\r\n            distance = childDistance;\r\n        }\r\n    });\r\n    return furthest;\r\n}\n\nexport { GetFurthestChild };\n", "function GetLastChild(parent, property, value) {\r\n    const children = parent.children;\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n        const child = children[i];\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { GetLastChild };\n", "function GetParents(child) {\r\n    const parents = [];\r\n    while (child.parent) {\r\n        parents.push(child.parent);\r\n        child = child.parent;\r\n    }\r\n    return parents;\r\n}\n\nexport { GetParents };\n", "function GetRandomChild(parent, startIndex = 0, length) {\r\n    const children = parent.children;\r\n    if (!length) {\r\n        length = children.length;\r\n    }\r\n    const randomIndex = startIndex + Math.floor(Math.random() * length);\r\n    return children[randomIndex];\r\n}\n\nexport { GetRandomChild };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildDown(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex > 0) {\r\n        const child2 = parentChildren[currentIndex - 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildDown };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildTo(parent, child, index) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n    if (currentIndex !== index) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.splice(index, 0, child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildTo };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildUp(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex > 0) {\r\n        const child2 = parentChildren[currentIndex + 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildUp };\n", "function RectangleToRectangle(rectA, rectB) {\r\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0) {\r\n        return false;\r\n    }\r\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\r\n}\n\nexport { RectangleToRectangle };\n", "import { RectangleToRectangle } from '../geom/intersects/RectangleToRectangle.js';\n\nfunction Overlap(source, ...targets) {\r\n    const sourceBounds = source.bounds.get();\r\n    for (let i = 0; i < targets.length; i++) {\r\n        const target = targets[i];\r\n        const targetBounds = target.bounds.get();\r\n        if (RectangleToRectangle(sourceBounds, targetBounds)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\nexport { Overlap };\n", "import './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\n\nfunction RemoveChildren(parent, ...children) {\r\n    children.forEach(child => {\r\n        RemoveChild(parent, child);\r\n    });\r\n    return children;\r\n}\n\nexport { RemoveChildren };\n", "import { RemoveChildAt } from './RemoveChildAt.js';\n\nfunction RemoveChildrenAt(parent, ...index) {\r\n    const removed = [];\r\n    index.sort((a, b) => a - b);\r\n    index.reverse().forEach(i => {\r\n        const child = RemoveChildAt(parent, i);\r\n        if (child) {\r\n            removed.push(child);\r\n        }\r\n    });\r\n    return removed;\r\n}\n\nexport { RemoveChildrenAt };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\r\n    const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    SetParent(newParent, ...moved);\r\n    moved.forEach(child => {\r\n        child.transform.updateWorld();\r\n    });\r\n    return moved;\r\n}\n\nexport { ReparentChildren };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction RotateChildrenLeft(parent, total = 1) {\r\n    const parentChildren = parent.children;\r\n    let child = null;\r\n    for (let i = 0; i < total; i++) {\r\n        child = parentChildren.shift();\r\n        parentChildren.push(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { RotateChildrenLeft };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction RotateChildrenRight(parent, total = 1) {\r\n    const parentChildren = parent.children;\r\n    let child = null;\r\n    for (let i = 0; i < total; i++) {\r\n        child = parentChildren.pop();\r\n        parentChildren.unshift(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { RotateChildrenRight };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction SendChildToBack(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex > 0) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.unshift(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { SendChildToBack };\n", "function SetBounds(x, y, width, height, ...children) {\r\n    children.forEach(child => {\r\n        child.bounds.set(x, y, width, height);\r\n    });\r\n    return children;\r\n}\n\nexport { SetBounds };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction SetChildrenValue(parent, property, value) {\r\n    const children = DepthFirstSearch(parent);\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor) {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n    return children;\r\n}\n\nexport { SetChildrenValue };\n", "function SetName(name, ...children) {\r\n    children.forEach(child => {\r\n        child.name = name;\r\n    });\r\n    return children;\r\n}\n\nexport { SetName };\n", "function SetOrigin(originX, originY, ...children) {\r\n    children.forEach(child => {\r\n        child.setOrigin(originX, originY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetOrigin };\n", "function SetPosition(x, y, ...children) {\r\n    children.forEach(child => {\r\n        child.setPosition(x, y);\r\n    });\r\n    return children;\r\n}\n\nexport { SetPosition };\n", "function SetRotation(rotation, ...children) {\r\n    children.forEach(child => {\r\n        child.rotation = rotation;\r\n    });\r\n    return children;\r\n}\n\nexport { SetRotation };\n", "function SetScale(scaleX, scaleY, ...children) {\r\n    children.forEach(child => {\r\n        child.setScale(scaleX, scaleY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetScale };\n", "function SetSize(width, height, ...children) {\r\n    children.forEach(child => {\r\n        child.setSize(width, height);\r\n    });\r\n    return children;\r\n}\n\nexport { SetSize };\n", "function SetSkew(skewX, skewY, ...children) {\r\n    children.forEach(child => {\r\n        child.setSkew(skewX, skewY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetSkew };\n", "function SetType(type, ...children) {\r\n    children.forEach(child => {\r\n        child.type = type;\r\n    });\r\n    return children;\r\n}\n\nexport { SetType };\n", "function SetValue(property, value, ...children) {\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor) {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n    return children;\r\n}\n\nexport { SetValue };\n", "function SetVisible(visible, ...children) {\r\n    children.forEach(child => {\r\n        child.visible = visible;\r\n    });\r\n    return children;\r\n}\n\nexport { SetVisible };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction ShuffleChildren(parent) {\r\n    const children = parent.children;\r\n    for (let i = children.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = children[i];\r\n        children[i] = children[j];\r\n        children[j] = temp;\r\n        temp.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return children;\r\n}\n\nexport { ShuffleChildren };\n", "import { GetChildIndex } from './GetChildIndex.js';\n\nfunction SwapChildren(child1, child2) {\r\n    if (child1.parent === child2.parent) {\r\n        const children = child1.parent.children;\r\n        const index1 = GetChildIndex(child1.parent, child1);\r\n        const index2 = GetChildIndex(child2.parent, child2);\r\n        if (index1 !== index2) {\r\n            children[index1] = child2;\r\n            children[index2] = child1;\r\n        }\r\n    }\r\n}\n\nexport { SwapChildren };\n", "export { DepthFirstSearch } from './DepthFirstSearch.js';\nexport { GetChildIndex } from './GetChildIndex.js';\nexport { RemoveChildAt } from './RemoveChildAt.js';\nexport { RemoveChild } from './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nexport { SetWorld } from './SetWorld.js';\nexport { SetParent } from './SetParent.js';\nexport { AddChild } from './AddChild.js';\nexport { AddChildAt } from './AddChildAt.js';\nexport { AddChildren } from './AddChildren.js';\nexport { AddChildrenAt } from './AddChildrenAt.js';\nexport { AddPosition } from './AddPosition.js';\nexport { AddRotation } from './AddRotation.js';\nexport { AddScale } from './AddScale.js';\nexport { AddSkew } from './AddSkew.js';\nimport '../gameobjects/DIRTY_CONST.js';\nexport { BringChildToTop } from './BringChildToTop.js';\nexport { DepthFirstSearchRecursiveNested } from './DepthFirstSearchRecursiveNested.js';\nexport { ConsoleTreeChildren } from './ConsoleTreeChildren.js';\nexport { CountMatchingChildren } from './CountMatchingChildren.js';\nexport { DepthFirstSearchRecursive } from './DepthFirstSearchRecursive.js';\nexport { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\nexport { DestroyChildren } from './DestroyChildren.js';\nexport { FindChildByName } from './FindChildByName.js';\nexport { FindChildrenByName } from './FindChildrenByName.js';\nexport { GetAllChildren } from './GetAllChildren.js';\nexport { GetChildAt } from './GetChildAt.js';\nexport { GetChildren } from './GetChildren.js';\nimport '../math/distance/DistanceBetweenPoints.js';\nexport { GetClosestChild } from './GetClosestChild.js';\nexport { GetFirstChild } from './GetFirstChild.js';\nexport { GetFurthestChild } from './GetFurthestChild.js';\nexport { GetLastChild } from './GetLastChild.js';\nexport { GetParents } from './GetParents.js';\nexport { GetRandomChild } from './GetRandomChild.js';\nexport { MoveChildDown } from './MoveChildDown.js';\nexport { MoveChildTo } from './MoveChildTo.js';\nexport { MoveChildUp } from './MoveChildUp.js';\nimport '../geom/intersects/RectangleToRectangle.js';\nexport { Overlap } from './Overlap.js';\nexport { RemoveChildren } from './RemoveChildren.js';\nexport { RemoveChildrenAt } from './RemoveChildrenAt.js';\nexport { ReparentChildren } from './ReparentChildren.js';\nexport { RotateChildrenLeft } from './RotateChildrenLeft.js';\nexport { RotateChildrenRight } from './RotateChildrenRight.js';\nexport { SendChildToBack } from './SendChildToBack.js';\nexport { SetBounds } from './SetBounds.js';\nexport { SetChildrenValue } from './SetChildrenValue.js';\nexport { SetName } from './SetName.js';\nexport { SetOrigin } from './SetOrigin.js';\nexport { SetPosition } from './SetPosition.js';\nexport { SetRotation } from './SetRotation.js';\nexport { SetScale } from './SetScale.js';\nexport { SetSize } from './SetSize.js';\nexport { SetSkew } from './SetSkew.js';\nexport { SetType } from './SetType.js';\nexport { SetValue } from './SetValue.js';\nexport { SetVisible } from './SetVisible.js';\nexport { ShuffleChildren } from './ShuffleChildren.js';\nexport { SwapChildren } from './SwapChildren.js';\n", "class Matrix2D {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n    set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        return this;\r\n    }\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    toArray() {\r\n        return [this.a, this.b, this.c, this.d, this.tx, this.ty];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n}\n\nexport { Matrix2D };\n", "function Contains(rect, x, y) {\r\n    if (rect.width <= 0 || rect.height <= 0) {\r\n        return false;\r\n    }\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n}\n\nexport { Contains };\n", "import { Contains } from './Contains.js';\n\nclass Rectangle {\r\n    constructor(x = 0, y = 0, width = 0, height = 0) {\r\n        this.set(x, y, width, height);\r\n    }\r\n    set(x = 0, y = 0, width = 0, height = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n    contains(x, y) {\r\n        return Contains(this, x, y);\r\n    }\r\n    set right(value) {\r\n        if (value <= this.x) {\r\n            this.width = 0;\r\n        }\r\n        else {\r\n            this.width = value - this.x;\r\n        }\r\n    }\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    set bottom(value) {\r\n        if (value <= this.y) {\r\n            this.height = 0;\r\n        }\r\n        else {\r\n            this.height = value - this.y;\r\n        }\r\n    }\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n}\n\nexport { Rectangle };\n", "function NOOP() {\r\n}\n\nexport { NOOP };\n", "import { NOOP } from '../../utils/NOOP.js';\n\nclass Vec2Callback {\r\n    constructor(callback, x = 0, y = 0, compareValue = false) {\r\n        this.compareValue = false;\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback = callback;\r\n        this.compareValue = compareValue;\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback(this);\r\n        return this;\r\n    }\r\n    destroy() {\r\n        this.callback = NOOP;\r\n    }\r\n    set x(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._x = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set y(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._y = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n}\n\nexport { Vec2Callback };\n", "function Wrap(value, min, max) {\r\n    const range = max - min;\r\n    return (min + ((((value - min) % range) + range) % range));\r\n}\n\nexport { Wrap };\n", "import { Wrap } from '../Wrap.js';\n\nfunction WrapAngle(angle) {\r\n    return Wrap(angle, -Math.PI, Math.PI);\r\n}\n\nexport { WrapAngle };\n", "import { GameInstance } from '../GameInstance.js';\nimport { Matrix2D } from '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport { Rectangle } from '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport { Vec2Callback } from '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport { WrapAngle } from '../math/angle/WrapAngle.js';\n\nclass Camera {\r\n    constructor() {\r\n        this._rotation = 0;\r\n        this.type = 'Camera';\r\n        this.dirtyRender = true;\r\n        const game = GameInstance.get();\r\n        this.renderer = game.renderer;\r\n        this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]);\r\n        this.bounds = new Rectangle();\r\n        this.worldTransform = new Matrix2D();\r\n        this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\r\n        this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\r\n        this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\r\n        this.reset();\r\n    }\r\n    updateTransform() {\r\n        const matrix = this.matrix;\r\n        const px = this.position.x;\r\n        const py = this.position.y;\r\n        const sx = this.scale.x;\r\n        const sy = this.scale.y;\r\n        const ox = -px + (this.width * this.origin.x);\r\n        const oy = -py + (this.height * this.origin.y);\r\n        const z = Math.sin(this.rotation);\r\n        const w = Math.cos(this.rotation);\r\n        const z2 = z + z;\r\n        const zz = z * z2;\r\n        const wz = w * z2;\r\n        const out0 = (1 - zz) * sx;\r\n        const out1 = wz * sx;\r\n        const out4 = -wz * sy;\r\n        const out5 = (1 - zz) * sy;\r\n        matrix[0] = out0;\r\n        matrix[1] = out1;\r\n        matrix[4] = out4;\r\n        matrix[5] = out5;\r\n        matrix[12] = px + ox - (out0 * ox + out4 * oy);\r\n        matrix[13] = py + oy - (out1 * ox + out5 * oy);\r\n        this.worldTransform.set(w * sx, z * sx, -z * sy, w * sy, -px, -py);\r\n        const bw = this.width * (1 / sx);\r\n        const bh = this.height * (1 / sy);\r\n        this.bounds.set(ox - (bw / 2), oy - (bh / 2), bw, bh);\r\n        this.dirtyRender = true;\r\n    }\r\n    reset() {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n    set rotation(value) {\r\n        if (value !== this._rotation) {\r\n            this._rotation = WrapAngle(value);\r\n            this.updateTransform();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    destroy() {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.origin.destroy();\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\n\nexport { Camera };\n", "import { GameInstance } from '../GameInstance.js';\nimport { Matrix2D } from '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport { Rectangle } from '../geom/rectangle/Rectangle.js';\n\nclass StaticCamera {\r\n    constructor() {\r\n        this.type = 'StaticCamera';\r\n        this.dirtyRender = true;\r\n        const game = GameInstance.get();\r\n        this.renderer = game.renderer;\r\n        this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n        this.bounds = new Rectangle();\r\n        this.worldTransform = new Matrix2D();\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n    destroy() {\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\n\nexport { StaticCamera };\n", "const DestroyEvent = 'destroy';\n\nexport { DestroyEvent };\n", "const PostUpdateEvent = 'postupdate';\n\nexport { PostUpdateEvent };\n", "const UpdateEvent = 'update';\n\nexport { UpdateEvent };\n", "import { EventInstance } from './EventInstance.js';\n\nfunction Off(emitter, event, callback, context, once) {\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n    if (!callback) {\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance) {\r\n        listeners.delete(callback);\r\n    }\r\n    else {\r\n        const hasContext = !context;\r\n        const hasOnce = (once !== undefined);\r\n        for (const listener of listeners) {\r\n            if ((listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)) {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        events.delete(event);\r\n    }\r\n    return emitter;\r\n}\n\nexport { Off };\n", "function GetVertices(transform) {\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y, right, bottom } = transform.extent;\r\n    const x0 = (x * a) + (y * c) + tx;\r\n    const y0 = (x * b) + (y * d) + ty;\r\n    const x1 = (x * a) + (bottom * c) + tx;\r\n    const y1 = (x * b) + (bottom * d) + ty;\r\n    const x2 = (right * a) + (bottom * c) + tx;\r\n    const y2 = (right * b) + (bottom * d) + ty;\r\n    const x3 = (right * a) + (y * c) + tx;\r\n    const y3 = (right * b) + (y * d) + ty;\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\n\nexport { GetVertices };\n", "import '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { GetVertices } from '../transform/GetVertices.js';\n\nclass BoundsComponent {\r\n    constructor(entity) {\r\n        this.fixed = false;\r\n        this.includeChildren = true;\r\n        this.visibleOnly = true;\r\n        this.entity = entity;\r\n        this.area = new Rectangle();\r\n    }\r\n    set(x, y, width, height) {\r\n        this.area.set(x, y, width, height);\r\n    }\r\n    get() {\r\n        if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\r\n            this.update();\r\n        }\r\n        return this.area;\r\n    }\r\n    updateLocal() {\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(this.entity.transform);\r\n        const x = Math.min(x0, x1, x2, x3);\r\n        const y = Math.min(y0, y1, y2, y3);\r\n        const right = Math.max(x0, x1, x2, x3);\r\n        const bottom = Math.max(y0, y1, y2, y3);\r\n        return this.area.set(x, y, right - x, bottom - y);\r\n    }\r\n    update() {\r\n        const bounds = this.updateLocal();\r\n        this.entity.clearDirty(DIRTY_CONST.BOUNDS);\r\n        if (!this.includeChildren || !this.entity.numChildren) {\r\n            return bounds;\r\n        }\r\n        const visibleOnly = this.visibleOnly;\r\n        const children = this.entity.children;\r\n        let x = bounds.x;\r\n        let y = bounds.y;\r\n        let right = bounds.right;\r\n        let bottom = bounds.bottom;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            if (!child || (visibleOnly && !child.visible)) {\r\n                continue;\r\n            }\r\n            const childBounds = child.bounds.get();\r\n            if (childBounds.x < x) {\r\n                x = childBounds.x;\r\n            }\r\n            if (childBounds.y < y) {\r\n                y = childBounds.y;\r\n            }\r\n            if (childBounds.right > right) {\r\n                right = childBounds.right;\r\n            }\r\n            if (childBounds.bottom > bottom) {\r\n                bottom = childBounds.bottom;\r\n            }\r\n        }\r\n        return bounds.set(x, y, right - x, bottom - y);\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.area = null;\r\n    }\r\n}\n\nexport { BoundsComponent };\n", "class InputComponent {\r\n    constructor(entity) {\r\n        this.enabled = false;\r\n        this.enabledChildren = true;\r\n        this.entity = entity;\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.hitArea = null;\r\n    }\r\n}\n\nexport { InputComponent };\n", "class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.set(x, y);\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n    toString() {\r\n        return `[x=${this.x}, y=${this.y}]`;\r\n    }\r\n}\n\nexport { Vec2 };\n", "function UpdateLocalTransform(transform) {\r\n    const local = transform.local;\r\n    const x = transform.position.x;\r\n    const y = transform.position.y;\r\n    const rotation = transform.rotation;\r\n    const scaleX = transform.scale.x;\r\n    const scaleY = transform.scale.y;\r\n    const skewX = transform.skew.x;\r\n    const skewY = transform.skew.y;\r\n    local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\r\n}\n\nexport { UpdateLocalTransform };\n", "function Copy(src, target) {\r\n    return target.set(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\n\nexport { Copy };\n", "import { Copy } from '../../../math/matrix2d/Copy.js';\n\nfunction UpdateWorldTransform(gameObject) {\r\n    const parent = gameObject.parent;\r\n    const transform = gameObject.transform;\r\n    const lt = transform.local;\r\n    const wt = transform.world;\r\n    if (!parent) {\r\n        Copy(lt, wt);\r\n    }\r\n    else if (transform.passthru) {\r\n        Copy(parent.transform.world, wt);\r\n    }\r\n    else {\r\n        const { a, b, c, d, tx, ty } = lt;\r\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.transform.world;\r\n        wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\r\n    }\r\n}\n\nexport { UpdateWorldTransform };\n", "import { Matrix2D } from '../../../math/matrix2d/Matrix2D.js';\nimport '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport '../../../utils/NOOP.js';\nimport { Vec2Callback } from '../../../math/vec2/Vec2Callback.js';\nimport { originX, originY } from '../../../config/DefaultOrigin.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { Vec2 } from '../../../math/vec2/Vec2.js';\nimport { UpdateLocalTransform } from './UpdateLocalTransform.js';\nimport '../../../math/matrix2d/Copy.js';\nimport { UpdateWorldTransform } from './UpdateWorldTransform.js';\n\nclass TransformComponent {\r\n    constructor(entity, x = 0, y = 0) {\r\n        this.passthru = false;\r\n        this._rotation = 0;\r\n        this.entity = entity;\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n        this.position = new Vec2Callback(() => this.update(), x, y);\r\n        this.scale = new Vec2Callback(() => this.update(), 1, 1, true);\r\n        this.skew = new Vec2Callback(() => this.update(), 0, 0, true);\r\n        this.origin = new Vec2Callback(() => this.updateExtent(), originX, originY);\r\n        this.extent = new Rectangle();\r\n    }\r\n    update() {\r\n        this.updateLocal();\r\n        this.updateWorld();\r\n    }\r\n    updateLocal() {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateLocalTransform(this);\r\n    }\r\n    updateWorld() {\r\n        const entity = this.entity;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateWorldTransform(entity);\r\n        if (entity.numChildren) {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n    updateChildren() {\r\n        const children = this.entity.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            child.transform.updateWorld();\r\n        }\r\n    }\r\n    globalToLocal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        const id = 1 / ((a * d) + (c * -b));\r\n        out.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        out.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n        return out;\r\n    }\r\n    localToGlobal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        out.x = (a * x) + (c * y) + tx;\r\n        out.y = (b * x) + (d * y) + ty;\r\n        return out;\r\n    }\r\n    setExtent(x, y, width, height) {\r\n        this.extent.set(x, y, width, height);\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    updateExtent(width, height) {\r\n        const extent = this.extent;\r\n        const entity = this.entity;\r\n        if (width !== undefined) {\r\n            extent.width = width;\r\n        }\r\n        if (height !== undefined) {\r\n            extent.height = height;\r\n        }\r\n        extent.x = -(this.origin.x) * extent.width;\r\n        extent.y = -(this.origin.y) * extent.height;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    set rotation(value) {\r\n        if (value !== this._rotation) {\r\n            this._rotation = value;\r\n            this.update();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    destroy() {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.skew.destroy();\r\n        this.origin.destroy();\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.skew = null;\r\n        this.origin = null;\r\n        this.extent = null;\r\n    }\r\n}\n\nexport { TransformComponent };\n", "import { GameInstance } from '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport './events/AddedToWorldEvent.js';\nimport { DestroyEvent } from './events/DestroyEvent.js';\nimport './events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport { DIRTY_CONST } from './DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport { DestroyChildren } from '../display/DestroyChildren.js';\nimport { ReparentChildren } from '../display/ReparentChildren.js';\nimport './components/transform/GetVertices.js';\nimport { BoundsComponent } from './components/bounds/BoundsComponent.js';\nimport { InputComponent } from './components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport './components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport './components/transform/UpdateWorldTransform.js';\nimport { TransformComponent } from './components/transform/TransformComponent.js';\n\nclass GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        this.type = 'GameObject';\r\n        this.name = '';\r\n        this.willUpdate = true;\r\n        this.willUpdateChildren = true;\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = false;\r\n        this.dirty = 0;\r\n        this.dirtyFrame = 0;\r\n        this.visible = true;\r\n        this.children = [];\r\n        this.events = new Map();\r\n        this.transform = new TransformComponent(this, x, y);\r\n        this.bounds = new BoundsComponent(this);\r\n        this.input = new InputComponent(this);\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n        this.transform.update();\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender);\r\n    }\r\n    isDirty(flag) {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n    clearDirty(flag) {\r\n        if (this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n        }\r\n        return this;\r\n    }\r\n    setDirty(flag, flag2) {\r\n        if (!this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n        if (!this.isDirty(flag2)) {\r\n            this.dirty ^= flag2;\r\n        }\r\n        return this;\r\n    }\r\n    update(delta, time) {\r\n        if (this.willUpdateChildren) {\r\n            const children = this.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child && child.willUpdate) {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n        this.postUpdate(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n    }\r\n    renderGL(renderer) {\r\n    }\r\n    renderCanvas(renderer) {\r\n    }\r\n    postRenderGL(renderer) {\r\n    }\r\n    postRenderCanvas(renderer) {\r\n    }\r\n    get numChildren() {\r\n        return this.children.length;\r\n    }\r\n    destroy(reparentChildren) {\r\n        if (reparentChildren) {\r\n            ReparentChildren(this, reparentChildren);\r\n        }\r\n        else {\r\n            DestroyChildren(this);\r\n        }\r\n        Emit(this, DestroyEvent, this);\r\n        this.transform.destroy();\r\n        this.bounds.destroy();\r\n        this.input.destroy();\r\n        this.events.clear();\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\n\nexport { GameObject };\n", "const WorldRenderEvent = 'worldrender';\n\nexport { WorldRenderEvent };\n", "const WorldShutdownEvent = 'worldshutdown';\n\nexport { WorldShutdownEvent };\n", "import { WorldRenderEvent } from './world/events/WorldRenderEvent.js';\nimport { WorldShutdownEvent } from './world/events/WorldShutdownEvent.js';\n\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    WorldRenderEvent: WorldRenderEvent,\n    WorldShutdownEvent: WorldShutdownEvent\n});\n\nexport { index as i };\n", "function CalculateTotalRenderable(entry, renderData) {\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n        renderData.dirtyFrame++;\r\n    }\r\n    entry.children.forEach(child => {\r\n        if (child.children.length > 0) {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\n\nexport { CalculateTotalRenderable };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction HasDirtyChildren(parent) {\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\r\n        return true;\r\n    }\r\n    const stack = [parent];\r\n    while (stack.length > 0) {\r\n        const entry = stack.pop();\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            return true;\r\n        }\r\n        const numChildren = entry.children.length;\r\n        if (numChildren > 0) {\r\n            for (let i = 0; i < numChildren; i++) {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n    stack.length = 0;\r\n    return false;\r\n}\n\nexport { HasDirtyChildren };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\nimport { HasDirtyChildren } from './HasDirtyChildren.js';\n\nfunction UpdateCachedLayers(cachedLayers, dirtyCamera) {\r\n    cachedLayers.forEach(layer => {\r\n        if (dirtyCamera || HasDirtyChildren(layer)) {\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else {\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\n\nexport { UpdateCachedLayers };\n", "function WorldDepthFirstSearch(cachedLayers, parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const node = parent.children[i];\r\n        if (node.isRenderable()) {\r\n            const children = [];\r\n            const entry = { node, children };\r\n            output.push(entry);\r\n            if (node.willRenderChildren && node.numChildren > 0) {\r\n                if (node.willCacheChildren) {\r\n                    cachedLayers.push(entry);\r\n                }\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { WorldDepthFirstSearch };\n", "import '../gameobjects/DIRTY_CONST.js';\nimport { CalculateTotalRenderable } from './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport { UpdateCachedLayers } from './UpdateCachedLayers.js';\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch.js';\n\nfunction BuildRenderList(world) {\r\n    const cachedLayers = [];\r\n    const stack = [];\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n    const renderData = world.renderData;\r\n    if (cachedLayers.length > 0) {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n    entries.forEach(entry => {\r\n        if (entry.children.length) {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n    renderData.renderList = entries;\r\n    if (world.forceRefresh) {\r\n        renderData.dirtyFrame++;\r\n        world.forceRefresh = false;\r\n    }\r\n}\n\nexport { BuildRenderList };\n", "function MergeRenderData(sceneRenderData, worldRenderData) {\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n    if (worldRenderData.camera.dirtyRender) {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\n\nexport { MergeRenderData };\n", "function ResetWorldRenderData(renderData, gameFrame) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n    renderData.renderList.length = 0;\r\n}\n\nexport { ResetWorldRenderData };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport { DestroyEvent } from '../gameobjects/events/DestroyEvent.js';\nimport { PostUpdateEvent } from '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { UpdateEvent } from '../gameobjects/events/UpdateEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport { RemoveChildren } from '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport { Off } from '../events/Off.js';\nimport { On } from '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport { GameObject } from '../gameobjects/GameObject.js';\nimport { WorldRenderEvent } from './events/WorldRenderEvent.js';\nimport { WorldShutdownEvent } from './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport { BuildRenderList } from './BuildRenderList.js';\nimport { MergeRenderData } from './MergeRenderData.js';\nimport { ResetWorldRenderData } from './ResetWorldRenderData.js';\n\nclass BaseWorld extends GameObject {\r\n    constructor(scene) {\r\n        super();\r\n        this.forceRefresh = false;\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n        this.events = new Map();\r\n        this._updateListener = On(scene, 'update', (delta, time) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n    update(delta, time) {\r\n        if (!this.willUpdate) {\r\n            return;\r\n        }\r\n        Emit(this, UpdateEvent, delta, time, this);\r\n        super.update(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n        Emit(this, PostUpdateEvent, delta, time, this);\r\n    }\r\n    render(sceneRenderData) {\r\n        const renderData = this.renderData;\r\n        ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\r\n        if (!this.willRender || !this.visible) {\r\n            return;\r\n        }\r\n        BuildRenderList(this);\r\n        Emit(this, WorldRenderEvent, renderData, this);\r\n        MergeRenderData(sceneRenderData, renderData);\r\n        if (this.camera) {\r\n            this.camera.dirtyRender = false;\r\n        }\r\n    }\r\n    shutdown() {\r\n        const scene = this.scene;\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n        RemoveChildren(this);\r\n        Emit(this, WorldShutdownEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.reset();\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        Emit(this, DestroyEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.destroy();\r\n        }\r\n        this.events.clear();\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\n\nexport { BaseWorld };\n", "function CreateWorldRenderData(camera) {\r\n    return {\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0,\r\n        renderList: []\r\n    };\r\n}\n\nexport { CreateWorldRenderData };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport { StaticCamera } from '../camera/StaticCamera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport './BuildRenderList.js';\nimport './MergeRenderData.js';\nimport './ResetWorldRenderData.js';\nimport { BaseWorld } from './BaseWorld.js';\nimport { CreateWorldRenderData } from './CreateWorldRenderData.js';\n\nclass StaticWorld extends BaseWorld {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.type = 'StaticWorld';\r\n        this.camera = new StaticCamera();\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\n\nexport { StaticWorld };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport '../math/angle/WrapAngle.js';\nimport { Camera } from '../camera/Camera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport './BuildRenderList.js';\nimport './MergeRenderData.js';\nimport './ResetWorldRenderData.js';\nimport { BaseWorld } from './BaseWorld.js';\nimport { CreateWorldRenderData } from './CreateWorldRenderData.js';\n\nclass World extends BaseWorld {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.enableCameraCull = true;\r\n        this.type = 'World';\r\n        this.camera = new Camera();\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\n\nexport { World };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport '../math/angle/WrapAngle.js';\nimport '../camera/Camera.js';\nimport '../camera/StaticCamera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nexport { i as Events } from '../index-664c5328.js';\nexport { CalculateTotalRenderable } from './CalculateTotalRenderable.js';\nexport { HasDirtyChildren } from './HasDirtyChildren.js';\nexport { UpdateCachedLayers } from './UpdateCachedLayers.js';\nexport { WorldDepthFirstSearch } from './WorldDepthFirstSearch.js';\nexport { BuildRenderList } from './BuildRenderList.js';\nexport { MergeRenderData } from './MergeRenderData.js';\nexport { ResetWorldRenderData } from './ResetWorldRenderData.js';\nexport { BaseWorld } from './BaseWorld.js';\nexport { CreateWorldRenderData } from './CreateWorldRenderData.js';\nexport { StaticWorld } from './StaticWorld.js';\nexport { World } from './World.js';\n", "import '../../renderer/BindingQueue.js';\nimport '../Frame.js';\nimport { Texture } from '../Texture.js';\nimport { CreateCanvas } from '../CreateCanvas.js';\n\nfunction CanvasTexture(width = 32, height = 32) {\r\n    const ctx = CreateCanvas(width, height);\r\n    return new Texture(ctx.canvas);\r\n}\n\nexport { CanvasTexture };\n", "import { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CanvasTexture } from '@phaserjs/phaser/textures/types/CanvasTexture';\r\n\r\n/**\r\n * Draw on canvas texture.\r\n *\r\n * @param {(string | Texture)} key Texture key, or texture object.\r\n * @param {(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void} callback Drawing callback.\r\n * @param {*} [scope] Context of drawing callback.\r\n * @param {number} [resolution=1] Resolution of canvas.\r\n * @returns {Texture} Texture object.\r\n */\r\nexport let DrawCanvasTexture = function (\r\n    key: string | Texture,\r\n    callback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void,\r\n    scope?: any,\r\n    resolution: number = 1\r\n): Texture {\r\n\r\n    let texture: Texture;\r\n    if (typeof (key) === 'string') {\r\n        let textureManager = TextureManagerInstance.get();\r\n        if (!textureManager.has(key)) {\r\n            textureManager.add(key, CanvasTexture());\r\n        }\r\n        texture = textureManager.get(key);\r\n    } else {\r\n        texture = key;\r\n    }\r\n\r\n    let canvas = texture.image as HTMLCanvasElement;\r\n    let context = canvas.getContext('2d');\r\n\r\n    if (scope) {\r\n        callback.call(scope, canvas, context);\r\n    } else {\r\n        callback(canvas, context);\r\n    }\r\n\r\n    texture.setSize(\r\n        canvas.width / resolution,\r\n        canvas.height / resolution\r\n    );\r\n    if (texture.binding) {\r\n        texture.binding.update();\r\n    }\r\n\r\n    return texture;\r\n}", "import { GetCanvasGradientCallbackType } from '../types/GetCanvasGradientCallbackType';\r\n\r\nexport let GetStyle = function (\r\n    style: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D\r\n): string | CanvasGradient | CanvasPattern {\r\n\r\n    switch (typeof (style)) {\r\n        case 'number': return `#${style.toString(16)}`;\r\n        case 'function': return style(canvas, context);\r\n        default: return style;\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport let CreateCircleTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        let x = canvas.width / 2;\r\n        let y = canvas.height / 2;\r\n        let rx = (width - lineWidth) / 2;\r\n        let ry = (height - lineWidth) / 2;\r\n\r\n        context.beginPath();\r\n        context.ellipse(x, y, rx, ry, 0, 0, (2 * Math.PI));\r\n\r\n        if (fillStyle) {\r\n            context.fillStyle = GetStyle(fillStyle, canvas, context);\r\n            context.fill();\r\n        }\r\n\r\n        if (strokeStyle) {\r\n            context.strokeStyle = GetStyle(strokeStyle, canvas, context);\r\n            context.lineWidth = lineWidth;\r\n            context.stroke();\r\n        }\r\n\r\n    });\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport let CreateRectangleTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        context.beginPath();\r\n\r\n        let halfLineWidth = lineWidth / 2;\r\n        context.rect(\r\n            halfLineWidth,\r\n            halfLineWidth,\r\n            (width - lineWidth),\r\n            (height - lineWidth)\r\n        );\r\n\r\n        if (fillStyle) {\r\n            context.fillStyle = GetStyle(fillStyle, canvas, context);\r\n            context.fill();\r\n        }\r\n\r\n        if (strokeStyle) {\r\n            context.strokeStyle = GetStyle(strokeStyle, canvas, context);\r\n            context.lineWidth = lineWidth;\r\n            context.stroke();\r\n        }\r\n\r\n    });\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { Vec2Type } from '../../utils/types/VectorType';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    points: Vec2Type[],\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number,\r\n    lineJoin?: 'bevel' | 'round' | 'miter'\r\n}\r\n\r\nexport let CreatePolygonTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        points,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2,\r\n        lineJoin = 'round'\r\n    }: IConfig = { points: [] }\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n        if (points.length === 0) {\r\n            canvas.width = 1;\r\n            canvas.height = 1;\r\n            return;\r\n        }\r\n\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        let minX = GetMinProperty(points, 'x');\r\n        let minY = GetMinProperty(points, 'y');\r\n        let maxX = GetMaxProperty(points, 'x');\r\n        let maxY = GetMaxProperty(points, 'y');\r\n\r\n        let width = maxX - minX ;\r\n        let height = maxY - minY ;\r\n\r\n        let halfW = width / 2;\r\n        let halfH = height / 2;\r\n        let halfLW = lineWidth / 2;\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        context.beginPath();\r\n        context.lineJoin = lineJoin;\r\n\r\n        let point = points[0];\r\n\r\n        context.moveTo(\r\n            Indent((point.x - minX), halfW, halfLW),\r\n            Indent((point.y - minY), halfH, halfLW)\r\n        );\r\n\r\n        for (let i = 1, cnt = points.length; i < cnt; i++) {\r\n            point = points[i];\r\n            context.lineTo(\r\n                Indent((point.x - minX), halfW, halfLW),\r\n                Indent((point.y - minY), halfH, halfLW)\r\n            )\r\n        }\r\n\r\n        context.closePath();\r\n\r\n        if (fillStyle) {\r\n            context.fillStyle = GetStyle(fillStyle, canvas, context);\r\n            context.fill();\r\n        }\r\n\r\n        if (strokeStyle) {\r\n            context.strokeStyle = GetStyle(strokeStyle, canvas, context);\r\n            context.lineWidth = lineWidth;\r\n            context.stroke();\r\n        }\r\n\r\n    });\r\n}\r\n\r\nlet GetMaxProperty = function (\r\n    items: object[],\r\n    key: string\r\n): number {\r\n\r\n    let result = -Infinity;\r\n    for (let i = 0, cnt = items.length; i < cnt; i++) {\r\n        result = Math.max(result, items[i][key]);\r\n    }\r\n    return result;\r\n}\r\n\r\nlet GetMinProperty = function (\r\n    items: object[],\r\n    key: string\r\n): number {\r\n\r\n    let result = Infinity;\r\n    for (let i = 0, cnt = items.length; i < cnt; i++) {\r\n        result = Math.min(result, items[i][key]);\r\n    }\r\n    return result;\r\n}\r\n\r\nlet Indent = function (\r\n    value: number,\r\n    halfBound: number,\r\n    offset: number\r\n): number {\r\n\r\n    if (value < halfBound) {\r\n        return (value + offset);\r\n    } else if (value > halfBound) {\r\n        return (value - offset);\r\n    } else {\r\n        return value;\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CreatePolygonTexture } from './CreatePolygonTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\n\r\nexport enum Direction {\r\n    right = 0,\r\n    down = 1,\r\n    left = 2,\r\n    up = 3\r\n}\r\n\r\nexport interface IConfig {\r\n    direction?: Direction,\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport let CreateTriangleTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        direction = Direction.right,\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    let x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number;\r\n    switch (direction) {\r\n        case Direction.down:\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width / 2;\r\n            y3 = height;\r\n            break;\r\n        case Direction.left:\r\n            x1 = 0;\r\n            y1 = height / 2;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        case Direction.up:\r\n            x1 = 0;\r\n            y1 = height;\r\n            x2 = width / 2;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        default: // Direction.right\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = 0;\r\n            y2 = height;\r\n            x3 = width;\r\n            y3 = height / 2;\r\n            break;\r\n    }\r\n\r\n    return CreatePolygonTexture(key, {\r\n        points: [\r\n            { x: x1, y: y1 },\r\n            { x: x2, y: y2 },\r\n            { x: x3, y: y3 }\r\n        ],\r\n        fillStyle: fillStyle,\r\n        strokeStyle: strokeStyle,\r\n        lineWidth: lineWidth\r\n    })\r\n}", "import { DrawCanvasTexture } from './DrawCanvasTexture';\r\n\r\nimport { CreateCircleTexture } from './CreateCircleTexture';\r\nimport { CreateRectangleTexture } from './CreateRectangleTexture';\r\nimport { CreatePolygonTexture } from './CreatePolygonTexture';\r\nimport { CreateTriangleTexture } from './CreateTriangleTexture';\r\n\r\nexport {\r\n    DrawCanvasTexture,\r\n\r\n    CreateCircleTexture,\r\n    CreateRectangleTexture,\r\n    CreatePolygonTexture,\r\n    CreateTriangleTexture\r\n}", "function BatchTexturedQuad(sprite, renderer) {\r\n    const texture = sprite.texture;\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n    const binding = texture.binding;\r\n    if (shader.count === buffer.batchSize) {\r\n        renderer.flush();\r\n    }\r\n    const data = sprite.vertexData;\r\n    renderer.textures.request(texture);\r\n    const textureIndex = binding.index;\r\n    data[4] = textureIndex;\r\n    data[10] = textureIndex;\r\n    data[16] = textureIndex;\r\n    data[22] = textureIndex;\r\n    const offset = shader.count * buffer.quadElementSize;\r\n    buffer.vertexViewF32.set(data, offset);\r\n    const color = sprite.vertexColor;\r\n    const U32 = buffer.vertexViewU32;\r\n    U32[offset + 5] = color[0];\r\n    U32[offset + 11] = color[2];\r\n    U32[offset + 17] = color[3];\r\n    U32[offset + 23] = color[1];\r\n    shader.count++;\r\n}\n\nexport { BatchTexturedQuad };\n", "import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport { GameObject } from '../GameObject.js';\n\nclass Container extends GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        super(x, y);\r\n        this._alpha = 1;\r\n        this.type = 'Container';\r\n    }\r\n    setSize(width, height = width) {\r\n        this.transform.updateExtent(width, height);\r\n        return this;\r\n    }\r\n    setPosition(x, y) {\r\n        this.transform.position.set(x, y);\r\n        return this;\r\n    }\r\n    setOrigin(x, y = x) {\r\n        this.transform.origin.set(x, y);\r\n        return this;\r\n    }\r\n    setSkew(x, y = x) {\r\n        this.transform.skew.set(x, y);\r\n        return this;\r\n    }\r\n    setScale(x, y = x) {\r\n        this.transform.scale.set(x, y);\r\n        return this;\r\n    }\r\n    setRotation(value) {\r\n        this.transform.rotation = value;\r\n        return this;\r\n    }\r\n    set width(value) {\r\n        this.transform.updateExtent(value);\r\n    }\r\n    get width() {\r\n        return this.transform.extent.width;\r\n    }\r\n    set height(value) {\r\n        this.transform.updateExtent(undefined, value);\r\n    }\r\n    get height() {\r\n        return this.transform.extent.height;\r\n    }\r\n    set x(value) {\r\n        this.transform.position.x = value;\r\n    }\r\n    get x() {\r\n        return this.transform.position.x;\r\n    }\r\n    set y(value) {\r\n        this.transform.position.y = value;\r\n    }\r\n    get y() {\r\n        return this.transform.position.y;\r\n    }\r\n    set originX(value) {\r\n        this.transform.origin.x = value;\r\n    }\r\n    get originX() {\r\n        return this.transform.origin.x;\r\n    }\r\n    set originY(value) {\r\n        this.transform.origin.y = value;\r\n    }\r\n    get originY() {\r\n        return this.transform.origin.y;\r\n    }\r\n    set skewX(value) {\r\n        this.transform.skew.x = value;\r\n    }\r\n    get skewX() {\r\n        return this.transform.skew.x;\r\n    }\r\n    set skewY(value) {\r\n        this.transform.skew.y = value;\r\n    }\r\n    get skewY() {\r\n        return this.transform.skew.y;\r\n    }\r\n    set scaleX(value) {\r\n        this.transform.scale.x = value;\r\n    }\r\n    get scaleX() {\r\n        return this.transform.scale.x;\r\n    }\r\n    set scaleY(value) {\r\n        this.transform.scale.y = value;\r\n    }\r\n    get scaleY() {\r\n        return this.transform.scale.y;\r\n    }\r\n    set rotation(value) {\r\n        this.transform.rotation = value;\r\n    }\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            this.setDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n}\n\nexport { Container };\n", "function DrawTexturedQuad(sprite, renderer) {\r\n    const frame = sprite.frame;\r\n    if (!frame) {\r\n        return;\r\n    }\r\n    const ctx = renderer.ctx;\r\n    const transform = sprite.transform;\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y } = transform.extent;\r\n    ctx.save();\r\n    ctx.setTransform(a, b, c, d, tx, ty);\r\n    ctx.globalAlpha = sprite.alpha;\r\n    ctx.drawImage(frame.texture.image, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\r\n    ctx.restore();\r\n}\n\nexport { DrawTexturedQuad };\n", "function PackColor(rgb, alpha) {\r\n    const ua = ((alpha * 255) | 0) & 0xFF;\r\n    return ((ua << 24) | rgb) >>> 0;\r\n}\n\nexport { PackColor };\n", "import { PackColor } from './PackColor.js';\n\nfunction PackColors(sprite) {\r\n    const alpha = sprite.vertexAlpha;\r\n    const tint = sprite.vertexTint;\r\n    const color = sprite.vertexColor;\r\n    color[0] = PackColor(tint[0], alpha[0]);\r\n    color[1] = PackColor(tint[1], alpha[1]);\r\n    color[2] = PackColor(tint[2], alpha[2]);\r\n    color[3] = PackColor(tint[3], alpha[3]);\r\n    return sprite;\r\n}\n\nexport { PackColors };\n", "function SetFrame(texture, key, ...children) {\r\n    const frame = texture.getFrame(key);\r\n    const { u0, u1, v0, v1, pivot } = frame;\r\n    children.forEach(child => {\r\n        if (!child || frame === child.frame) {\r\n            return;\r\n        }\r\n        child.frame = frame;\r\n        if (pivot) {\r\n            child.setOrigin(pivot.x, pivot.y);\r\n        }\r\n        child.frame.setExtent(child);\r\n        child.hasTexture = true;\r\n        const data = child.vertexData;\r\n        data[2] = u0;\r\n        data[3] = v0;\r\n        data[8] = u0;\r\n        data[9] = v1;\r\n        data[14] = u1;\r\n        data[15] = v1;\r\n        data[20] = u1;\r\n        data[21] = v0;\r\n    });\r\n    return children;\r\n}\n\nexport { SetFrame };\n", "import '../../renderer/BindingQueue.js';\nimport '../../textures/Frame.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance.js';\nimport { SetFrame } from './SetFrame.js';\n\nfunction SetTexture(key, frame, ...children) {\r\n    if (!key) {\r\n        children.forEach(child => {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else {\r\n        let texture;\r\n        if (key instanceof Texture) {\r\n            texture = key;\r\n        }\r\n        else {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n        if (!texture) {\r\n            console.warn(`Invalid Texture key: ${key}`);\r\n        }\r\n        else {\r\n            children.forEach(child => {\r\n                child.texture = texture;\r\n            });\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n    return children;\r\n}\n\nexport { SetTexture };\n", "import { GetVertices } from '../components/transform/GetVertices.js';\n\nfunction UpdateVertices(sprite) {\r\n    const data = sprite.vertexData;\r\n    const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(sprite.transform);\r\n    data[0] = x0;\r\n    data[1] = y0;\r\n    data[6] = x1;\r\n    data[7] = y1;\r\n    data[12] = x2;\r\n    data[13] = y2;\r\n    data[18] = x3;\r\n    data[19] = y3;\r\n    return sprite;\r\n}\n\nexport { UpdateVertices };\n", "import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../renderer/BindingQueue.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../../textures/TextureManagerInstance.js';\nimport { BatchTexturedQuad } from '../../renderer/webgl1/draw/BatchTexturedQuad.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport '../GameObject.js';\nimport { Container } from '../container/Container.js';\nimport { DrawTexturedQuad } from '../../renderer/canvas/draw/DrawTexturedQuad.js';\nimport '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\nimport { SetFrame } from './SetFrame.js';\nimport { SetTexture } from './SetTexture.js';\nimport { UpdateVertices } from './UpdateVertices.js';\n\nclass Sprite extends Container {\r\n    constructor(x, y, texture, frame) {\r\n        super(x, y);\r\n        this.hasTexture = false;\r\n        this._tint = 0xffffff;\r\n        this.type = 'Sprite';\r\n        this.vertexData = new Float32Array(24).fill(0);\r\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\r\n        this.vertexAlpha = new Float32Array(4).fill(1);\r\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\r\n        this.setTexture(texture, frame);\r\n    }\r\n    setTexture(key, frame) {\r\n        SetTexture(key, frame, this);\r\n        return this;\r\n    }\r\n    setFrame(key) {\r\n        SetFrame(this.texture, key, this);\r\n        return this;\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\r\n    }\r\n    preRender() {\r\n        if (this.isDirty(DIRTY_CONST.COLORS)) {\r\n            PackColors(this);\r\n            this.clearDirty(DIRTY_CONST.COLORS);\r\n        }\r\n        if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            UpdateVertices(this);\r\n            this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n    renderGL(renderer) {\r\n        this.preRender();\r\n        BatchTexturedQuad(this, renderer);\r\n    }\r\n    renderCanvas(renderer) {\r\n        this.preRender();\r\n        DrawTexturedQuad(this, renderer);\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            const vertexAlpha = this.vertexAlpha;\r\n            vertexAlpha[0] = value;\r\n            vertexAlpha[1] = value;\r\n            vertexAlpha[2] = value;\r\n            vertexAlpha[3] = value;\r\n            this.setDirty(DIRTY_CONST.ALPHA);\r\n        }\r\n    }\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value) {\r\n        if (value !== this._tint) {\r\n            this._tint = value;\r\n            const vertexTint = this.vertexTint;\r\n            vertexTint[0] = value;\r\n            vertexTint[1] = value;\r\n            vertexTint[2] = value;\r\n            vertexTint[3] = value;\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n        this.vertexData = null;\r\n        this.vertexColor = null;\r\n        this.vertexAlpha = null;\r\n        this.vertexTint = null;\r\n    }\r\n}\n\nexport { Sprite };\n", "import '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\n\nfunction SetAlpha(alpha, ...children) {\r\n    children.forEach(child => {\r\n        const vertexAlpha = child.vertexAlpha;\r\n        vertexAlpha[0] = alpha;\r\n        vertexAlpha[1] = alpha;\r\n        vertexAlpha[2] = alpha;\r\n        vertexAlpha[3] = alpha;\r\n        PackColors(child);\r\n    });\r\n    return children;\r\n}\n\nexport { SetAlpha };\n", "import '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\n\nfunction SetQuadAlpha(topLeft, topRight, bottomLeft, bottomRight, ...children) {\r\n    children.forEach(child => {\r\n        const alpha = child.vertexAlpha;\r\n        alpha[0] = topLeft;\r\n        alpha[1] = topRight;\r\n        alpha[2] = bottomLeft;\r\n        alpha[3] = bottomRight;\r\n        PackColors(child);\r\n    });\r\n    return children;\r\n}\n\nexport { SetQuadAlpha };\n", "import '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\n\nfunction SetQuadTint(topLeft, topRight, bottomLeft, bottomRight, ...children) {\r\n    children.forEach(child => {\r\n        const tint = child.vertexTint;\r\n        tint[0] = topLeft;\r\n        tint[1] = topRight;\r\n        tint[2] = bottomLeft;\r\n        tint[3] = bottomRight;\r\n        PackColors(child);\r\n    });\r\n    return children;\r\n}\n\nexport { SetQuadTint };\n", "import '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\n\nfunction SetTint(tint, ...children) {\r\n    children.forEach(child => {\r\n        const vertexTint = child.vertexTint;\r\n        vertexTint[0] = tint;\r\n        vertexTint[1] = tint;\r\n        vertexTint[2] = tint;\r\n        vertexTint[3] = tint;\r\n        PackColors(child);\r\n    });\r\n    return children;\r\n}\n\nexport { SetTint };\n", "import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../renderer/BindingQueue.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../../textures/TextureManagerInstance.js';\nimport '../../renderer/webgl1/draw/BatchTexturedQuad.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport '../GameObject.js';\nimport '../container/Container.js';\nimport '../../renderer/canvas/draw/DrawTexturedQuad.js';\nimport '../../renderer/webgl1/colors/PackColor.js';\nimport '../../renderer/webgl1/colors/PackColors.js';\nexport { SetFrame } from './SetFrame.js';\nexport { SetTexture } from './SetTexture.js';\nexport { UpdateVertices } from './UpdateVertices.js';\nexport { Sprite } from './Sprite.js';\nexport { SetAlpha } from './SetAlpha.js';\nexport { SetQuadAlpha } from './SetQuadAlpha.js';\nexport { SetQuadTint } from './SetQuadTint.js';\nexport { SetTint } from './SetTint.js';\n", "import { BackgroundColor, Parent, Scenes, Size, WebGLRenderer } from '@phaserjs/phaser/config';\r\nimport { Game } from '@phaserjs/phaser/Game';\r\nimport { Scene } from '@phaserjs/phaser/scenes/Scene';\r\nimport { AddChild } from '@phaserjs/phaser/display/';\r\nimport { StaticWorld } from '@phaserjs/phaser/world';\r\nimport { CreateCircleTexture } from '../../src/texture/canvastexture';\r\nimport { Sprite } from '@phaserjs/phaser/gameobjects/sprite';\r\n\r\nclass Demo extends Scene {\r\n    constructor() {\r\n        super();\r\n\r\n        CreateCircleTexture(\r\n            'circle',\r\n            {\r\n                width: 100,\r\n                fillStyle: 'yellow',\r\n                // fillStyle: function (canvas, context) {  // Return gradient\r\n                //     let w = canvas.width,\r\n                //         h = canvas.height,\r\n                //         x = w / 2,\r\n                //         y = h / 2;\r\n                //     let grd = context.createRadialGradient(x, y, 0, x, y, w);\r\n                //     grd.addColorStop(0, 'white');\r\n                //     grd.addColorStop(1, 'black');\r\n                //     return grd;\r\n                // },\r\n                strokeStyle: 'red',\r\n                lineWidth: 10\r\n            }\r\n        )\r\n\r\n        const world = new StaticWorld(this);\r\n        const image = new Sprite(400, 300, 'circle');\r\n        AddChild(world, image);\r\n    }\r\n}\r\n\r\nnew Game(\r\n    WebGLRenderer(),\r\n    Size(800, 600),\r\n    Parent('game'),\r\n    BackgroundColor(0x2d2d2d),\r\n    Scenes(Demo)\r\n);\r\n"],
  "mappings": "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",
  "names": []
}
