{"version":3,"file":"bundle.js","sources":["../../node_modules/@phaserjs/phaser/GameInstance.js","../../node_modules/@phaserjs/phaser/config/BackgroundColor.js","../../node_modules/@phaserjs/phaser/config/Size.js","../../node_modules/@phaserjs/phaser/renderer/BindingQueue.js","../../node_modules/@phaserjs/phaser/config/SetRenderer.js","../../node_modules/@phaserjs/phaser/config/DefaultOrigin.js","../../node_modules/@phaserjs/phaser/config/Parent.js","../../node_modules/@phaserjs/phaser/config/MaxTextures.js","../../node_modules/@phaserjs/phaser/dom/GetElement.js","../../node_modules/@phaserjs/phaser/config/Scenes.js","../../node_modules/@phaserjs/phaser/config/WebGLContext.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/GL.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/FBOSystem.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/CreateGLTexture.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/DeleteGLTexture.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/GLTextureBinding.js","../../node_modules/@phaserjs/phaser/math/pow2/IsSizePowerOfTwo.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/SetGLTextureFilterMode.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/UpdateGLTexture.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/DeleteFramebuffer.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/buffers/IndexedBuffer.js","../../node_modules/@phaserjs/phaser/textures/Frame.js","../../node_modules/@phaserjs/phaser/textures/Texture.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRendererInstance.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/SingleTextureQuadShader.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateFramebuffer.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/MultiTextureQuadShader.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/ShaderSystem.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CheckShaderMaxIfStatements.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/textures/TextureSystem.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRenderer.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/cameras/Ortho.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/colors/GetRGBArray.js","../../node_modules/@phaserjs/phaser/math/matrix2d-funcs/ExactEquals.js","../../node_modules/@phaserjs/phaser/math/matrix2d/Matrix2D.js","../../node_modules/@phaserjs/phaser/geom/rectangle/Rectangle.js","../../node_modules/@phaserjs/phaser/geom/rectangle/Contains.js","../../node_modules/@phaserjs/phaser/utils/NOOP.js","../../node_modules/@phaserjs/phaser/math/vec2/Vec2Callback.js","../../node_modules/@phaserjs/phaser/camera/StaticCamera.js","../../node_modules/@phaserjs/phaser/display/RemoveChild.js","../../node_modules/@phaserjs/phaser/display/GetChildIndex.js","../../node_modules/@phaserjs/phaser/display/RemoveChildAt.js","../../node_modules/@phaserjs/phaser/events/Emit.js","../../node_modules/@phaserjs/phaser/display/SetParent.js","../../node_modules/@phaserjs/phaser/display/SetWorld.js","../../node_modules/@phaserjs/phaser/gameobjects/events/RemovedFromWorldEvent.js","../../node_modules/@phaserjs/phaser/gameobjects/events/AddedToWorldEvent.js","../../node_modules/@phaserjs/phaser/display/DepthFirstSearch.js","../../node_modules/@phaserjs/phaser/gameobjects/DIRTY_CONST.js","../../node_modules/@phaserjs/phaser/display/RemoveChildrenBetween.js","../../node_modules/@phaserjs/phaser/events/EventInstance.js","../../node_modules/@phaserjs/phaser/events/Off.js","../../node_modules/@phaserjs/phaser/events/On.js","../../node_modules/@phaserjs/phaser/events/Once.js","../../node_modules/@phaserjs/phaser/scenes/SceneManagerInstance.js","../../node_modules/@phaserjs/phaser/scenes/SceneManager.js","../../node_modules/@phaserjs/phaser/scenes/CreateSceneRenderData.js","../../node_modules/@phaserjs/phaser/scenes/ResetSceneRenderData.js","../../node_modules/@phaserjs/phaser/textures/CreateCanvas.js","../../node_modules/@phaserjs/phaser/textures/TextureManagerInstance.js","../../node_modules/@phaserjs/phaser/textures/TextureManager.js","../../node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVertices.js","../../node_modules/@phaserjs/phaser/gameobjects/components/bounds/BoundsComponent.js","../../node_modules/@phaserjs/phaser/gameobjects/components/input/InputComponent.js","../../node_modules/@phaserjs/phaser/math/vec2/Vec2.js","../../node_modules/@phaserjs/phaser/math/matrix2d/Copy.js","../../node_modules/@phaserjs/phaser/gameobjects/components/transform/TransformComponent.js","../../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateLocalTransform.js","../../node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateWorldTransform.js","../../node_modules/@phaserjs/phaser/gameobjects/GameObject.js","../../node_modules/@phaserjs/phaser/display/ReparentChildren.js","../../node_modules/@phaserjs/phaser/display/DestroyChildren.js","../../node_modules/@phaserjs/phaser/gameobjects/events/DestroyEvent.js","../../node_modules/@phaserjs/phaser/gameobjects/container/Container.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColor.js","../../node_modules/@phaserjs/phaser/gameobjects/sprite/SetFrame.js","../../node_modules/@phaserjs/phaser/gameobjects/sprite/Sprite.js","../../node_modules/@phaserjs/phaser/gameobjects/sprite/SetTexture.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColors.js","../../node_modules/@phaserjs/phaser/gameobjects/sprite/UpdateVertices.js","../../node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuad.js","../../node_modules/@phaserjs/phaser/renderer/canvas/draw/DrawTexturedQuad.js","../../node_modules/@phaserjs/phaser/world/UpdateCachedLayers.js","../../node_modules/@phaserjs/phaser/world/HasDirtyChildren.js","../../node_modules/@phaserjs/phaser/world/BuildRenderList.js","../../node_modules/@phaserjs/phaser/world/WorldDepthFirstSearch.js","../../node_modules/@phaserjs/phaser/world/CalculateTotalRenderable.js","../../node_modules/@phaserjs/phaser/world/ResetWorldRenderData.js","../../node_modules/@phaserjs/phaser/world/BaseWorld.js","../../node_modules/@phaserjs/phaser/gameobjects/events/UpdateEvent.js","../../node_modules/@phaserjs/phaser/gameobjects/events/PostUpdateEvent.js","../../node_modules/@phaserjs/phaser/world/events/WorldRenderEvent.js","../../node_modules/@phaserjs/phaser/world/MergeRenderData.js","../../node_modules/@phaserjs/phaser/display/RemoveChildren.js","../../node_modules/@phaserjs/phaser/world/events/WorldShutdownEvent.js","../../node_modules/@phaserjs/phaser/world/StaticWorld.js","../../node_modules/@phaserjs/phaser/world/CreateWorldRenderData.js","../../node_modules/@phaserjs/phaser/scenes/Install.js","../../node_modules/@phaserjs/phaser/scenes/GetConfigValue.js","../../src/texture/canvastexture/DrawCanvasTexture.ts","../../node_modules/@phaserjs/phaser/textures/types/CanvasTexture.js","../../src/utils/canvas/GetStyle.ts","../../src/texture/canvastexture/CreateTriangleTexture.ts","../../examples/canvas-texture/circle.ts","../../node_modules/@phaserjs/phaser/Game.js","../../node_modules/@phaserjs/phaser/events/EventEmitter.js","../../node_modules/@phaserjs/phaser/dom/DOMContentLoaded.js","../../node_modules/@phaserjs/phaser/dom/AddToDOM.js","../../node_modules/@phaserjs/phaser/config/Banner.js","../../node_modules/@phaserjs/phaser/config/WebGLRenderer.js","../../node_modules/@phaserjs/phaser/scenes/Scene.js","../../src/texture/canvastexture/CreateCircleTexture.ts","../../node_modules/@phaserjs/phaser/display/AddChild.js"],"sourcesContent":["let instance;\r\nlet frame = 0;\r\nlet elapsed = 0;\r\nconst GameInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (game) => {\r\n        instance = game;\r\n    },\r\n    getFrame: () => {\r\n        return frame;\r\n    },\r\n    setFrame: (current) => {\r\n        frame = current;\r\n    },\r\n    getElapsed: () => {\r\n        return elapsed;\r\n    },\r\n    setElapsed: (current) => {\r\n        elapsed = current;\r\n    }\r\n};\n\nexport { GameInstance, elapsed, frame, instance };\n","let bgColor = 0;\r\nfunction BackgroundColor(color = 0) {\r\n    return () => {\r\n        bgColor = color;\r\n    };\r\n}\r\nfunction GetBackgroundColor() {\r\n    return bgColor;\r\n}\n\nexport { BackgroundColor, GetBackgroundColor };\n","let _width = 800;\r\nlet _height = 600;\r\nlet _resolution = 1;\r\nfunction Size(width = 800, height = 600, resolution = 1) {\r\n    if (resolution === 0) {\r\n        resolution = window.devicePixelRatio;\r\n    }\r\n    return () => {\r\n        _width = width;\r\n        _height = height;\r\n        _resolution = resolution;\r\n    };\r\n}\r\nfunction GetWidth() {\r\n    return _width;\r\n}\r\nfunction GetHeight() {\r\n    return _height;\r\n}\r\nfunction GetResolution() {\r\n    return _resolution;\r\n}\n\nexport { GetHeight, GetResolution, GetWidth, Size };\n","const queue = [];\r\nconst BindingQueue = {\r\n    add: (texture) => {\r\n        queue.push(texture);\r\n    },\r\n    get: () => {\r\n        return queue;\r\n    },\r\n    clear: () => {\r\n        queue.length = 0;\r\n    }\r\n};\n\nexport { BindingQueue };\n","let instance;\r\nfunction SetRenderer(renderer) {\r\n    instance = renderer;\r\n}\r\nfunction GetRenderer() {\r\n    return instance;\r\n}\n\nexport { GetRenderer, SetRenderer };\n","let originX = 0.5;\r\nlet originY = 0.5;\r\nfunction DefaultOrigin(x = 0.5, y = x) {\r\n    return () => {\r\n        originX = x;\r\n        originY = y;\r\n    };\r\n}\n\nexport { DefaultOrigin, originX, originY };\n","import { GetElement } from '../dom/GetElement.js';\n\nlet parent;\r\nfunction Parent(parentElement) {\r\n    return () => {\r\n        if (parentElement) {\r\n            parent = GetElement(parentElement);\r\n        }\r\n    };\r\n}\r\nfunction GetParent() {\r\n    return parent;\r\n}\n\nexport { GetParent, Parent };\n","let maxTextures = 0;\r\nfunction MaxTextures(max = 0) {\r\n    return () => {\r\n        maxTextures = max;\r\n    };\r\n}\r\nfunction SetMaxTextures(max) {\r\n    maxTextures = max;\r\n}\r\nfunction GetMaxTextures() {\r\n    return maxTextures;\r\n}\n\nexport { GetMaxTextures, MaxTextures, SetMaxTextures };\n","function GetElement(target) {\r\n    let element;\r\n    if (target) {\r\n        if (typeof target === 'string') {\r\n            element = document.getElementById(target);\r\n        }\r\n        else if (typeof target === 'object' && target.nodeType === 1) {\r\n            element = target;\r\n        }\r\n    }\r\n    if (!element) {\r\n        element = document.body;\r\n    }\r\n    return element;\r\n}\n\nexport { GetElement };\n","let _scenes = [];\r\nfunction Scenes(scenes) {\r\n    return () => {\r\n        _scenes = [].concat(scenes);\r\n    };\r\n}\r\nfunction GetScenes() {\r\n    return _scenes;\r\n}\n\nexport { GetScenes, Scenes };\n","let _contextAttributes = {\r\n    alpha: false,\r\n    antialias: false,\r\n    depth: false,\r\n    premultipliedAlpha: false\r\n};\r\nfunction WebGLContext(contextAttributes) {\r\n    return () => {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\nfunction GetWebGLContext() {\r\n    return _contextAttributes;\r\n}\n\nexport { GetWebGLContext, WebGLContext };\n","let gl;\r\nconst GL = {\r\n    get: () => {\r\n        return gl;\r\n    },\r\n    set: (context) => {\r\n        gl = context;\r\n    }\r\n};\n\nexport { GL };\n","class FBOSystem {\r\n    constructor(renderer) {\r\n        this.stack = [];\r\n        this.current = null;\r\n        this.renderer = renderer;\r\n    }\r\n    reset() {\r\n        this.stack = [];\r\n        this.current = null;\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, renderer.width, renderer.height);\r\n    }\r\n    add(framebuffer, clear = true, width = 0, height = 0) {\r\n        this.stack.push({ framebuffer, width, height });\r\n        this.set(framebuffer, clear, width, height);\r\n    }\r\n    set(framebuffer, clear = true, width = 0, height = 0) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        if (clear) {\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        if (width > 0) {\r\n            gl.viewport(0, 0, width, height);\r\n        }\r\n        this.current = framebuffer;\r\n    }\r\n    pop() {\r\n        this.stack.pop();\r\n        const len = this.stack.length;\r\n        if (len > 0) {\r\n            const entry = this.stack[len - 1];\r\n            this.set(entry.framebuffer, false, entry.width, entry.height);\r\n        }\r\n        else {\r\n            this.reset();\r\n        }\r\n    }\r\n    rebind() {\r\n        const gl = this.renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.current);\r\n    }\r\n    destroy() {\r\n        this.stack = [];\r\n    }\r\n}\n\nexport { FBOSystem };\n","import { GL } from '../GL.js';\n\nfunction CreateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    const { parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT } = binding;\r\n    const source = parent.image;\r\n    let width = parent.width;\r\n    let height = parent.height;\r\n    const glTexture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\r\n    if (source) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n        width = source.width;\r\n        height = source.height;\r\n    }\r\n    else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n    if (generateMipmap && isPOT) {\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n    binding.texture = glTexture;\r\n    return glTexture;\r\n}\n\nexport { CreateGLTexture };\n","import { GL } from '../GL.js';\n\nfunction DeleteGLTexture(texture) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    if (gl.isTexture(texture)) {\r\n        gl.deleteTexture(texture);\r\n    }\r\n}\n\nexport { DeleteGLTexture };\n","import { GL } from '../GL.js';\nimport { CreateGLTexture } from './CreateGLTexture.js';\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer.js';\nimport { DeleteGLTexture } from './DeleteGLTexture.js';\nimport { IsSizePowerOfTwo } from '../../../math/pow2/IsSizePowerOfTwo.js';\nimport { SetGLTextureFilterMode } from './SetGLTextureFilterMode.js';\nimport { UpdateGLTexture } from './UpdateGLTexture.js';\n\nclass GLTextureBinding {\r\n    constructor(parent, config = {}) {\r\n        this.index = 0;\r\n        this.indexCounter = -1;\r\n        this.dirtyIndex = true;\r\n        this.unpackPremultiplyAlpha = true;\r\n        this.flipY = false;\r\n        this.isPOT = false;\r\n        this.generateMipmap = false;\r\n        const gl = GL.get();\r\n        this.parent = parent;\r\n        this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\r\n        const { texture = null, framebuffer = null, unpackPremultiplyAlpha = true, minFilter = gl.LINEAR, magFilter = gl.LINEAR, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, generateMipmap = this.isPOT, flipY = false } = config;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmap = generateMipmap;\r\n        this.flipY = flipY;\r\n        this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\r\n        if (framebuffer) {\r\n            this.framebuffer = framebuffer;\r\n        }\r\n        if (texture) {\r\n            this.texture = texture;\r\n        }\r\n        else {\r\n            CreateGLTexture(this);\r\n        }\r\n    }\r\n    setFilter(linear) {\r\n        if (this.texture) {\r\n            SetGLTextureFilterMode(this.texture, linear);\r\n        }\r\n    }\r\n    create() {\r\n        const texture = this.texture;\r\n        if (texture) {\r\n            DeleteGLTexture(texture);\r\n        }\r\n        return CreateGLTexture(this);\r\n    }\r\n    update() {\r\n        const texture = this.texture;\r\n        if (!texture) {\r\n            return CreateGLTexture(this);\r\n        }\r\n        else {\r\n            return UpdateGLTexture(this);\r\n        }\r\n    }\r\n    setIndex(index) {\r\n        this.dirtyIndex = (index !== this.index);\r\n        this.index = index;\r\n    }\r\n    destroy() {\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n        this.parent = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\n\nexport { GLTextureBinding };\n","function IsSizePowerOfTwo(width, height) {\r\n    if (width < 1 || height < 1) {\r\n        return false;\r\n    }\r\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\r\n}\n\nexport { IsSizePowerOfTwo };\n","import { GL } from '../GL.js';\n\nfunction SetGLTextureFilterMode(texture, linear = true) {\r\n    const gl = GL.get();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\r\n}\n\nexport { SetGLTextureFilterMode };\n","import { GL } from '../GL.js';\n\nfunction UpdateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    const source = binding.parent.image;\r\n    const width = source.width;\r\n    const height = source.height;\r\n    if (width > 0 && height > 0) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n    }\r\n    return binding.texture;\r\n}\n\nexport { UpdateGLTexture };\n","import { GL } from '../GL.js';\n\nfunction DeleteFramebuffer(framebuffer) {\r\n    const gl = GL.get();\r\n    if (gl && gl.isFramebuffer(framebuffer)) {\r\n        gl.deleteFramebuffer(framebuffer);\r\n    }\r\n}\n\nexport { DeleteFramebuffer };\n","import { GL } from '../GL.js';\n\nclass IndexedBuffer {\r\n    constructor(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize) {\r\n        this.batchSize = batchSize;\r\n        this.dataSize = dataSize;\r\n        this.indexSize = indexSize;\r\n        this.vertexElementSize = vertexElementSize;\r\n        this.quadIndexSize = quadIndexSize;\r\n        this.vertexByteSize = vertexElementSize * dataSize;\r\n        this.quadByteSize = this.vertexByteSize * 4;\r\n        this.quadElementSize = vertexElementSize * 4;\r\n        this.bufferByteSize = batchSize * this.quadByteSize;\r\n        this.create();\r\n    }\r\n    create() {\r\n        let ibo = [];\r\n        for (let i = 0; i < (this.batchSize * this.indexSize); i += this.indexSize) {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n        this.data = new ArrayBuffer(this.bufferByteSize);\r\n        this.index = new Uint16Array(ibo);\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n        const gl = GL.get();\r\n        this.vertexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\r\n        this.indexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        ibo = [];\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { IndexedBuffer };\n","class Frame {\r\n    constructor(texture, key, x, y, width, height) {\r\n        this.trimmed = false;\r\n        this.texture = texture;\r\n        this.key = key;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setPivot(x, y) {\r\n        this.pivot = { x, y };\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setSourceSize(width, height) {\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n    }\r\n    setTrim(width, height, x, y, w, h) {\r\n        this.trimmed = true;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.spriteSourceSizeX = x;\r\n        this.spriteSourceSizeY = y;\r\n        this.spriteSourceSizeWidth = w;\r\n        this.spriteSourceSizeHeight = h;\r\n    }\r\n    getExtent(originX, originY) {\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let left;\r\n        let right;\r\n        let top;\r\n        let bottom;\r\n        if (this.trimmed) {\r\n            left = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            right = left + this.spriteSourceSizeWidth;\r\n            top = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            bottom = top + this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            left = -originX * sourceSizeWidth;\r\n            right = left + sourceSizeWidth;\r\n            top = -originY * sourceSizeHeight;\r\n            bottom = top + sourceSizeHeight;\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    setExtent(child) {\r\n        const transform = child.transform;\r\n        const originX = transform.origin.x;\r\n        const originY = transform.origin.y;\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let x;\r\n        let y;\r\n        let width;\r\n        let height;\r\n        if (this.trimmed) {\r\n            x = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            y = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            width = this.spriteSourceSizeWidth;\r\n            height = this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            x = -originX * sourceSizeWidth;\r\n            y = -originY * sourceSizeHeight;\r\n            width = sourceSizeWidth;\r\n            height = sourceSizeHeight;\r\n        }\r\n        transform.setExtent(x, y, width, height);\r\n    }\r\n    updateUVs() {\r\n        const { x, y, width, height } = this;\r\n        const baseTextureWidth = this.texture.width;\r\n        const baseTextureHeight = this.texture.height;\r\n        this.u0 = x / baseTextureWidth;\r\n        this.v0 = y / baseTextureHeight;\r\n        this.u1 = (x + width) / baseTextureWidth;\r\n        this.v1 = (y + height) / baseTextureHeight;\r\n    }\r\n}\n\nexport { Frame };\n","import { BindingQueue } from '../renderer/BindingQueue.js';\nimport { Frame } from './Frame.js';\n\nclass Texture {\r\n    constructor(image, width, height) {\r\n        this.key = '';\r\n        if (image) {\r\n            width = image.width;\r\n            height = image.height;\r\n        }\r\n        this.image = image;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.frames = new Map();\r\n        this.data = {};\r\n        this.addFrame('__BASE', 0, 0, width, height);\r\n        BindingQueue.add(this);\r\n    }\r\n    addFrame(key, x, y, width, height) {\r\n        if (this.frames.has(key)) {\r\n            return null;\r\n        }\r\n        const frame = new Frame(this, key, x, y, width, height);\r\n        this.frames.set(key, frame);\r\n        if (!this.firstFrame || this.firstFrame.key === '__BASE') {\r\n            this.firstFrame = frame;\r\n        }\r\n        return frame;\r\n    }\r\n    getFrame(key) {\r\n        if (!key) {\r\n            return this.firstFrame;\r\n        }\r\n        if (key instanceof Frame) {\r\n            key = key.key;\r\n        }\r\n        let frame = this.frames.get(key);\r\n        if (!frame) {\r\n            console.warn(`Frame missing: ${key}`);\r\n            frame = this.firstFrame;\r\n        }\r\n        return frame;\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        const frame = this.frames.get('__BASE');\r\n        frame.setSize(width, height);\r\n    }\r\n    destroy() {\r\n        if (this.binding) {\r\n            this.binding.destroy();\r\n        }\r\n        this.frames.clear();\r\n        this.data = null;\r\n        this.image = null;\r\n        this.firstFrame = null;\r\n    }\r\n}\n\nexport { Texture };\n","let instance;\r\nconst WebGLRendererInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (renderer) => {\r\n        instance = renderer;\r\n    }\r\n};\n\nexport { WebGLRendererInstance, instance };\n","import { GetWidth, GetHeight, GetResolution } from '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport { CreateFramebuffer } from '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport { GLTextureBinding } from '../textures/GLTextureBinding.js';\nimport { IndexedBuffer } from '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport { Texture } from '../../../textures/Texture.js';\nimport { WebGLRendererInstance } from '../WebGLRendererInstance.js';\n\nconst shaderSource = {\r\n    fragmentShader: `\r\n#define SHADER_NAME SINGLE_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`,\r\n    vertexShader: `\r\n#define SHADER_NAME SINGLE_QUAD_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aTextureId;\r\nattribute vec4 aTintColor;\r\n\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uCameraMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nvoid main (void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vTintColor = aTintColor;\r\n\r\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n}`\r\n};\r\nclass SingleTextureQuadShader {\r\n    constructor(config = {}) {\r\n        this.attribs = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\r\n        this.uniforms = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0, uTime: 0, uResolution: 0 };\r\n        this.renderToFBO = false;\r\n        this.renderer = WebGLRendererInstance.get();\r\n        const { batchSize = 4096, dataSize = 4, indexSize = 4, vertexElementSize = 6, quadIndexSize = 6, fragmentShader = shaderSource.fragmentShader, vertexShader = shaderSource.vertexShader, width = GetWidth(), height = GetHeight(), resolution = GetResolution(), renderToFBO = false } = config;\r\n        this.buffer = new IndexedBuffer(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize);\r\n        this.createShaders(fragmentShader, vertexShader);\r\n        this.count = 0;\r\n        this.renderToFBO = renderToFBO;\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n        const binding = new GLTextureBinding(texture);\r\n        texture.binding = binding;\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const gl = this.renderer.gl;\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        gl.compileShader(fragmentShader);\r\n        let failed = false;\r\n        let message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, vertexShaderSource);\r\n        gl.compileShader(vertexShader);\r\n        message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        if (failed) {\r\n            return;\r\n        }\r\n        const program = gl.createProgram();\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n        this.program = program;\r\n        for (const key of Object.keys(this.attribs)) {\r\n            const location = gl.getAttribLocation(program, key);\r\n            gl.enableVertexAttribArray(location);\r\n            this.attribs[key] = location;\r\n        }\r\n        for (const key of Object.keys(this.uniforms)) {\r\n            this.uniforms[key] = gl.getUniformLocation(program, key);\r\n        }\r\n    }\r\n    bind(projectionMatrix, cameraMatrix, textureID) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1i(uniforms.uTexture, renderer.textures.textureIndex[textureID]);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n    bindBuffers(indexBuffer, vertexBuffer) {\r\n        const gl = this.renderer.gl;\r\n        const stride = this.buffer.vertexByteSize;\r\n        const attribs = this.attribs;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);\r\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);\r\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);\r\n        this.count = 0;\r\n    }\r\n    draw(count) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const buffer = this.buffer;\r\n        if (count === buffer.batchSize) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.DYNAMIC_DRAW);\r\n        }\r\n        else {\r\n            const view = buffer.vertexViewF32.subarray(0, count * buffer.quadElementSize);\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n        }\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.add(this.framebuffer, true);\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, count * buffer.quadIndexSize, gl.UNSIGNED_SHORT, 0);\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.pop();\r\n        }\r\n    }\r\n    flush() {\r\n        const count = this.count;\r\n        if (count === 0) {\r\n            return false;\r\n        }\r\n        this.draw(count);\r\n        this.prevCount = count;\r\n        this.count = 0;\r\n        return true;\r\n    }\r\n}\n\nexport { SingleTextureQuadShader };\n","import { GL } from '../GL.js';\n\nfunction CreateFramebuffer(texture, attachment) {\r\n    const gl = GL.get();\r\n    if (!attachment) {\r\n        attachment = gl.COLOR_ATTACHMENT0;\r\n    }\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    return framebuffer;\r\n}\n\nexport { CreateFramebuffer };\n","import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport { GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nconst fragmentShader = `\r\n#define SHADER_NAME MULTI_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture[%count%];\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color;\r\n\r\n    %forloop%\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\nclass MultiTextureQuadShader extends SingleTextureQuadShader {\r\n    constructor(config = { fragmentShader }) {\r\n        super(config);\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const maxTextures = GetMaxTextures();\r\n        let src = '';\r\n        for (let i = 1; i < maxTextures; i++) {\r\n            if (i > 1) {\r\n                src += '\\n\\telse ';\r\n            }\r\n            if (i < maxTextures - 1) {\r\n                src += `if (vTextureId < ${i}.5)`;\r\n            }\r\n            src += '\\n\\t{';\r\n            src += `\\n\\t\\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\r\n            src += '\\n\\t}';\r\n        }\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\r\n        super.createShaders(fragmentShaderSource, vertexShaderSource);\r\n    }\r\n    bind(projectionMatrix, cameraMatrix) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1iv(uniforms.uTexture, renderer.textures.textureIndex);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n}\n\nexport { MultiTextureQuadShader };\n","import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nclass ShaderSystem {\r\n    constructor(renderer, currentShader) {\r\n        this.renderer = renderer;\r\n        const stackEntry = {\r\n            shader: new currentShader()\r\n        };\r\n        this.stack = [stackEntry];\r\n        this.currentEntry = stackEntry;\r\n        this.current = stackEntry.shader;\r\n        this.singleQuadShader = new SingleTextureQuadShader();\r\n    }\r\n    add(shader, textureID) {\r\n        const stackEntry = { shader, textureID };\r\n        this.stack.push(stackEntry);\r\n        return stackEntry;\r\n    }\r\n    set(shader, textureID) {\r\n        this.flush();\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const success = shader.bind(projectionMatrix, cameraMatrix, textureID);\r\n        if (success) {\r\n            const entry = this.add(shader, textureID);\r\n            this.currentEntry = entry;\r\n            this.current = shader;\r\n        }\r\n        return success;\r\n    }\r\n    setDefault(textureID) {\r\n        this.set(this.singleQuadShader, textureID);\r\n    }\r\n    pop() {\r\n        this.flush();\r\n        const stack = this.stack;\r\n        if (stack.length > 1) {\r\n            stack.pop();\r\n        }\r\n        this.currentEntry = stack[stack.length - 1];\r\n        this.current = this.currentEntry.shader;\r\n    }\r\n    reset() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    flush() {\r\n        if (this.current.flush()) {\r\n            this.renderer.flushTotal++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    rebind() {\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const current = this.currentEntry;\r\n        current.shader.bind(projectionMatrix, cameraMatrix, current.textureID);\r\n    }\r\n    popAndRebind() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    clear() {\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { ShaderSystem };\n","const fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}'\r\n].join('\\n');\r\nfunction GenerateSrc(maxIfs) {\r\n    let src = '';\r\n    for (let i = 0; i < maxIfs; ++i) {\r\n        if (i > 0) {\r\n            src += '\\nelse ';\r\n        }\r\n        if (i < maxIfs - 1) {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n    return src;\r\n}\r\nfunction CheckShaderMaxIfStatements(maxIfs, gl) {\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    while (true) {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return maxIfs;\r\n}\n\nexport { CheckShaderMaxIfStatements };\n","import { BindingQueue } from '../../BindingQueue.js';\nimport { SetMaxTextures, GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport './CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport './DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport './SetGLTextureFilterMode.js';\nimport './UpdateGLTexture.js';\nimport { GLTextureBinding } from './GLTextureBinding.js';\nimport { CheckShaderMaxIfStatements } from '../shaders/CheckShaderMaxIfStatements.js';\n\nclass TextureSystem {\r\n    constructor(renderer) {\r\n        this.startActiveTexture = 0;\r\n        this.renderer = renderer;\r\n        this.tempTextures = [];\r\n        this.textureIndex = [];\r\n    }\r\n    init() {\r\n        const gl = this.renderer.gl;\r\n        let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\r\n        const maxConfigTextures = GetMaxTextures();\r\n        if (maxConfigTextures === 0 || (maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures)) {\r\n            SetMaxTextures(maxGPUTextures);\r\n        }\r\n        else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\r\n            maxGPUTextures = Math.max(8, maxConfigTextures);\r\n        }\r\n        const tempTextures = this.tempTextures;\r\n        if (tempTextures.length) {\r\n            tempTextures.forEach(texture => {\r\n                gl.deleteTexture(texture);\r\n            });\r\n        }\r\n        const index = [];\r\n        for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\r\n            const tempTexture = gl.createTexture();\r\n            gl.activeTexture(gl.TEXTURE0 + texturesIndex);\r\n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\r\n            tempTextures[texturesIndex] = tempTexture;\r\n            index.push(texturesIndex);\r\n        }\r\n        this.maxTextures = maxGPUTextures;\r\n        this.textureIndex = index;\r\n        this.currentActiveTexture = 1;\r\n    }\r\n    update() {\r\n        const queue = BindingQueue.get();\r\n        for (let i = 0; i < queue.length; i++) {\r\n            const texture = queue[i];\r\n            if (!texture.binding) {\r\n                texture.binding = new GLTextureBinding(texture);\r\n            }\r\n        }\r\n        BindingQueue.clear();\r\n    }\r\n    reset() {\r\n        const gl = this.renderer.gl;\r\n        const temp = this.tempTextures;\r\n        for (let i = 0; i < temp.length; i++) {\r\n            gl.activeTexture(gl.TEXTURE0 + i);\r\n            gl.bindTexture(gl.TEXTURE_2D, temp[i]);\r\n        }\r\n        this.currentActiveTexture = 1;\r\n        this.startActiveTexture++;\r\n    }\r\n    bind(texture, index = 0) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        binding.setIndex(index);\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n    }\r\n    unbind(index = 0) {\r\n        const gl = this.renderer.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.tempTextures[index]);\r\n        if (index > 0) {\r\n            this.startActiveTexture++;\r\n        }\r\n    }\r\n    request(texture) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        const currentActiveTexture = this.currentActiveTexture;\r\n        if (binding.indexCounter >= this.startActiveTexture) {\r\n            return false;\r\n        }\r\n        binding.indexCounter = this.startActiveTexture;\r\n        if (currentActiveTexture < this.maxTextures) {\r\n            binding.setIndex(currentActiveTexture);\r\n            gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture++;\r\n        }\r\n        else {\r\n            this.renderer.flush();\r\n            this.startActiveTexture++;\r\n            binding.indexCounter = this.startActiveTexture;\r\n            binding.setIndex(1);\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture = 2;\r\n        }\r\n        return true;\r\n    }\r\n}\n\nexport { TextureSystem };\n","import { GetBackgroundColor } from '../../config/BackgroundColor.js';\nimport { GetWidth, GetHeight, GetResolution } from '../../config/Size.js';\nimport '../BindingQueue.js';\nimport '../../config/MaxTextures.js';\nimport { GetWebGLContext } from '../../config/WebGLContext.js';\nimport { FBOSystem } from './fbo/FBOSystem.js';\nimport { GL } from './GL.js';\nimport { GetRGBArray } from './colors/GetRGBArray.js';\nimport { ExactEquals } from '../../math/matrix2d-funcs/ExactEquals.js';\nimport './fbo/CreateFramebuffer.js';\nimport './textures/CreateGLTexture.js';\nimport './fbo/DeleteFramebuffer.js';\nimport './textures/DeleteGLTexture.js';\nimport '../../math/pow2/IsSizePowerOfTwo.js';\nimport './textures/SetGLTextureFilterMode.js';\nimport './textures/UpdateGLTexture.js';\nimport './textures/GLTextureBinding.js';\nimport './buffers/IndexedBuffer.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport { WebGLRendererInstance } from './WebGLRendererInstance.js';\nimport './shaders/SingleTextureQuadShader.js';\nimport { MultiTextureQuadShader } from './shaders/MultiTextureQuadShader.js';\nimport { Ortho } from './cameras/Ortho.js';\nimport { ShaderSystem } from './shaders/ShaderSystem.js';\nimport './shaders/CheckShaderMaxIfStatements.js';\nimport { TextureSystem } from './textures/TextureSystem.js';\n\nclass WebGLRenderer {\r\n    constructor() {\r\n        this.clearColor = [0, 0, 0, 1];\r\n        this.flushTotal = 0;\r\n        this.clearBeforeRender = true;\r\n        this.optimizeRedraw = false;\r\n        this.autoResize = true;\r\n        this.contextLost = false;\r\n        this.currentCamera = null;\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n        const canvas = document.createElement('canvas');\r\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\r\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\r\n        this.canvas = canvas;\r\n        this.fbo = new FBOSystem(this);\r\n        this.textures = new TextureSystem(this);\r\n        this.initContext();\r\n        WebGLRendererInstance.set(this);\r\n        this.shaders = new ShaderSystem(this, MultiTextureQuadShader);\r\n    }\r\n    initContext() {\r\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\r\n        GL.set(gl);\r\n        this.gl = gl;\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n        this.resize(this.width, this.height, this.resolution);\r\n        this.textures.init();\r\n    }\r\n    resize(width, height, resolution = 1) {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n        const canvas = this.canvas;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        if (this.autoResize) {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n        this.gl.viewport(0, 0, this.width, this.height);\r\n        this.projectionMatrix = Ortho(width, height);\r\n    }\r\n    onContextLost(event) {\r\n        event.preventDefault();\r\n        this.contextLost = true;\r\n    }\r\n    onContextRestored() {\r\n        this.contextLost = false;\r\n        this.initContext();\r\n    }\r\n    setBackgroundColor(color) {\r\n        GetRGBArray(color, this.clearColor);\r\n        return this;\r\n    }\r\n    reset(framebuffer = null, width = this.width, height = this.height) {\r\n        const gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        gl.viewport(0, 0, width, height);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        this.flushTotal = 0;\r\n        this.currentCamera = null;\r\n        this.textures.update();\r\n    }\r\n    render(renderData) {\r\n        if (this.contextLost) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\r\n            return;\r\n        }\r\n        const gl = this.gl;\r\n        if (this.clearBeforeRender) {\r\n            const cls = this.clearColor;\r\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        const worlds = renderData.worldData;\r\n        for (let i = 0; i < worlds.length; i++) {\r\n            const { camera, renderList } = worlds[i];\r\n            if (!this.currentCamera || !ExactEquals(camera.worldTransform, this.currentCamera.worldTransform)) {\r\n                this.flush();\r\n                this.currentCamera = camera;\r\n                this.shaders.rebind();\r\n            }\r\n            renderList.forEach(entry => {\r\n                if (entry.children.length) {\r\n                    this.renderNode(entry);\r\n                }\r\n                else {\r\n                    entry.node.renderGL(this);\r\n                }\r\n            });\r\n        }\r\n        this.flush();\r\n    }\r\n    renderNode(entry) {\r\n        entry.node.renderGL(this);\r\n        entry.children.forEach(child => {\r\n            if (child.children.length > 0) {\r\n                this.renderNode(child);\r\n            }\r\n            else {\r\n                child.node.renderGL(this);\r\n            }\r\n        });\r\n        entry.node.postRenderGL(this);\r\n    }\r\n    flush() {\r\n        this.shaders.flush();\r\n    }\r\n    destroy() {\r\n        WebGLRendererInstance.set(undefined);\r\n    }\r\n}\n\nexport { WebGLRenderer };\n","function Ortho(width, height, near = -1, far = 1) {\r\n    const m00 = -2 * (1 / -width);\r\n    const m11 = -2 * (1 / height);\r\n    const m22 = 2 * (1 / (near - far));\r\n    return new Float32Array([m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1]);\r\n}\n\nexport { Ortho };\n","function GetRGBArray(color, output = []) {\r\n    const r = color >> 16 & 0xFF;\r\n    const g = color >> 8 & 0xFF;\r\n    const b = color & 0xFF;\r\n    const a = (color > 16777215) ? color >>> 24 : 255;\r\n    output[0] = r / 255;\r\n    output[1] = g / 255;\r\n    output[2] = b / 255;\r\n    output[3] = a / 255;\r\n    return output;\r\n}\n\nexport { GetRGBArray };\n","function ExactEquals(a, b) {\r\n    return (a.a === b.a &&\r\n        a.b === b.b &&\r\n        a.c === b.c &&\r\n        a.d === b.d &&\r\n        a.tx === b.tx &&\r\n        a.ty === b.ty);\r\n}\n\nexport { ExactEquals };\n","class Matrix2D {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n    set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        return this;\r\n    }\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    toArray() {\r\n        return [this.a, this.b, this.c, this.d, this.tx, this.ty];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n}\n\nexport { Matrix2D };\n","import { Contains } from './Contains.js';\n\nclass Rectangle {\r\n    constructor(x = 0, y = 0, width = 0, height = 0) {\r\n        this.set(x, y, width, height);\r\n    }\r\n    set(x = 0, y = 0, width = 0, height = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n    contains(x, y) {\r\n        return Contains(this, x, y);\r\n    }\r\n    set right(value) {\r\n        if (value <= this.x) {\r\n            this.width = 0;\r\n        }\r\n        else {\r\n            this.width = value - this.x;\r\n        }\r\n    }\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    set bottom(value) {\r\n        if (value <= this.y) {\r\n            this.height = 0;\r\n        }\r\n        else {\r\n            this.height = value - this.y;\r\n        }\r\n    }\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n}\n\nexport { Rectangle };\n","function Contains(rect, x, y) {\r\n    if (rect.width <= 0 || rect.height <= 0) {\r\n        return false;\r\n    }\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n}\n\nexport { Contains };\n","function NOOP() {\r\n}\n\nexport { NOOP };\n","import { NOOP } from '../../utils/NOOP.js';\n\nclass Vec2Callback {\r\n    constructor(callback, x = 0, y = 0, compareValue = false) {\r\n        this.compareValue = false;\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback = callback;\r\n        this.compareValue = compareValue;\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback(this);\r\n        return this;\r\n    }\r\n    destroy() {\r\n        this.callback = NOOP;\r\n    }\r\n    set x(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._x = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set y(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._y = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n}\n\nexport { Vec2Callback };\n","import { GameInstance } from '../GameInstance.js';\nimport { Matrix2D } from '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport { Rectangle } from '../geom/rectangle/Rectangle.js';\n\nclass StaticCamera {\r\n    constructor() {\r\n        this.type = 'StaticCamera';\r\n        this.dirtyRender = true;\r\n        const game = GameInstance.get();\r\n        this.renderer = game.renderer;\r\n        this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n        this.bounds = new Rectangle();\r\n        this.worldTransform = new Matrix2D();\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n    destroy() {\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\n\nexport { StaticCamera };\n","import { GetChildIndex } from './GetChildIndex.js';\nimport { RemoveChildAt } from './RemoveChildAt.js';\n\nfunction RemoveChild(parent, child) {\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex > -1) {\r\n        RemoveChildAt(parent, currentIndex);\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChild };\n","function GetChildIndex(parent, child) {\r\n    return parent.children.indexOf(child);\r\n}\n\nexport { GetChildIndex };\n","function RemoveChildAt(parent, index) {\r\n    const children = parent.children;\r\n    let child;\r\n    if (index >= 0 && index < children.length) {\r\n        const removed = children.splice(index, 1);\r\n        if (removed[0]) {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChildAt };\n","function Emit(emitter, event, ...args) {\r\n    if (emitter.events.size === 0 || !emitter.events.has(event)) {\r\n        return false;\r\n    }\r\n    const listeners = emitter.events.get(event);\r\n    for (const ee of listeners) {\r\n        ee.callback.apply(ee.context, args);\r\n        if (ee.once) {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        emitter.events.delete(event);\r\n    }\r\n    return true;\r\n}\n\nexport { Emit };\n","import { DepthFirstSearch } from './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport { SetWorld } from './SetWorld.js';\n\nfunction SetParent(parent, ...children) {\r\n    children.forEach(child => {\r\n        if (child.parent) {\r\n            RemoveChild(child.parent, child);\r\n        }\r\n        child.parent = parent;\r\n    });\r\n    const parentWorld = parent.world;\r\n    if (parentWorld) {\r\n        SetWorld(parentWorld, ...DepthFirstSearch(parent));\r\n    }\r\n    return children;\r\n}\n\nexport { SetParent };\n","import { AddedToWorldEvent } from '../gameobjects/events/AddedToWorldEvent.js';\nimport { RemovedFromWorldEvent } from '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\n\nfunction SetWorld(world, ...children) {\r\n    children.forEach(child => {\r\n        if (child.world) {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n        child.world = world;\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n    return children;\r\n}\n\nexport { SetWorld };\n","const RemovedFromWorldEvent = 'removedfromworld';\n\nexport { RemovedFromWorldEvent };\n","const AddedToWorldEvent = 'addedtoworld';\n\nexport { AddedToWorldEvent };\n","function DepthFirstSearch(parent) {\r\n    const stack = [parent];\r\n    const output = [];\r\n    while (stack.length > 0) {\r\n        const node = stack.shift();\r\n        output.push(node);\r\n        const numChildren = node.numChildren;\r\n        if (numChildren > 0) {\r\n            for (let i = numChildren - 1; i >= 0; i--) {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n    output.shift();\r\n    return output;\r\n}\n\nexport { DepthFirstSearch };\n","const DIRTY_CONST = {\r\n    CLEAR: 0,\r\n    TRANSFORM: 1,\r\n    UPDATE: 2,\r\n    CHILD_CACHE: 4,\r\n    POST_RENDER: 8,\r\n    COLORS: 16,\r\n    BOUNDS: 32,\r\n    TEXTURE: 64,\r\n    FRAME: 128,\r\n    ALPHA: 256,\r\n    CHILD: 512,\r\n    DEFAULT: 1 + 2 + 16 + 32,\r\n    USER1: 536870912,\r\n    USER2: 1073741824,\r\n    USER3: 2147483648,\r\n    USER4: 4294967296\r\n};\n\nexport { DIRTY_CONST };\n","function RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\r\n    const children = parent.children;\r\n    if (endIndex === undefined) {\r\n        endIndex = children.length;\r\n    }\r\n    const range = endIndex - beginIndex;\r\n    if (range > 0 && range <= endIndex) {\r\n        const removed = children.splice(beginIndex, range);\r\n        removed.forEach(child => {\r\n            child.parent = null;\r\n        });\r\n        return removed;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\n\nexport { RemoveChildrenBetween };\n","class EventInstance {\r\n    constructor(callback, context, once = false) {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\n\nexport { EventInstance };\n","import { EventInstance } from './EventInstance.js';\n\nfunction Off(emitter, event, callback, context, once) {\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n    if (!callback) {\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance) {\r\n        listeners.delete(callback);\r\n    }\r\n    else {\r\n        const hasContext = !context;\r\n        const hasOnce = (once !== undefined);\r\n        for (const listener of listeners) {\r\n            if ((listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)) {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        events.delete(event);\r\n    }\r\n    return emitter;\r\n}\n\nexport { Off };\n","import { EventInstance } from './EventInstance.js';\n\nfunction On(emitter, event, callback, context = emitter, once = false) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n    if (!listeners) {\r\n        emitter.events.set(event, new Set([listener]));\r\n    }\r\n    else {\r\n        listeners.add(listener);\r\n    }\r\n    return listener;\r\n}\n\nexport { On };\n","import './EventInstance.js';\nimport { On } from './On.js';\n\nfunction Once(emitter, event, callback, context = emitter) {\r\n    return On(emitter, event, callback, context, true);\r\n}\n\nexport { Once };\n","let instance;\r\nconst SceneManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { SceneManagerInstance };\n","import { GameInstance } from '../GameInstance.js';\nimport { GetScenes } from '../config/Scenes.js';\nimport { Emit } from '../events/Emit.js';\nimport '../events/EventInstance.js';\nimport '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport { CreateSceneRenderData } from './CreateSceneRenderData.js';\nimport { ResetSceneRenderData } from './ResetSceneRenderData.js';\nimport { SceneManagerInstance } from './SceneManagerInstance.js';\n\nclass SceneManager {\r\n    constructor() {\r\n        this.scenes = new Map();\r\n        this.sceneIndex = 0;\r\n        this.flush = false;\r\n        this.renderResult = CreateSceneRenderData();\r\n        this.game = GameInstance.get();\r\n        SceneManagerInstance.set(this);\r\n        Once(this.game, 'boot', () => this.boot());\r\n    }\r\n    boot() {\r\n        GetScenes().forEach(scene => new scene());\r\n    }\r\n    update(delta, time) {\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'update', delta, time);\r\n        }\r\n    }\r\n    render(gameFrame) {\r\n        const results = this.renderResult;\r\n        ResetSceneRenderData(results, gameFrame);\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'render', results);\r\n        }\r\n        if (this.flush) {\r\n            results.numDirtyFrames++;\r\n            this.flush = false;\r\n        }\r\n        return results;\r\n    }\r\n}\n\nexport { SceneManager };\n","function CreateSceneRenderData() {\r\n    return {\r\n        gameFrame: 0,\r\n        numTotalFrames: 0,\r\n        numDirtyFrames: 0,\r\n        numDirtyCameras: 0,\r\n        worldData: []\r\n    };\r\n}\n\nexport { CreateSceneRenderData };\n","function ResetSceneRenderData(renderData, gameFrame = 0) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.numTotalFrames = 0;\r\n    renderData.numDirtyFrames = 0;\r\n    renderData.numDirtyCameras = 0;\r\n    renderData.worldData.length = 0;\r\n}\n\nexport { ResetSceneRenderData };\n","function CreateCanvas(width, height) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas.getContext('2d');\r\n}\n\nexport { CreateCanvas };\n","let instance;\r\nconst TextureManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { TextureManagerInstance };\n","import '../renderer/BindingQueue.js';\nimport './Frame.js';\nimport { Texture } from './Texture.js';\nimport { CreateCanvas } from './CreateCanvas.js';\nimport { TextureManagerInstance } from './TextureManagerInstance.js';\n\nclass TextureManager {\r\n    constructor() {\r\n        this.textures = new Map();\r\n        this.createDefaultTextures();\r\n        TextureManagerInstance.set(this);\r\n    }\r\n    createDefaultTextures() {\r\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\r\n        const missing = CreateCanvas(32, 32);\r\n        missing.strokeStyle = '#0f0';\r\n        missing.moveTo(0, 0);\r\n        missing.lineTo(32, 32);\r\n        missing.stroke();\r\n        missing.strokeRect(0.5, 0.5, 31, 31);\r\n        this.add('__MISSING', new Texture(missing.canvas));\r\n    }\r\n    get(key) {\r\n        const textures = this.textures;\r\n        if (textures.has(key)) {\r\n            return textures.get(key);\r\n        }\r\n        else {\r\n            return textures.get('__MISSING');\r\n        }\r\n    }\r\n    has(key) {\r\n        return this.textures.has(key);\r\n    }\r\n    add(key, source) {\r\n        let texture;\r\n        const textures = this.textures;\r\n        if (!textures.has(key)) {\r\n            if (source instanceof Texture) {\r\n                texture = source;\r\n            }\r\n            else {\r\n                texture = new Texture(source);\r\n            }\r\n            texture.key = key;\r\n            textures.set(key, texture);\r\n        }\r\n        return texture;\r\n    }\r\n}\n\nexport { TextureManager };\n","function GetVertices(transform) {\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y, right, bottom } = transform.extent;\r\n    const x0 = (x * a) + (y * c) + tx;\r\n    const y0 = (x * b) + (y * d) + ty;\r\n    const x1 = (x * a) + (bottom * c) + tx;\r\n    const y1 = (x * b) + (bottom * d) + ty;\r\n    const x2 = (right * a) + (bottom * c) + tx;\r\n    const y2 = (right * b) + (bottom * d) + ty;\r\n    const x3 = (right * a) + (y * c) + tx;\r\n    const y3 = (right * b) + (y * d) + ty;\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\n\nexport { GetVertices };\n","import '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { GetVertices } from '../transform/GetVertices.js';\n\nclass BoundsComponent {\r\n    constructor(entity) {\r\n        this.fixed = false;\r\n        this.includeChildren = true;\r\n        this.visibleOnly = true;\r\n        this.entity = entity;\r\n        this.area = new Rectangle();\r\n    }\r\n    set(x, y, width, height) {\r\n        this.area.set(x, y, width, height);\r\n    }\r\n    get() {\r\n        if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\r\n            this.update();\r\n        }\r\n        return this.area;\r\n    }\r\n    updateLocal() {\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(this.entity.transform);\r\n        const x = Math.min(x0, x1, x2, x3);\r\n        const y = Math.min(y0, y1, y2, y3);\r\n        const right = Math.max(x0, x1, x2, x3);\r\n        const bottom = Math.max(y0, y1, y2, y3);\r\n        return this.area.set(x, y, right - x, bottom - y);\r\n    }\r\n    update() {\r\n        const bounds = this.updateLocal();\r\n        this.entity.clearDirty(DIRTY_CONST.BOUNDS);\r\n        if (!this.includeChildren || !this.entity.numChildren) {\r\n            return bounds;\r\n        }\r\n        const visibleOnly = this.visibleOnly;\r\n        const children = this.entity.children;\r\n        let x = bounds.x;\r\n        let y = bounds.y;\r\n        let right = bounds.right;\r\n        let bottom = bounds.bottom;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            if (!child || (visibleOnly && !child.visible)) {\r\n                continue;\r\n            }\r\n            const childBounds = child.bounds.get();\r\n            if (childBounds.x < x) {\r\n                x = childBounds.x;\r\n            }\r\n            if (childBounds.y < y) {\r\n                y = childBounds.y;\r\n            }\r\n            if (childBounds.right > right) {\r\n                right = childBounds.right;\r\n            }\r\n            if (childBounds.bottom > bottom) {\r\n                bottom = childBounds.bottom;\r\n            }\r\n        }\r\n        return bounds.set(x, y, right - x, bottom - y);\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.area = null;\r\n    }\r\n}\n\nexport { BoundsComponent };\n","class InputComponent {\r\n    constructor(entity) {\r\n        this.enabled = false;\r\n        this.enabledChildren = true;\r\n        this.entity = entity;\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.hitArea = null;\r\n    }\r\n}\n\nexport { InputComponent };\n","class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.set(x, y);\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n    toString() {\r\n        return `[x=${this.x}, y=${this.y}]`;\r\n    }\r\n}\n\nexport { Vec2 };\n","function Copy(src, target) {\r\n    return target.set(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\n\nexport { Copy };\n","import { Matrix2D } from '../../../math/matrix2d/Matrix2D.js';\nimport '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport '../../../utils/NOOP.js';\nimport { Vec2Callback } from '../../../math/vec2/Vec2Callback.js';\nimport { originX, originY } from '../../../config/DefaultOrigin.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { Vec2 } from '../../../math/vec2/Vec2.js';\nimport { UpdateLocalTransform } from './UpdateLocalTransform.js';\nimport '../../../math/matrix2d/Copy.js';\nimport { UpdateWorldTransform } from './UpdateWorldTransform.js';\n\nclass TransformComponent {\r\n    constructor(entity, x = 0, y = 0) {\r\n        this.passthru = false;\r\n        this._rotation = 0;\r\n        this.entity = entity;\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n        this.position = new Vec2Callback(() => this.update(), x, y);\r\n        this.scale = new Vec2Callback(() => this.update(), 1, 1, true);\r\n        this.skew = new Vec2Callback(() => this.update(), 0, 0, true);\r\n        this.origin = new Vec2Callback(() => this.updateExtent(), originX, originY);\r\n        this.extent = new Rectangle();\r\n    }\r\n    update() {\r\n        this.updateLocal();\r\n        this.updateWorld();\r\n    }\r\n    updateLocal() {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateLocalTransform(this);\r\n    }\r\n    updateWorld() {\r\n        const entity = this.entity;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateWorldTransform(entity);\r\n        if (entity.numChildren) {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n    updateChildren() {\r\n        const children = this.entity.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            child.transform.updateWorld();\r\n        }\r\n    }\r\n    globalToLocal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        const id = 1 / ((a * d) + (c * -b));\r\n        out.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        out.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n        return out;\r\n    }\r\n    localToGlobal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        out.x = (a * x) + (c * y) + tx;\r\n        out.y = (b * x) + (d * y) + ty;\r\n        return out;\r\n    }\r\n    setExtent(x, y, width, height) {\r\n        this.extent.set(x, y, width, height);\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    updateExtent(width, height) {\r\n        const extent = this.extent;\r\n        const entity = this.entity;\r\n        if (width !== undefined) {\r\n            extent.width = width;\r\n        }\r\n        if (height !== undefined) {\r\n            extent.height = height;\r\n        }\r\n        extent.x = -(this.origin.x) * extent.width;\r\n        extent.y = -(this.origin.y) * extent.height;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    set rotation(value) {\r\n        if (value !== this._rotation) {\r\n            this._rotation = value;\r\n            this.update();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    destroy() {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.skew.destroy();\r\n        this.origin.destroy();\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.skew = null;\r\n        this.origin = null;\r\n        this.extent = null;\r\n    }\r\n}\n\nexport { TransformComponent };\n","function UpdateLocalTransform(transform) {\r\n    const local = transform.local;\r\n    const x = transform.position.x;\r\n    const y = transform.position.y;\r\n    const rotation = transform.rotation;\r\n    const scaleX = transform.scale.x;\r\n    const scaleY = transform.scale.y;\r\n    const skewX = transform.skew.x;\r\n    const skewY = transform.skew.y;\r\n    local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\r\n}\n\nexport { UpdateLocalTransform };\n","import { Copy } from '../../../math/matrix2d/Copy.js';\n\nfunction UpdateWorldTransform(gameObject) {\r\n    const parent = gameObject.parent;\r\n    const transform = gameObject.transform;\r\n    const lt = transform.local;\r\n    const wt = transform.world;\r\n    if (!parent) {\r\n        Copy(lt, wt);\r\n    }\r\n    else if (transform.passthru) {\r\n        Copy(parent.transform.world, wt);\r\n    }\r\n    else {\r\n        const { a, b, c, d, tx, ty } = lt;\r\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.transform.world;\r\n        wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\r\n    }\r\n}\n\nexport { UpdateWorldTransform };\n","import { GameInstance } from '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport './events/AddedToWorldEvent.js';\nimport { DestroyEvent } from './events/DestroyEvent.js';\nimport './events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport { DIRTY_CONST } from './DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport { DestroyChildren } from '../display/DestroyChildren.js';\nimport { ReparentChildren } from '../display/ReparentChildren.js';\nimport './components/transform/GetVertices.js';\nimport { BoundsComponent } from './components/bounds/BoundsComponent.js';\nimport { InputComponent } from './components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport './components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport './components/transform/UpdateWorldTransform.js';\nimport { TransformComponent } from './components/transform/TransformComponent.js';\n\nclass GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        this.type = 'GameObject';\r\n        this.name = '';\r\n        this.willUpdate = true;\r\n        this.willUpdateChildren = true;\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = false;\r\n        this.dirty = 0;\r\n        this.dirtyFrame = 0;\r\n        this.visible = true;\r\n        this.children = [];\r\n        this.events = new Map();\r\n        this.transform = new TransformComponent(this, x, y);\r\n        this.bounds = new BoundsComponent(this);\r\n        this.input = new InputComponent(this);\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n        this.transform.update();\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender);\r\n    }\r\n    isDirty(flag) {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n    clearDirty(flag) {\r\n        if (this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n        }\r\n        return this;\r\n    }\r\n    setDirty(flag, flag2) {\r\n        if (!this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n        if (!this.isDirty(flag2)) {\r\n            this.dirty ^= flag2;\r\n        }\r\n        return this;\r\n    }\r\n    update(delta, time) {\r\n        if (this.willUpdateChildren) {\r\n            const children = this.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child && child.willUpdate) {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n        this.postUpdate(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n    }\r\n    renderGL(renderer) {\r\n    }\r\n    renderCanvas(renderer) {\r\n    }\r\n    postRenderGL(renderer) {\r\n    }\r\n    postRenderCanvas(renderer) {\r\n    }\r\n    get numChildren() {\r\n        return this.children.length;\r\n    }\r\n    destroy(reparentChildren) {\r\n        if (reparentChildren) {\r\n            ReparentChildren(this, reparentChildren);\r\n        }\r\n        else {\r\n            DestroyChildren(this);\r\n        }\r\n        Emit(this, DestroyEvent, this);\r\n        this.transform.destroy();\r\n        this.bounds.destroy();\r\n        this.input.destroy();\r\n        this.events.clear();\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\n\nexport { GameObject };\n","import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\r\n    const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    SetParent(newParent, ...moved);\r\n    moved.forEach(child => {\r\n        child.transform.updateWorld();\r\n    });\r\n    return moved;\r\n}\n\nexport { ReparentChildren };\n","import { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction DestroyChildren(parent, beginIndex = 0, endIndex) {\r\n    const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    removed.forEach(child => {\r\n        child.destroy();\r\n    });\r\n}\n\nexport { DestroyChildren };\n","const DestroyEvent = 'destroy';\n\nexport { DestroyEvent };\n","import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport { GameObject } from '../GameObject.js';\n\nclass Container extends GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        super(x, y);\r\n        this._alpha = 1;\r\n        this.type = 'Container';\r\n    }\r\n    setSize(width, height = width) {\r\n        this.transform.updateExtent(width, height);\r\n        return this;\r\n    }\r\n    setPosition(x, y) {\r\n        this.transform.position.set(x, y);\r\n        return this;\r\n    }\r\n    setOrigin(x, y = x) {\r\n        this.transform.origin.set(x, y);\r\n        return this;\r\n    }\r\n    setSkew(x, y = x) {\r\n        this.transform.skew.set(x, y);\r\n        return this;\r\n    }\r\n    setScale(x, y = x) {\r\n        this.transform.scale.set(x, y);\r\n        return this;\r\n    }\r\n    setRotation(value) {\r\n        this.transform.rotation = value;\r\n        return this;\r\n    }\r\n    set width(value) {\r\n        this.transform.updateExtent(value);\r\n    }\r\n    get width() {\r\n        return this.transform.extent.width;\r\n    }\r\n    set height(value) {\r\n        this.transform.updateExtent(undefined, value);\r\n    }\r\n    get height() {\r\n        return this.transform.extent.height;\r\n    }\r\n    set x(value) {\r\n        this.transform.position.x = value;\r\n    }\r\n    get x() {\r\n        return this.transform.position.x;\r\n    }\r\n    set y(value) {\r\n        this.transform.position.y = value;\r\n    }\r\n    get y() {\r\n        return this.transform.position.y;\r\n    }\r\n    set originX(value) {\r\n        this.transform.origin.x = value;\r\n    }\r\n    get originX() {\r\n        return this.transform.origin.x;\r\n    }\r\n    set originY(value) {\r\n        this.transform.origin.y = value;\r\n    }\r\n    get originY() {\r\n        return this.transform.origin.y;\r\n    }\r\n    set skewX(value) {\r\n        this.transform.skew.x = value;\r\n    }\r\n    get skewX() {\r\n        return this.transform.skew.x;\r\n    }\r\n    set skewY(value) {\r\n        this.transform.skew.y = value;\r\n    }\r\n    get skewY() {\r\n        return this.transform.skew.y;\r\n    }\r\n    set scaleX(value) {\r\n        this.transform.scale.x = value;\r\n    }\r\n    get scaleX() {\r\n        return this.transform.scale.x;\r\n    }\r\n    set scaleY(value) {\r\n        this.transform.scale.y = value;\r\n    }\r\n    get scaleY() {\r\n        return this.transform.scale.y;\r\n    }\r\n    set rotation(value) {\r\n        this.transform.rotation = value;\r\n    }\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            this.setDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n}\n\nexport { Container };\n","function PackColor(rgb, alpha) {\r\n    const ua = ((alpha * 255) | 0) & 0xFF;\r\n    return ((ua << 24) | rgb) >>> 0;\r\n}\n\nexport { PackColor };\n","function SetFrame(texture, key, ...children) {\r\n    const frame = texture.getFrame(key);\r\n    const { u0, u1, v0, v1, pivot } = frame;\r\n    children.forEach(child => {\r\n        if (!child || frame === child.frame) {\r\n            return;\r\n        }\r\n        child.frame = frame;\r\n        if (pivot) {\r\n            child.setOrigin(pivot.x, pivot.y);\r\n        }\r\n        child.frame.setExtent(child);\r\n        child.hasTexture = true;\r\n        const data = child.vertexData;\r\n        data[2] = u0;\r\n        data[3] = v0;\r\n        data[8] = u0;\r\n        data[9] = v1;\r\n        data[14] = u1;\r\n        data[15] = v1;\r\n        data[20] = u1;\r\n        data[21] = v0;\r\n    });\r\n    return children;\r\n}\n\nexport { SetFrame };\n","import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../renderer/BindingQueue.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../../textures/TextureManagerInstance.js';\nimport { BatchTexturedQuad } from '../../renderer/webgl1/draw/BatchTexturedQuad.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport '../GameObject.js';\nimport { Container } from '../container/Container.js';\nimport { DrawTexturedQuad } from '../../renderer/canvas/draw/DrawTexturedQuad.js';\nimport '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\nimport { SetFrame } from './SetFrame.js';\nimport { SetTexture } from './SetTexture.js';\nimport { UpdateVertices } from './UpdateVertices.js';\n\nclass Sprite extends Container {\r\n    constructor(x, y, texture, frame) {\r\n        super(x, y);\r\n        this.hasTexture = false;\r\n        this._tint = 0xffffff;\r\n        this.type = 'Sprite';\r\n        this.vertexData = new Float32Array(24).fill(0);\r\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\r\n        this.vertexAlpha = new Float32Array(4).fill(1);\r\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\r\n        this.setTexture(texture, frame);\r\n    }\r\n    setTexture(key, frame) {\r\n        SetTexture(key, frame, this);\r\n        return this;\r\n    }\r\n    setFrame(key) {\r\n        SetFrame(this.texture, key, this);\r\n        return this;\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\r\n    }\r\n    preRender() {\r\n        if (this.isDirty(DIRTY_CONST.COLORS)) {\r\n            PackColors(this);\r\n            this.clearDirty(DIRTY_CONST.COLORS);\r\n        }\r\n        if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            UpdateVertices(this);\r\n            this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n    renderGL(renderer) {\r\n        this.preRender();\r\n        BatchTexturedQuad(this, renderer);\r\n    }\r\n    renderCanvas(renderer) {\r\n        this.preRender();\r\n        DrawTexturedQuad(this, renderer);\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            const vertexAlpha = this.vertexAlpha;\r\n            vertexAlpha[0] = value;\r\n            vertexAlpha[1] = value;\r\n            vertexAlpha[2] = value;\r\n            vertexAlpha[3] = value;\r\n            this.setDirty(DIRTY_CONST.ALPHA);\r\n        }\r\n    }\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value) {\r\n        if (value !== this._tint) {\r\n            this._tint = value;\r\n            const vertexTint = this.vertexTint;\r\n            vertexTint[0] = value;\r\n            vertexTint[1] = value;\r\n            vertexTint[2] = value;\r\n            vertexTint[3] = value;\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n        this.vertexData = null;\r\n        this.vertexColor = null;\r\n        this.vertexAlpha = null;\r\n        this.vertexTint = null;\r\n    }\r\n}\n\nexport { Sprite };\n","import '../../renderer/BindingQueue.js';\nimport '../../textures/Frame.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance.js';\nimport { SetFrame } from './SetFrame.js';\n\nfunction SetTexture(key, frame, ...children) {\r\n    if (!key) {\r\n        children.forEach(child => {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else {\r\n        let texture;\r\n        if (key instanceof Texture) {\r\n            texture = key;\r\n        }\r\n        else {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n        if (!texture) {\r\n            console.warn(`Invalid Texture key: ${key}`);\r\n        }\r\n        else {\r\n            children.forEach(child => {\r\n                child.texture = texture;\r\n            });\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n    return children;\r\n}\n\nexport { SetTexture };\n","import { PackColor } from './PackColor.js';\n\nfunction PackColors(sprite) {\r\n    const alpha = sprite.vertexAlpha;\r\n    const tint = sprite.vertexTint;\r\n    const color = sprite.vertexColor;\r\n    color[0] = PackColor(tint[0], alpha[0]);\r\n    color[1] = PackColor(tint[1], alpha[1]);\r\n    color[2] = PackColor(tint[2], alpha[2]);\r\n    color[3] = PackColor(tint[3], alpha[3]);\r\n    return sprite;\r\n}\n\nexport { PackColors };\n","import { GetVertices } from '../components/transform/GetVertices.js';\n\nfunction UpdateVertices(sprite) {\r\n    const data = sprite.vertexData;\r\n    const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(sprite.transform);\r\n    data[0] = x0;\r\n    data[1] = y0;\r\n    data[6] = x1;\r\n    data[7] = y1;\r\n    data[12] = x2;\r\n    data[13] = y2;\r\n    data[18] = x3;\r\n    data[19] = y3;\r\n    return sprite;\r\n}\n\nexport { UpdateVertices };\n","function BatchTexturedQuad(sprite, renderer) {\r\n    const texture = sprite.texture;\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n    const binding = texture.binding;\r\n    if (shader.count === buffer.batchSize) {\r\n        renderer.flush();\r\n    }\r\n    const data = sprite.vertexData;\r\n    renderer.textures.request(texture);\r\n    const textureIndex = binding.index;\r\n    data[4] = textureIndex;\r\n    data[10] = textureIndex;\r\n    data[16] = textureIndex;\r\n    data[22] = textureIndex;\r\n    const offset = shader.count * buffer.quadElementSize;\r\n    buffer.vertexViewF32.set(data, offset);\r\n    const color = sprite.vertexColor;\r\n    const U32 = buffer.vertexViewU32;\r\n    U32[offset + 5] = color[0];\r\n    U32[offset + 11] = color[2];\r\n    U32[offset + 17] = color[3];\r\n    U32[offset + 23] = color[1];\r\n    shader.count++;\r\n}\n\nexport { BatchTexturedQuad };\n","function DrawTexturedQuad(sprite, renderer) {\r\n    const frame = sprite.frame;\r\n    if (!frame) {\r\n        return;\r\n    }\r\n    const ctx = renderer.ctx;\r\n    const transform = sprite.transform;\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y } = transform.extent;\r\n    ctx.save();\r\n    ctx.setTransform(a, b, c, d, tx, ty);\r\n    ctx.globalAlpha = sprite.alpha;\r\n    ctx.drawImage(frame.texture.image, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\r\n    ctx.restore();\r\n}\n\nexport { DrawTexturedQuad };\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\nimport { HasDirtyChildren } from './HasDirtyChildren.js';\n\nfunction UpdateCachedLayers(cachedLayers, dirtyCamera) {\r\n    cachedLayers.forEach(layer => {\r\n        if (dirtyCamera || HasDirtyChildren(layer)) {\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else {\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\n\nexport { UpdateCachedLayers };\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction HasDirtyChildren(parent) {\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\r\n        return true;\r\n    }\r\n    const stack = [parent];\r\n    while (stack.length > 0) {\r\n        const entry = stack.pop();\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            return true;\r\n        }\r\n        const numChildren = entry.children.length;\r\n        if (numChildren > 0) {\r\n            for (let i = 0; i < numChildren; i++) {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n    stack.length = 0;\r\n    return false;\r\n}\n\nexport { HasDirtyChildren };\n","import '../gameobjects/DIRTY_CONST.js';\nimport { CalculateTotalRenderable } from './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport { UpdateCachedLayers } from './UpdateCachedLayers.js';\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch.js';\n\nfunction BuildRenderList(world) {\r\n    const cachedLayers = [];\r\n    const stack = [];\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n    const renderData = world.renderData;\r\n    if (cachedLayers.length > 0) {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n    entries.forEach(entry => {\r\n        if (entry.children.length) {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n    renderData.renderList = entries;\r\n    if (world.forceRefresh) {\r\n        renderData.dirtyFrame++;\r\n        world.forceRefresh = false;\r\n    }\r\n}\n\nexport { BuildRenderList };\n","function WorldDepthFirstSearch(cachedLayers, parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const node = parent.children[i];\r\n        if (node.isRenderable()) {\r\n            const children = [];\r\n            const entry = { node, children };\r\n            output.push(entry);\r\n            if (node.willRenderChildren && node.numChildren > 0) {\r\n                if (node.willCacheChildren) {\r\n                    cachedLayers.push(entry);\r\n                }\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { WorldDepthFirstSearch };\n","function CalculateTotalRenderable(entry, renderData) {\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n        renderData.dirtyFrame++;\r\n    }\r\n    entry.children.forEach(child => {\r\n        if (child.children.length > 0) {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\n\nexport { CalculateTotalRenderable };\n","function ResetWorldRenderData(renderData, gameFrame) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n    renderData.renderList.length = 0;\r\n}\n\nexport { ResetWorldRenderData };\n","import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport { DestroyEvent } from '../gameobjects/events/DestroyEvent.js';\nimport { PostUpdateEvent } from '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { UpdateEvent } from '../gameobjects/events/UpdateEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport { RemoveChildren } from '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport { Off } from '../events/Off.js';\nimport { On } from '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport { GameObject } from '../gameobjects/GameObject.js';\nimport { WorldRenderEvent } from './events/WorldRenderEvent.js';\nimport { WorldShutdownEvent } from './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport { BuildRenderList } from './BuildRenderList.js';\nimport { MergeRenderData } from './MergeRenderData.js';\nimport { ResetWorldRenderData } from './ResetWorldRenderData.js';\n\nclass BaseWorld extends GameObject {\r\n    constructor(scene) {\r\n        super();\r\n        this.forceRefresh = false;\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n        this.events = new Map();\r\n        this._updateListener = On(scene, 'update', (delta, time) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n    update(delta, time) {\r\n        if (!this.willUpdate) {\r\n            return;\r\n        }\r\n        Emit(this, UpdateEvent, delta, time, this);\r\n        super.update(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n        Emit(this, PostUpdateEvent, delta, time, this);\r\n    }\r\n    render(sceneRenderData) {\r\n        const renderData = this.renderData;\r\n        ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\r\n        if (!this.willRender || !this.visible) {\r\n            return;\r\n        }\r\n        BuildRenderList(this);\r\n        Emit(this, WorldRenderEvent, renderData, this);\r\n        MergeRenderData(sceneRenderData, renderData);\r\n        if (this.camera) {\r\n            this.camera.dirtyRender = false;\r\n        }\r\n    }\r\n    shutdown() {\r\n        const scene = this.scene;\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n        RemoveChildren(this);\r\n        Emit(this, WorldShutdownEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.reset();\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        Emit(this, DestroyEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.destroy();\r\n        }\r\n        this.events.clear();\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\n\nexport { BaseWorld };\n","const UpdateEvent = 'update';\n\nexport { UpdateEvent };\n","const PostUpdateEvent = 'postupdate';\n\nexport { PostUpdateEvent };\n","const WorldRenderEvent = 'worldrender';\n\nexport { WorldRenderEvent };\n","function MergeRenderData(sceneRenderData, worldRenderData) {\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n    if (worldRenderData.camera.dirtyRender) {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\n\nexport { MergeRenderData };\n","import './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\n\nfunction RemoveChildren(parent, ...children) {\r\n    children.forEach(child => {\r\n        RemoveChild(parent, child);\r\n    });\r\n    return children;\r\n}\n\nexport { RemoveChildren };\n","const WorldShutdownEvent = 'worldshutdown';\n\nexport { WorldShutdownEvent };\n","import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport { StaticCamera } from '../camera/StaticCamera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport './BuildRenderList.js';\nimport './MergeRenderData.js';\nimport './ResetWorldRenderData.js';\nimport { BaseWorld } from './BaseWorld.js';\nimport { CreateWorldRenderData } from './CreateWorldRenderData.js';\n\nclass StaticWorld extends BaseWorld {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.type = 'StaticWorld';\r\n        this.camera = new StaticCamera();\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\n\nexport { StaticWorld };\n","function CreateWorldRenderData(camera) {\r\n    return {\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0,\r\n        renderList: []\r\n    };\r\n}\n\nexport { CreateWorldRenderData };\n","import { SceneManagerInstance } from './SceneManagerInstance.js';\nimport { GetConfigValue } from './GetConfigValue.js';\n\nfunction Install(scene, config = {}) {\r\n    const sceneManager = SceneManagerInstance.get();\r\n    const size = sceneManager.scenes.size;\r\n    const sceneIndex = sceneManager.sceneIndex;\r\n    const firstScene = (size === 0);\r\n    if (typeof config === 'string') {\r\n        scene.key = config;\r\n    }\r\n    else if (config || (!config && firstScene)) {\r\n        scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex.toString());\r\n    }\r\n    if (sceneManager.scenes.has(scene.key)) {\r\n        console.warn('Scene key already in use: ' + scene.key);\r\n    }\r\n    else {\r\n        sceneManager.scenes.set(scene.key, scene);\r\n        sceneManager.flush = true;\r\n        sceneManager.sceneIndex++;\r\n    }\r\n}\n\nexport { Install };\n","function GetConfigValue(config, property, defaultValue) {\r\n    if (Object.prototype.hasOwnProperty.call(config, property)) {\r\n        return config[property];\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\n\nexport { GetConfigValue };\n","import { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CanvasTexture } from '@phaserjs/phaser/textures/types/CanvasTexture';\r\n\r\n/**\r\n * Draw on canvas texture.\r\n *\r\n * @param {(string | Texture)} key Texture key, or texture object.\r\n * @param {(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void} callback Drawing callback.\r\n * @param {*} [scope] Context of drawing callback.\r\n * @param {number} [resolution=1] Resolution of canvas.\r\n * @returns {Texture} Texture object.\r\n */\r\nexport let DrawCanvasTexture = function (\r\n    key: string | Texture,\r\n    callback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void,\r\n    scope?: any,\r\n    resolution: number = 1\r\n): Texture {\r\n\r\n    let texture: Texture;\r\n    if (typeof (key) === 'string') {\r\n        let textureManager = TextureManagerInstance.get();\r\n        if (!textureManager.has(key)) {\r\n            textureManager.add(key, CanvasTexture());\r\n        }\r\n        texture = textureManager.get(key);\r\n    } else {\r\n        texture = key;\r\n    }\r\n\r\n    let canvas = texture.image as HTMLCanvasElement;\r\n    let context = canvas.getContext('2d');\r\n\r\n    if (scope) {\r\n        callback.call(scope, canvas, context);\r\n    } else {\r\n        callback(canvas, context);\r\n    }\r\n\r\n    texture.setSize(\r\n        canvas.width / resolution,\r\n        canvas.height / resolution\r\n    );\r\n    if (texture.binding) {\r\n        texture.binding.update();\r\n    }\r\n\r\n    return texture;\r\n}","import '../../renderer/BindingQueue.js';\nimport '../Frame.js';\nimport { Texture } from '../Texture.js';\nimport { CreateCanvas } from '../CreateCanvas.js';\n\nfunction CanvasTexture(width = 32, height = 32) {\r\n    const ctx = CreateCanvas(width, height);\r\n    return new Texture(ctx.canvas);\r\n}\n\nexport { CanvasTexture };\n","import { GetCanvasGradientCallbackType } from '../types/GetCanvasGradientCallbackType';\r\n\r\nexport let GetStyle = function (\r\n    style: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D\r\n): string | CanvasGradient | CanvasPattern {\r\n\r\n    switch (typeof (style)) {\r\n        case 'number': return `#${style.toString(16)}`;\r\n        case 'function': return style(canvas, context);\r\n        default: return style;\r\n    }\r\n}","import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CreatePolygonTexture } from './CreatePolygonTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\n\r\nexport enum Direction {\r\n    right = 0,\r\n    down = 1,\r\n    left = 2,\r\n    up = 3\r\n}\r\n\r\nexport interface IConfig {\r\n    direction?: Direction,\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport let CreateTriangleTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        direction = Direction.right,\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 3\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    let x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number;\r\n    switch (direction) {\r\n        case Direction.down:\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width / 2;\r\n            y3 = height;\r\n            break;\r\n        case Direction.left:\r\n            x1 = 0;\r\n            y1 = height / 2;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        case Direction.up:\r\n            x1 = 0;\r\n            y1 = height;\r\n            x2 = width / 2;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        default: // Direction.right\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = 0;\r\n            y2 = height;\r\n            x3 = width;\r\n            y3 = height / 2;\r\n            break;\r\n    }\r\n\r\n    return CreatePolygonTexture(key, {\r\n        points: [\r\n            { x: x1, y: y1 },\r\n            { x: x2, y: y2 },\r\n            { x: x3, y: y3 }\r\n        ],\r\n        fillStyle: fillStyle,\r\n        strokeStyle: strokeStyle,\r\n        lineWidth: lineWidth\r\n    })\r\n}","import { BackgroundColor, Parent, Scenes, Size, WebGLRenderer } from '@phaserjs/phaser/config';\r\nimport { Game, Scene } from '@phaserjs/phaser';\r\nimport { AddChild } from '@phaserjs/phaser/display/';\r\nimport { StaticWorld } from '@phaserjs/phaser/world';\r\nimport { CreateCircleTexture } from '../../src/texture/canvastexture';\r\nimport { Sprite } from '@phaserjs/phaser/gameobjects/sprite/Sprite';\r\n\r\nclass Demo extends Scene {\r\n    constructor() {\r\n        super();\r\n\r\n        CreateCircleTexture(\r\n            'circle',\r\n            {\r\n                width: 100,\r\n                fillStyle: 'yellow',\r\n                // fillStyle: function (canvas, context) {  // Return gradient\r\n                //     let w = canvas.width,\r\n                //         h = canvas.height,\r\n                //         x = w / 2,\r\n                //         y = h / 2;\r\n                //     let grd = context.createRadialGradient(x, y, 0, x, y, w);\r\n                //     grd.addColorStop(0, 'white');\r\n                //     grd.addColorStop(1, 'black');\r\n                //     return grd;\r\n                // },\r\n                strokeStyle: 'red',\r\n                lineWidth: 10\r\n            }\r\n        )\r\n\r\n        const world = new StaticWorld(this);\r\n        const image = new Sprite(400, 300, 'circle');\r\n        AddChild(world, image);\r\n    }\r\n}\r\n\r\nnew Game(\r\n    WebGLRenderer(),\r\n    Size(800, 600),\r\n    Parent('game'),\r\n    BackgroundColor(0x2d2d2d),\r\n    Scenes(Demo)\r\n);\r\n","import { GameInstance } from './GameInstance.js';\nimport { GetBanner } from './config/Banner.js';\nimport './renderer/BindingQueue.js';\nimport { GetRenderer } from './config/SetRenderer.js';\nimport './dom/GetElement.js';\nimport { GetParent } from './config/Parent.js';\nimport './config/Scenes.js';\nimport './textures/Frame.js';\nimport './textures/Texture.js';\nimport { Emit } from './events/Emit.js';\nimport { AddToDOM } from './dom/AddToDOM.js';\nimport { DOMContentLoaded } from './dom/DOMContentLoaded.js';\nimport { EventEmitter } from './events/EventEmitter.js';\nimport './events/EventInstance.js';\nimport './events/On.js';\nimport './events/Once.js';\nimport './scenes/CreateSceneRenderData.js';\nimport './scenes/ResetSceneRenderData.js';\nimport './scenes/SceneManagerInstance.js';\nimport { SceneManager } from './scenes/SceneManager.js';\nimport './textures/CreateCanvas.js';\nimport './textures/TextureManagerInstance.js';\nimport { TextureManager } from './textures/TextureManager.js';\n\nclass Game extends EventEmitter {\r\n    constructor(...settings) {\r\n        super();\r\n        this.VERSION = '4.0.0-beta1';\r\n        this.isBooted = false;\r\n        this.isPaused = false;\r\n        this.willUpdate = true;\r\n        this.willRender = true;\r\n        this.lastTick = 0;\r\n        this.elapsed = 0;\r\n        this.frame = 0;\r\n        GameInstance.set(this);\r\n        DOMContentLoaded(() => this.boot(settings));\r\n    }\r\n    boot(settings) {\r\n        settings.forEach(setting => setting());\r\n        const renderer = GetRenderer();\r\n        this.renderer = new renderer();\r\n        this.textureManager = new TextureManager();\r\n        this.sceneManager = new SceneManager();\r\n        const parent = GetParent();\r\n        if (parent) {\r\n            AddToDOM(this.renderer.canvas, parent);\r\n        }\r\n        this.isBooted = true;\r\n        GetBanner();\r\n        Emit(this, 'boot');\r\n        this.lastTick = performance.now();\r\n        this.step(this.lastTick);\r\n    }\r\n    pause() {\r\n        this.isPaused = true;\r\n    }\r\n    resume() {\r\n        this.isPaused = false;\r\n        this.lastTick = performance.now();\r\n    }\r\n    step(time) {\r\n        const delta = time - this.lastTick;\r\n        this.lastTick = time;\r\n        this.elapsed += delta;\r\n        if (!this.isPaused) {\r\n            if (this.willUpdate) {\r\n                this.sceneManager.update(delta, time);\r\n                Emit(this, 'update', delta, time);\r\n            }\r\n            if (this.willRender) {\r\n                this.renderer.render(this.sceneManager.render(this.frame));\r\n            }\r\n        }\r\n        this.frame++;\r\n        GameInstance.setFrame(this.frame);\r\n        GameInstance.setElapsed(this.elapsed);\r\n        requestAnimationFrame(now => this.step(now));\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { Game };\n","class EventEmitter {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n}\n\nexport { EventEmitter };\n","function DOMContentLoaded(callback) {\r\n    const readyState = document.readyState;\r\n    if (readyState === 'complete' || readyState === 'interactive') {\r\n        callback();\r\n        return;\r\n    }\r\n    const check = () => {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n        callback();\r\n    };\r\n    if (!document.body) {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (window.hasOwnProperty('cordova')) {\r\n        document.addEventListener('deviceready', check, true);\r\n    }\r\n    else {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n}\n\nexport { DOMContentLoaded };\n","import { GetElement } from './GetElement.js';\n\nfunction AddToDOM(element, parent) {\r\n    const target = GetElement(parent);\r\n    target.appendChild(element);\r\n    return element;\r\n}\n\nexport { AddToDOM };\n","import { GameInstance } from '../GameInstance.js';\n\nlet title = 'Phaser';\r\nlet url = 'https://phaser4.io';\r\nlet color = '#fff';\r\nlet background = 'linear-gradient(#3e0081 40%, #00bcc3)';\r\nfunction Banner(gameTitle = '', gameURL = '', textColor, textBackground) {\r\n    return () => {\r\n        title = gameTitle;\r\n        url = gameURL;\r\n        if (textColor) {\r\n            color = textColor;\r\n        }\r\n        if (textBackground) {\r\n            background = textBackground;\r\n        }\r\n    };\r\n}\r\nfunction GetBanner() {\r\n    if (title !== '') {\r\n        const game = GameInstance.get();\r\n        const version = (title === 'Phaser') ? ' v' + game.VERSION : '';\r\n        console.log(`%c${title}${version}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, '');\r\n    }\r\n}\n\nexport { Banner, GetBanner };\n","import './BackgroundColor.js';\nimport './Size.js';\nimport '../renderer/BindingQueue.js';\nimport { SetRenderer } from './SetRenderer.js';\nimport './MaxTextures.js';\nimport './WebGLContext.js';\nimport '../renderer/webgl1/fbo/FBOSystem.js';\nimport '../renderer/webgl1/GL.js';\nimport '../renderer/webgl1/colors/GetRGBArray.js';\nimport '../math/matrix2d-funcs/ExactEquals.js';\nimport '../renderer/webgl1/fbo/CreateFramebuffer.js';\nimport '../renderer/webgl1/textures/CreateGLTexture.js';\nimport '../renderer/webgl1/fbo/DeleteFramebuffer.js';\nimport '../renderer/webgl1/textures/DeleteGLTexture.js';\nimport '../math/pow2/IsSizePowerOfTwo.js';\nimport '../renderer/webgl1/textures/SetGLTextureFilterMode.js';\nimport '../renderer/webgl1/textures/UpdateGLTexture.js';\nimport '../renderer/webgl1/textures/GLTextureBinding.js';\nimport '../renderer/webgl1/buffers/IndexedBuffer.js';\nimport '../textures/Frame.js';\nimport '../textures/Texture.js';\nimport '../renderer/webgl1/WebGLRendererInstance.js';\nimport '../renderer/webgl1/shaders/SingleTextureQuadShader.js';\nimport '../renderer/webgl1/shaders/MultiTextureQuadShader.js';\nimport '../renderer/webgl1/cameras/Ortho.js';\nimport '../renderer/webgl1/shaders/ShaderSystem.js';\nimport '../renderer/webgl1/shaders/CheckShaderMaxIfStatements.js';\nimport '../renderer/webgl1/textures/TextureSystem.js';\nimport { WebGLRenderer as WebGLRenderer$1 } from '../renderer/webgl1/WebGLRenderer.js';\n\nfunction WebGLRenderer() {\r\n    return () => {\r\n        SetRenderer(WebGLRenderer$1);\r\n    };\r\n}\n\nexport { WebGLRenderer };\n","import { GameInstance } from '../GameInstance.js';\nimport './SceneManagerInstance.js';\nimport './GetConfigValue.js';\nimport { Install } from './Install.js';\n\nclass Scene {\r\n    constructor(config) {\r\n        this.game = GameInstance.get();\r\n        this.events = new Map();\r\n        Install(this, config);\r\n    }\r\n}\n\nexport { Scene };\n","import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport let CreateCircleTexture = function (\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 3\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        let x = canvas.width / 2;\r\n        let y = canvas.height / 2;\r\n        let rx = (width - lineWidth) / 2;\r\n        let ry = (height - lineWidth) / 2;\r\n\r\n        context.beginPath();\r\n        context.ellipse(x, y, rx, ry, 0, 0, (2 * Math.PI));\r\n\r\n        if (fillStyle) {\r\n            context.fillStyle = GetStyle(fillStyle, canvas, context);\r\n            context.fill();\r\n        }\r\n\r\n        if (strokeStyle) {\r\n            context.strokeStyle = GetStyle(strokeStyle, canvas, context);\r\n            context.lineWidth = lineWidth;\r\n            context.stroke();\r\n        }\r\n\r\n    });\r\n}","import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChild(parent, child) {\r\n    parent.children.push(child);\r\n    SetParent(parent, child);\r\n    child.transform.updateWorld();\r\n    return child;\r\n}\n\nexport { AddChild };\n"],"names":["instance","frame","elapsed","GameInstance","game","current","bgColor","_width","_height","_resolution","GetWidth","GetHeight","GetResolution","queue","BindingQueue","texture","push","length","parent","maxTextures","GetMaxTextures","GetElement","target","element","document","getElementById","nodeType","body","GetParent","_scenes","gl","_contextAttributes","alpha","antialias","depth","premultipliedAlpha","FBOSystem","[object Object]","renderer","this","stack","bindFramebuffer","FRAMEBUFFER","viewport","width","height","framebuffer","clear","set","clearColor","COLOR_BUFFER_BIT","pop","len","entry","reset","GL","context","CreateGLTexture","binding","flipY","unpackPremultiplyAlpha","minFilter","magFilter","wrapS","wrapT","generateMipmap","isPOT","source","image","glTexture","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","DeleteGLTexture","isTexture","deleteTexture","GLTextureBinding","config","index","indexCounter","dirtyIndex","LINEAR","CLAMP_TO_EDGE","linear","mode","NEAREST","SetGLTextureFilterMode","UpdateGLTexture","isFramebuffer","deleteFramebuffer","DeleteFramebuffer","IndexedBuffer","batchSize","dataSize","indexSize","vertexElementSize","quadIndexSize","vertexByteSize","quadByteSize","quadElementSize","bufferByteSize","create","ibo","i","data","ArrayBuffer","Uint16Array","vertexViewF32","Float32Array","vertexViewU32","Uint32Array","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","indexBuffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","Frame","key","x","y","trimmed","sourceSizeWidth","sourceSizeHeight","updateUVs","pivot","w","h","spriteSourceSizeX","spriteSourceSizeY","spriteSourceSizeWidth","spriteSourceSizeHeight","originX","originY","left","right","top","bottom","child","transform","origin","setExtent","baseTextureWidth","baseTextureHeight","u0","v0","u1","v1","Texture","frames","Map","addFrame","has","firstFrame","get","console","warn","setSize","destroy","WebGLRendererInstance","shaderSource","fragmentShader","vertexShader","SingleTextureQuadShader","attribs","aVertexPosition","aTextureCoord","aTextureId","aTintColor","uniforms","uProjectionMatrix","uCameraMatrix","uTexture","uTime","uResolution","renderToFBO","resolution","buffer","createShaders","count","attachment","COLOR_ATTACHMENT0","createFramebuffer","framebufferTexture2D","CreateFramebuffer","fragmentShaderSource","vertexShaderSource","createShader","FRAGMENT_SHADER","compileShader","failed","message","getShaderInfoLog","error","VERTEX_SHADER","program","createProgram","attachShader","linkProgram","useProgram","Object","keys","location","getAttribLocation","enableVertexAttribArray","getUniformLocation","projectionMatrix","cameraMatrix","textureID","uniformMatrix4fv","uniform1i","textures","textureIndex","uniform1f","performance","now","uniform2f","bindBuffers","stride","vertexAttribPointer","FLOAT","view","subarray","bufferSubData","fbo","add","drawElements","TRIANGLES","UNSIGNED_SHORT","draw","prevCount","MultiTextureQuadShader","super","src","replace","uniform1iv","ShaderSystem","currentShader","stackEntry","shader","currentEntry","singleQuadShader","flush","currentCamera","matrix","success","bind","rebind","flushTotal","fragTemplate","join","GenerateSrc","maxIfs","TextureSystem","startActiveTexture","tempTextures","maxGPUTextures","fragmentSrc","getShaderParameter","COMPILE_STATUS","CheckShaderMaxIfStatements","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxConfigTextures","Math","max","forEach","texturesIndex","tempTexture","Uint8Array","currentActiveTexture","temp","setIndex","TEXTURE1","WebGLRenderer","clearBeforeRender","optimizeRedraw","autoResize","contextLost","setBackgroundColor","canvas","createElement","addEventListener","event","onContextLost","onContextRestored","initContext","shaders","getContext","disable","DEPTH_TEST","CULL_FACE","resize","init","style","toString","near","far","Ortho","preventDefault","color","output","r","g","b","a","GetRGBArray","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","update","renderData","numDirtyFrames","numDirtyCameras","cls","worlds","worldData","camera","renderList","worldTransform","c","d","tx","ty","children","renderNode","node","renderGL","postRenderGL","undefined","Matrix2D","Rectangle","rect","Contains","value","NOOP","Vec2Callback","callback","compareValue","_x","_y","StaticCamera","type","dirtyRender","bounds","world","RemoveChild","currentIndex","indexOf","GetChildIndex","removed","splice","RemoveChildAt","Emit","emitter","args","events","size","listeners","ee","apply","once","delete","SetParent","parentWorld","SetWorld","shift","numChildren","unshift","DepthFirstSearch","DIRTY_CONST","RemoveChildrenBetween","beginIndex","endIndex","range","EventInstance","Off","hasContext","hasOnce","listener","On","TypeError","Set","Once","SceneManagerInstance","manager","SceneManager","scenes","sceneIndex","renderResult","gameFrame","numTotalFrames","boot","scene","delta","time","values","results","ResetSceneRenderData","CreateCanvas","TextureManagerInstance","TextureManager","createDefaultTextures","missing","strokeStyle","moveTo","lineTo","stroke","strokeRect","GetVertices","extent","x0","y0","x1","y1","x2","y2","x3","y3","BoundsComponent","entity","fixed","includeChildren","visibleOnly","area","isDirty","min","updateLocal","clearDirty","visible","childBounds","InputComponent","enabled","enabledChildren","hitArea","Vec2","Copy","TransformComponent","passthru","_rotation","local","position","scale","skew","updateExtent","updateWorld","setDirty","rotation","scaleX","scaleY","skewX","skewY","cos","sin","UpdateLocalTransform","gameObject","lt","wt","pa","pb","pc","pd","ptx","pty","UpdateWorldTransform","updateChildren","out","id","GameObject","name","willUpdate","willUpdateChildren","willRender","willRenderChildren","willCacheChildren","dirty","dirtyFrame","input","flag","flag2","postUpdate","reparentChildren","newParent","moved","ReparentChildren","DestroyChildren","Container","_alpha","PackColor","rgb","SetFrame","getFrame","setOrigin","hasTexture","vertexData","Sprite","_tint","fill","vertexColor","vertexAlpha","vertexTint","setTexture","SetTexture","sprite","tint","PackColors","UpdateVertices","preRender","request","offset","U32","BatchTexturedQuad","ctx","save","setTransform","globalAlpha","drawImage","restore","DrawTexturedQuad","UpdateCachedLayers","cachedLayers","dirtyCamera","layer","HasDirtyChildren","BuildRenderList","entries","WorldDepthFirstSearch","isRenderable","CalculateTotalRenderable","numRendered","numRenderable","forceRefresh","ResetWorldRenderData","BaseWorld","_updateListener","_renderListener","render","_shutdownListener","shutdown","sceneRenderData","worldRenderData","MergeRenderData","RemoveChildren","StaticWorld","Install","sceneManager","firstScene","property","defaultValue","prototype","hasOwnProperty","call","GetConfigValue","DrawCanvasTexture","scope","textureManager","CanvasTexture","GetStyle","Direction","parentElement","settings","VERSION","isBooted","isPaused","lastTick","readyState","check","removeEventListener","window","setTimeout","DOMContentLoaded","setting","appendChild","AddToDOM","version","log","GetBanner","step","requestAnimationFrame","WebGLRenderer$1","devicePixelRatio","Size","BackgroundColor","fillStyle","lineWidth","ceil","rx","ry","beginPath","ellipse","PI","CreateCircleTexture","AddChild","concat"],"mappings":"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"}