{
  "version": 3,
  "sources": ["node_modules/papaparse/papaparse.min.js", "node_modules/@firebase/app/node_modules/tslib/tslib.es6.js", "node_modules/@firebase/util/node_modules/tslib/tslib.es6.js", "node_modules/@firebase/util/dist/index.cjs.js", "node_modules/@firebase/component/node_modules/tslib/tslib.es6.js", "node_modules/@firebase/component/dist/index.cjs.js", "node_modules/@firebase/logger/dist/index.esm.js", "node_modules/@firebase/app/dist/index.cjs.js", "node_modules/firebase/app/dist/index.cjs.js", "src/utils/string/lzstring/lz-string.min.js", "node_modules/@phaserjs/phaser/GameInstance.js", "node_modules/@phaserjs/phaser/config/BackgroundColor.js", "node_modules/@phaserjs/phaser/config/Banner.js", "node_modules/@phaserjs/phaser/config/CanvasContext.js", "node_modules/@phaserjs/phaser/config/Size.js", "node_modules/@phaserjs/phaser/renderer/BindingQueue.js", "node_modules/@phaserjs/phaser/renderer/canvas/CanvasRenderer.js", "node_modules/@phaserjs/phaser/config/SetRenderer.js", "node_modules/@phaserjs/phaser/config/CanvasRenderer.js", "node_modules/@phaserjs/phaser/config/DefaultOrigin.js", "node_modules/@phaserjs/phaser/config/MaxTextures.js", "node_modules/@phaserjs/phaser/dom/GetElement.js", "node_modules/@phaserjs/phaser/config/Parent.js", "node_modules/@phaserjs/phaser/config/Scenes.js", "node_modules/@phaserjs/phaser/config/WebGLContext.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/FBOSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/GL.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/GetRGBArray.js", "node_modules/@phaserjs/phaser/math/matrix2d-funcs/ExactEquals.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/CreateFramebuffer.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/CreateGLTexture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/fbo/DeleteFramebuffer.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/DeleteGLTexture.js", "node_modules/@phaserjs/phaser/math/pow2/IsSizePowerOfTwo.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/SetGLTextureFilterMode.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/UpdateGLTexture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/GLTextureBinding.js", "node_modules/@phaserjs/phaser/renderer/webgl1/buffers/IndexedBuffer.js", "node_modules/@phaserjs/phaser/textures/Frame.js", "node_modules/@phaserjs/phaser/textures/Texture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRendererInstance.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/SingleTextureQuadShader.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/MultiTextureQuadShader.js", "node_modules/@phaserjs/phaser/renderer/webgl1/cameras/Ortho.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/ShaderSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/shaders/CheckShaderMaxIfStatements.js", "node_modules/@phaserjs/phaser/renderer/webgl1/textures/TextureSystem.js", "node_modules/@phaserjs/phaser/renderer/webgl1/WebGLRenderer.js", "node_modules/@phaserjs/phaser/config/WebGLRenderer.js", "node_modules/@phaserjs/phaser/config/index.js", "node_modules/@phaserjs/phaser/events/Emit.js", "node_modules/@phaserjs/phaser/dom/AddToDOM.js", "node_modules/@phaserjs/phaser/dom/DOMContentLoaded.js", "node_modules/@phaserjs/phaser/events/EventEmitter.js", "node_modules/@phaserjs/phaser/events/EventInstance.js", "node_modules/@phaserjs/phaser/events/On.js", "node_modules/@phaserjs/phaser/events/Once.js", "node_modules/@phaserjs/phaser/scenes/CreateSceneRenderData.js", "node_modules/@phaserjs/phaser/scenes/ResetSceneRenderData.js", "node_modules/@phaserjs/phaser/scenes/SceneManagerInstance.js", "node_modules/@phaserjs/phaser/scenes/SceneManager.js", "node_modules/@phaserjs/phaser/textures/CreateCanvas.js", "node_modules/@phaserjs/phaser/textures/TextureManagerInstance.js", "node_modules/@phaserjs/phaser/textures/TextureManager.js", "node_modules/@phaserjs/phaser/Game.js", "node_modules/@phaserjs/phaser/scenes/GetConfigValue.js", "node_modules/@phaserjs/phaser/scenes/Install.js", "node_modules/@phaserjs/phaser/scenes/Scene.js", "node_modules/@phaserjs/phaser/math/matrix2d/Matrix2D.js", "node_modules/@phaserjs/phaser/geom/rectangle/Contains.js", "node_modules/@phaserjs/phaser/geom/rectangle/Rectangle.js", "node_modules/@phaserjs/phaser/utils/NOOP.js", "node_modules/@phaserjs/phaser/math/vec2/Vec2Callback.js", "node_modules/@phaserjs/phaser/math/Wrap.js", "node_modules/@phaserjs/phaser/math/angle/WrapAngle.js", "node_modules/@phaserjs/phaser/camera/Camera.js", "node_modules/@phaserjs/phaser/camera/StaticCamera.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearch.js", "node_modules/@phaserjs/phaser/display/GetChildIndex.js", "node_modules/@phaserjs/phaser/display/RemoveChildAt.js", "node_modules/@phaserjs/phaser/display/RemoveChild.js", "node_modules/@phaserjs/phaser/gameobjects/events/AddedToWorldEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/DestroyEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/PostUpdateEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/RemovedFromWorldEvent.js", "node_modules/@phaserjs/phaser/gameobjects/events/UpdateEvent.js", "node_modules/@phaserjs/phaser/display/SetWorld.js", "node_modules/@phaserjs/phaser/display/SetParent.js", "node_modules/@phaserjs/phaser/gameobjects/DIRTY_CONST.js", "node_modules/@phaserjs/phaser/display/RemoveChildrenBetween.js", "node_modules/@phaserjs/phaser/display/DestroyChildren.js", "node_modules/@phaserjs/phaser/display/RemoveChildren.js", "node_modules/@phaserjs/phaser/display/ReparentChildren.js", "node_modules/@phaserjs/phaser/events/Off.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/GetVertices.js", "node_modules/@phaserjs/phaser/gameobjects/components/bounds/BoundsComponent.js", "node_modules/@phaserjs/phaser/gameobjects/components/input/InputComponent.js", "node_modules/@phaserjs/phaser/math/vec2/Vec2.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateLocalTransform.js", "node_modules/@phaserjs/phaser/math/matrix2d/Copy.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/UpdateWorldTransform.js", "node_modules/@phaserjs/phaser/gameobjects/components/transform/TransformComponent.js", "node_modules/@phaserjs/phaser/gameobjects/GameObject.js", "node_modules/@phaserjs/phaser/world/events/WorldRenderEvent.js", "node_modules/@phaserjs/phaser/world/events/WorldShutdownEvent.js", "node_modules/@phaserjs/phaser/index-664c5328.js", "node_modules/@phaserjs/phaser/world/CalculateTotalRenderable.js", "node_modules/@phaserjs/phaser/world/HasDirtyChildren.js", "node_modules/@phaserjs/phaser/world/UpdateCachedLayers.js", "node_modules/@phaserjs/phaser/world/WorldDepthFirstSearch.js", "node_modules/@phaserjs/phaser/world/BuildRenderList.js", "node_modules/@phaserjs/phaser/world/MergeRenderData.js", "node_modules/@phaserjs/phaser/world/ResetWorldRenderData.js", "node_modules/@phaserjs/phaser/world/BaseWorld.js", "node_modules/@phaserjs/phaser/world/CreateWorldRenderData.js", "node_modules/@phaserjs/phaser/world/StaticWorld.js", "node_modules/@phaserjs/phaser/world/World.js", "node_modules/@phaserjs/phaser/world/index.js", "node_modules/@phaserjs/phaser/display/AddChild.js", "node_modules/@phaserjs/phaser/display/AddChildAt.js", "node_modules/@phaserjs/phaser/display/AddChildren.js", "node_modules/@phaserjs/phaser/display/AddChildrenAt.js", "node_modules/@phaserjs/phaser/display/AddPosition.js", "node_modules/@phaserjs/phaser/display/AddRotation.js", "node_modules/@phaserjs/phaser/display/AddScale.js", "node_modules/@phaserjs/phaser/display/AddSkew.js", "node_modules/@phaserjs/phaser/display/BringChildToTop.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursiveNested.js", "node_modules/@phaserjs/phaser/display/ConsoleTreeChildren.js", "node_modules/@phaserjs/phaser/display/CountMatchingChildren.js", "node_modules/@phaserjs/phaser/display/DepthFirstSearchRecursive.js", "node_modules/@phaserjs/phaser/display/FindChildByName.js", "node_modules/@phaserjs/phaser/display/FindChildrenByName.js", "node_modules/@phaserjs/phaser/display/GetAllChildren.js", "node_modules/@phaserjs/phaser/display/GetChildAt.js", "node_modules/@phaserjs/phaser/display/GetChildren.js", "node_modules/@phaserjs/phaser/math/distance/DistanceBetweenPoints.js", "node_modules/@phaserjs/phaser/display/GetClosestChild.js", "node_modules/@phaserjs/phaser/display/GetFirstChild.js", "node_modules/@phaserjs/phaser/display/GetFurthestChild.js", "node_modules/@phaserjs/phaser/display/GetLastChild.js", "node_modules/@phaserjs/phaser/display/GetParents.js", "node_modules/@phaserjs/phaser/display/GetRandomChild.js", "node_modules/@phaserjs/phaser/display/MoveChildDown.js", "node_modules/@phaserjs/phaser/display/MoveChildTo.js", "node_modules/@phaserjs/phaser/display/MoveChildUp.js", "node_modules/@phaserjs/phaser/geom/intersects/RectangleToRectangle.js", "node_modules/@phaserjs/phaser/display/Overlap.js", "node_modules/@phaserjs/phaser/display/RemoveChildrenAt.js", "node_modules/@phaserjs/phaser/display/RotateChildrenLeft.js", "node_modules/@phaserjs/phaser/display/RotateChildrenRight.js", "node_modules/@phaserjs/phaser/display/SendChildToBack.js", "node_modules/@phaserjs/phaser/display/SetBounds.js", "node_modules/@phaserjs/phaser/display/SetChildrenValue.js", "node_modules/@phaserjs/phaser/display/SetName.js", "node_modules/@phaserjs/phaser/display/SetOrigin.js", "node_modules/@phaserjs/phaser/display/SetPosition.js", "node_modules/@phaserjs/phaser/display/SetRotation.js", "node_modules/@phaserjs/phaser/display/SetScale.js", "node_modules/@phaserjs/phaser/display/SetSize.js", "node_modules/@phaserjs/phaser/display/SetSkew.js", "node_modules/@phaserjs/phaser/display/SetType.js", "node_modules/@phaserjs/phaser/display/SetValue.js", "node_modules/@phaserjs/phaser/display/SetVisible.js", "node_modules/@phaserjs/phaser/display/ShuffleChildren.js", "node_modules/@phaserjs/phaser/display/SwapChildren.js", "node_modules/@phaserjs/phaser/display/index.js", "node_modules/@phaserjs/phaser/loader/File.js", "node_modules/@phaserjs/phaser/loader/GetURL.js", "node_modules/@phaserjs/phaser/loader/ImageTagLoader.js", "node_modules/@phaserjs/phaser/loader/files/ImageFile.js", "src/time/awaytime/IAwayTime.ts", "src/time/awaytime/AwayTime.ts", "src/time/awaytime/index.ts", "src/board/utils/StringKey.ts", "src/utils/struct/Stack.ts", "src/utils/pool/EmptyMap.ts", "src/board/board/boarddata/methods/ZMap.ts", "src/utils/pool/EmptySet.ts", "src/board/board/boarddata/methods/ChessSet.ts", "src/board/board/boarddata/methods/AddChess.ts", "src/board/board/boarddata/methods/GetChess.ts", "src/board/board/boarddata/methods/RemoveChess.ts", "src/board/board/boarddata/methods/HasChess.ts", "src/board/board/boarddata/methods/Contains.ts", "src/board/board/boarddata/methods/GetXYZ.ts", "src/board/board/boarddata/methods/GetMaxMinMapKey.ts", "src/board/board/boarddata/BoardData.ts", "src/board/board/chess/GetAllChess.ts", "src/utils/object/IsPlainObject.ts", "src/board/utils/IsTileXYZ.ts", "src/board/board/tilexy/ChessToTileXYZ.ts", "src/board/board/tilexy/TileXYZToChess.ts", "src/board/board/chessdata/ChessData.ts", "src/board/board/chessdata/GetChessData.ts", "src/board/board/chess/RemoveChess.ts", "src/board/board/boarddata/SetBoardHeight.ts", "src/board/board/boarddata/SetBoardWidth.ts", "src/board/board/boarddata/index.ts", "src/board/board/BaseBoard.ts", "src/board/board/tilexy/Contains.ts", "src/board/board/worldxy/TileXYToWorldXY.ts", "src/board/board/worldxy/GridAlign.ts", "src/board/board/chess/AddChess.ts", "src/utils/math/angle/Between.ts", "src/board/board/worldxy/AngleBetween.ts", "src/utils/math/Wrap.ts", "src/board/board/tilexy/GetWrapTileXY.ts", "src/board/board/tilexy/GetTileXYAtDirection.ts", "src/board/board/neighbors/GetNeighborTileXY.ts", "src/board/board/worldxy/AngleToward.ts", "src/utils/math/angle/RadToDeg.ts", "src/utils/math/angle/ShortestBetween.ts", "src/board/board/worldxy/AngleSnapToDirection.ts", "src/board/board/neighbors/GetNeighborTileDirection.ts", "src/board/board/neighbors/GetNeighborChessDirection.ts", "src/board/board/neighbors/AreNeighbors.ts", "src/board/board/tilexy/DirectionBetween.ts", "src/board/board/ring/RingToTileXYArray.ts", "src/board/board/ring/FilledRingToTileXYArray.ts", "src/board/board/transform/Offset.ts", "src/board/board/transform/Fit.ts", "src/board/board/tilexy/ForEachTileXY.ts", "src/board/board/tilexy/GetDistance.ts", "src/board/board/empty/GetEmptyTileXYArray.ts", "src/board/board/worldxy/GetGridPoints.ts", "src/board/board/tilexy/TileXYToChessArray.ts", "src/board/board/tilexy/TileXYArrayToChessArray.ts", "src/board/board/neighbors/GetNeighborChess.ts", "src/board/board/neighbors/GetNeighborTileXYAtAngle.ts", "src/board/board/tilexy/GetOppositeDirection.ts", "src/utils/math/RandomInt.ts", "src/utils/array/GetRandom.ts", "src/board/board/empty/GetRandomEmptyTileXY.ts", "src/board/board/blocker/HasBlocker.ts", "src/board/board/chess/HasChess.ts", "src/board/board/blocker/HasEdgeBlocker.ts", "src/utils/math/angle/Normalize.ts", "src/utils/math/fuzzy/Equal.ts", "src/board/board/worldxy/IsAngleInCone.ts", "src/board/board/tilexy/IsDirectionInCone.ts", "src/board/board/worldxy/WorldXYToTileXY.ts", "src/board/board/worldxy/IsOverlappingPoint.ts", "src/utils/math/distance/DistanceBetween.ts", "src/utils/math/Linear.ts", "src/board/board/shape/LineToTileXYArray.ts", "src/utils/types/VectorType.ts", "src/board/Types.ts", "src/board/grid/IGrid.ts", "src/board/board/transform/Mirror.ts", "src/board/board/chess/RemoveAllChess.ts", "src/board/board/transform/Rotate.ts", "src/board/board/chess/SetTileZ.ts", "src/utils/types/BoundsType.ts", "src/utils/math/Clamp.ts", "src/board/board/shape/ShapeToTileXYArray.ts", "src/board/board/chess/SwapChess.ts", "src/board/board/tilexy/TileZToChessArray.ts", "src/board/board/worldxy/TileXYArrayToWorldXYArray.ts", "src/board/board/worldxy/WorldXYSnapToGrid.ts", "src/board/board/worldxy/WorldXYToChess.ts", "src/board/board/LogicBoard.ts", "src/board/board/Board.ts", "src/board/board/tilexy/index.ts", "src/board/board/worldxy/index.ts", "src/board/board/chess/index.ts", "src/board/board/blocker/index.ts", "src/board/board/empty/index.ts", "src/board/board/neighbors/index.ts", "src/board/board/transform/index.ts", "src/board/board/shape/index.ts", "src/board/board/ring/index.ts", "src/board/board/index.ts", "src/board/grid/quad/IQuadBase.ts", "src/board/grid/quad/QuadBase.ts", "src/board/grid/quad/DirectionBetween.ts", "src/board/grid/utils/DirectionNormalize.ts", "src/board/grid/quad/GetDistance.ts", "src/board/grid/utils/FillPositionArray.ts", "src/board/grid/quad/GetWorldXY.ts", "src/board/grid/quad/GetGridPoints.ts", "src/board/grid/quad/DirectionToDeltaXY.ts", "src/board/grid/quad/DeltaTileXYToDirection.ts", "src/board/grid/quad/GetNeighborTileDirection.ts", "src/board/grid/quad/GetTileXYAtDirection.ts", "src/board/grid/quad/GetNeighborTileXY.ts", "src/board/grid/quad/GetOppositeDirection.ts", "src/board/grid/quad/GetTileXY.ts", "src/board/grid/quad/Mirror.ts", "src/board/grid/quad/Offset.ts", "src/board/grid/quad/RingToTileXYArray.ts", "src/board/grid/quad/Rotate.ts", "src/board/grid/utils/SaveOrigin.ts", "src/board/grid/quad/Quad.ts", "src/board/grid/hexagon/IHexagonBase.ts", "src/board/grid/hexagon/HexagonBase.ts", "src/board/grid/hexagon/CubeTransfer.ts", "src/board/grid/hexagon/DirectionBetween.ts", "src/board/grid/hexagon/GetDistance.ts", "src/board/grid/hexagon/GetWorldXY.ts", "src/utils/math/angle/DegToRad.ts", "src/board/grid/hexagon/GetGridPoints.ts", "src/board/grid/hexagon/DirectionToDeltaTileXY.ts", "src/board/grid/hexagon/DeltaTileXYToDirection.ts", "src/board/grid/hexagon/GetParity.ts", "src/board/grid/hexagon/GetNeighborTileDirection.ts", "src/board/grid/hexagon/GetTileXYAtDirection.ts", "src/board/grid/hexagon/GetNeighborTileXY.ts", "src/board/grid/hexagon/GetOppositeDirection.ts", "src/board/grid/hexagon/GetTileXY.ts", "src/board/grid/hexagon/Mirror.ts", "src/board/grid/hexagon/Offset.ts", "src/board/grid/hexagon/RingToTileXYArray.ts", "src/board/grid/hexagon/Rotate.ts", "src/board/grid/hexagon/Hexagon.ts", "src/board/grid/index.ts", "src/utils/astar/types/PathMode.ts", "src/utils/astar/types/CreateNodeCallbackType.ts", "src/utils/astar/types/CostValueType.ts", "src/utils/astar/Const.ts", "src/utils/astar/IAStar.ts", "src/board/pathfinder/IPathFinder.ts", "src/utils/astar/NodeManager.ts", "src/utils/struct/BinaryHeap.ts", "src/utils/astar/Search.ts", "src/utils/astar/getnodepath/GetAStarNodePath.ts", "src/utils/astar/getnodepath/GetRandomNodePath.ts", "src/utils/astar/getnodepath/GetLineNodePath.ts", "src/utils/astar/getnodepath/GetDiagonalPath.ts", "src/utils/astar/getnodepath/GetStraightNodePath.ts", "src/utils/astar/getnodepath/GetNodePath.ts", "src/utils/astar/AStar.ts", "src/utils/astar/NodeBase.ts", "src/utils/array/Shuffle.ts", "src/board/pathfinder/astar/AStarNode.ts", "src/board/pathfinder/astar/CreateAStar.ts", "src/board/pathfinder/GetCost.ts", "src/board/utils/CopyTileXY.ts", "src/board/utils/CopyTileXYZ.ts", "src/board/utils/IsChess.ts", "src/board/utils/index.ts", "src/board/pathfinder/FindArea.ts", "src/board/pathfinder/GetPath.ts", "src/board/pathfinder/FindPath.ts", "src/board/pathfinder/TileXYToCost.ts", "src/board/pathfinder/PathFinder.ts", "src/board/pathfinder/index.ts", "src/board/match/MatchAtDir.ts", "src/board/match/MatchBoard.ts", "src/board/match/Group.ts", "src/board/match/Match.ts", "src/board/match/index.ts", "src/board/fieldofview/IFieldOfView.ts", "src/board/fieldofview/IsInCone.ts", "src/board/fieldofview/GetCost.ts", "src/board/fieldofview/IsPathVisible.ts", "src/board/fieldofview/IsInLOS.ts", "src/board/fieldofview/LOS.ts", "src/board/fieldofview/FindFOV.ts", "src/board/fieldofview/FieldOfView.ts", "src/board/fieldofview/index.ts", "src/board/hexagonmap/GetHexagonMap.ts", "src/board/hexagonmap/GetTriangleMap.ts", "src/board/hexagonmap/GetParallelogramMap.ts", "src/board/hexagonmap/index.ts", "src/board/index.ts", "node_modules/@phaserjs/phaser/textures/types/CanvasTexture.js", "node_modules/@phaserjs/phaser/renderer/webgl1/draw/BatchTexturedQuad.js", "node_modules/@phaserjs/phaser/gameobjects/container/Container.js", "node_modules/@phaserjs/phaser/renderer/canvas/draw/DrawTexturedQuad.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColor.js", "node_modules/@phaserjs/phaser/renderer/webgl1/colors/PackColors.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetFrame.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/SetTexture.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/UpdateVertices.js", "node_modules/@phaserjs/phaser/gameobjects/sprite/Sprite.js", "src/gameobjects/canvas/CanvasMethods.ts", "src/gameobjects/canvas/BaseCanvas.ts", "src/texture/canvastexture/DrawCanvasTexture.ts", "src/utils/canvas/DrawCircle.ts", "src/utils/canvas/GetStyle.ts", "src/texture/canvastexture/CreateCircleTexture.ts", "src/utils/canvas/DrawRectangle.ts", "src/texture/canvastexture/CreateRectangleTexture.ts", "src/utils/geom/roundrectangle/RoundRectangle.ts", "src/utils/canvas/DrawRoundRectangle.ts", "src/texture/canvastexture/CreateRoundRectangleTexture.ts", "src/utils/canvas/DrawPolygon.ts", "src/texture/canvastexture/CreatePolygonTexture.ts", "src/texture/canvastexture/CreateTriangleTexture.ts", "src/texture/canvastexture/index.ts", "src/utils/texture/DrawFrameToCanvas.ts", "src/gameobjects/canvas/TextureMethods.ts", "src/gameobjects/canvas/Canvas.ts", "src/gameobjects/canvas/index.ts", "src/utils/string/papaparse/index.ts", "src/data/csvtoarray/CSVToArray.ts", "src/data/csvtoarray/index.ts", "src/firebase/database/broadcast/IBroadcast.ts", "src/utils/eventemitter/events/ClearEvent.ts", "src/utils/eventemitter/events/Emit.ts", "src/utils/eventemitter/events/EventEmitter.ts", "src/utils/eventemitter/events/EventInstance.ts", "src/utils/eventemitter/events/GetEventNames.ts", "src/utils/eventemitter/events/GetListenerCount.ts", "src/utils/eventemitter/events/GetListeners.ts", "src/utils/eventemitter/events/Off.ts", "src/utils/eventemitter/events/On.ts", "src/utils/eventemitter/events/Once.ts", "src/utils/eventemitter/events/RemoveAllListeners.ts", "src/utils/eventemitter/events/index.ts", "src/utils/eventemitter/BaseEventEmitter.ts", "src/firebase/database/broadcast/Send.ts", "src/firebase/database/broadcast/ReceiveMethods.ts", "src/firebase/database/broadcast/History.ts", "src/firebase/database/broadcast/Broadcast.ts", "src/firebase/database/broadcast/index.ts", "src/firebase/firestore/idalias/GetAlias.ts", "src/firebase/firestore/idalias/GetAliasRef.ts", "src/firebase/firestore/idalias/AddAliasTransaction.ts", "src/firebase/firestore/idalias/Add.ts", "src/utils/string/GetRandomWord.ts", "src/firebase/firestore/idalias/RetryAddRandomAliasTransaction.ts", "src/firebase/firestore/idalias/AddRandom.ts", "src/firebase/firestore/idalias/GetId.ts", "src/firebase/firestore/idalias/GetRandomAlias.ts", "src/firebase/firestore/idalias/Remove.ts", "src/firebase/firestore/idalias/IdAlias.ts", "src/firebase/firestore/idalias/index.ts", "src/firebase/database/itemtable/Types.ts", "src/utils/object/SetValue.ts", "src/utils/object/Clear.ts", "src/utils/object/DeepClone.ts", "src/utils/struct/tree/ITree.ts", "src/utils/struct/tree/JSONTree.ts", "src/firebase/database/itemtable/read/updater/BaseUpdater.ts", "src/firebase/database/itemtable/read/updater/ColumnUpdater.ts", "src/firebase/database/itemtable/read/updater/RowUpdater.ts", "src/firebase/database/itemtable/read/updater/PageUpdater.ts", "src/firebase/database/itemtable/read/updater/index.ts", "src/firebase/database/itemtable/read/CreateUpdater.ts", "src/firebase/database/itemtable/read/Load.ts", "src/firebase/database/itemtable/GetItemRef.ts", "src/firebase/database/itemtable/write/SetData.ts", "src/firebase/database/itemtable/write/RemoveData.ts", "src/firebase/database/itemtable/write/IncValue.ts", "src/firebase/database/itemtable/write/Transaction.ts", "src/firebase/database/itemtable/write/UpdateData.ts", "src/firebase/database/itemtable/write/RemoveDataOnDisconnect.ts", "src/firebase/database/itemtable/write/SetDataOnDisconnect.ts", "src/firebase/database/itemtable/ItemTable.ts", "src/firebase/database/itemtable/index.ts", "src/firebase/firestore/files/GetFileQuery.ts", "src/firebase/firestore/files/DocToHeader.ts", "src/firebase/firestore/files/LoadHeader.ts", "src/firebase/firestore/files/Save.ts", "src/firebase/firestore/files/Load.ts", "src/firebase/firestore/files/LoadHeaders.ts", "src/firebase/firestore/files/Delete.ts", "src/firebase/firestore/files/Clear.ts", "src/firebase/firestore/files/Files.ts", "src/firebase/firestore/files/index.ts", "src/firebase/firestore/leaderboard/ILeaderBoard.ts", "src/firebase/firestore/leaderboard/GetTime.ts", "src/firebase/firestore/leaderboard/GetQueryMethods.ts", "src/firebase/firestore/leaderboard/Post.ts", "src/firebase/firestore/leaderboard/LoadMethods.ts", "src/firebase/firestore/leaderboard/GetScore.ts", "src/firebase/firestore/utils/query/Query.ts", "src/firebase/firestore/utils/query/FindFirst.ts", "src/firebase/firestore/leaderboard/GetRank.ts", "src/firebase/firestore/utils/query/Load.ts", "src/firebase/firestore/utils/query/Delete.ts", "src/firebase/firestore/leaderboard/DeleteMethods.ts", "src/firebase/firestore/pageloader/LoadInRange.ts", "src/firebase/firestore/pageloader/BasePageLoader.ts", "src/firebase/firestore/pageloader/LoadFirstPage.ts", "src/firebase/firestore/pageloader/LoadNextPage.ts", "src/firebase/firestore/pageloader/LoadPreviousPage.ts", "src/firebase/firestore/pageloader/LoadCurrentPage.ts", "src/firebase/firestore/pageloader/DynamicPageLoader.ts", "src/firebase/firestore/leaderboard/LeaderBoard.ts", "src/firebase/firestore/leaderboard/index.ts", "src/firebase/firestore/pageloader/StaticPageLoader.ts", "src/firebase/firestore/pageloader/index.ts", "src/firebase/firestore/messages/Send.ts", "src/firebase/firestore/messages/GetQueryMethods.ts", "src/firebase/firestore/messages/ReceiveMethods.ts", "src/firebase/firestore/messages/Messages.ts", "src/firebase/firestore/messages/index.ts", "src/firebase/database/onlineuserlist/IOnlineUserList.ts", "src/firebase/database/utils/itemlist/IItemList.ts", "src/firebase/database/utils/itemlist/ItemMethods.ts", "src/utils/array/SpliceOne.ts", "src/firebase/database/utils/itemlist/updaters/Callbacks.ts", "src/firebase/database/utils/itemlist/updaters/UpdateOnce.ts", "src/firebase/database/utils/itemlist/updaters/UpdateChild.ts", "src/firebase/database/utils/itemlist/updaters/UpdateAll.ts", "src/firebase/database/utils/itemlist/updaters/index.ts", "src/firebase/database/utils/itemlist/ItemList.ts", "src/firebase/database/utils/itemlist/index.ts", "src/firebase/database/onlineuserlist/UserMethods.ts", "src/utils/promise/Delay.ts", "src/firebase/database/onlineuserlist/Join.ts", "src/firebase/database/onlineuserlist/Leave.ts", "src/firebase/database/onlineuserlist/ChangeUserName.ts", "src/firebase/database/onlineuserlist/OnlineUserList.ts", "src/firebase/database/onlineuserlist/index.ts", "src/firebase/database/room/CreateUserList.ts", "src/firebase/database/room/CreateRoomList.ts", "src/firebase/database/room/RoomFilterMethods.ts", "src/firebase/database/room/GetRefMethods.ts", "src/firebase/database/room/CreateBroadcast.ts", "src/firebase/database/room/CreateTables.ts", "src/firebase/database/room/GetRoomInfo.ts", "src/firebase/database/room/RoomMethods.ts", "src/firebase/database/room/OnJoinRoom.ts", "src/firebase/database/room/CreateRoom.ts", "src/firebase/database/room/CreateRandomRoom.ts", "src/firebase/database/room/RemoveRoom.ts", "src/firebase/database/room/LeaveRoom.ts", "src/firebase/database/room/JoinRoom.ts", "src/firebase/database/room/GetRoomList.ts", "src/firebase/database/room/JoinRandomRoom.ts", "src/firebase/database/room/KickUser.ts", "src/firebase/database/room/HasRoom.ts", "src/firebase/database/room/ChangeRoomState.ts", "src/firebase/database/room/ChangeFilterData.ts", "src/firebase/database/room/ChangeUserName.ts", "src/firebase/database/room/ChangeRoomName.ts", "src/firebase/database/room/GetUserList.ts", "src/firebase/database/room/Room.ts", "src/firebase/database/room/index.ts", "src/firebase/database/singleroom/GetRefMethods.ts", "src/firebase/database/singleroom/CreateUserList.ts", "src/firebase/database/singleroom/CreateBroadcast.ts", "src/firebase/database/singleroom/CreateTables.ts", "src/firebase/database/singleroom/RoomMethods.ts", "src/firebase/database/singleroom/JoinRoom.ts", "src/firebase/database/singleroom/LeaveRoom.ts", "src/firebase/database/singleroom/GetUserList.ts", "src/firebase/database/singleroom/KickUser.ts", "src/firebase/database/singleroom/ChangeUserName.ts", "src/firebase/database/singleroom/SingleRoom.ts", "src/firebase/database/singleroom/index.ts", "src/firebase/index.ts", "src/logic/fsm/FSM.ts", "src/logic/fsm/CreateFSM.ts", "src/logic/fsm/index.ts", "src/math/gashapon/IGashapon.ts", "src/utils/map/ObjToMap.ts", "src/utils/map/MapToObj.ts", "src/math/gashapon/Gashapon.ts", "src/math/gashapon/index.ts", "src/utils/string/lzstring/index.ts", "src/string/lzstring/ILZString.ts", "src/string/lzstring/LZString.ts", "src/string/lzstring/index.ts", "src/utils/string/TypeConvert.ts", "src/utils/object/GetValue.ts", "src/logic/runcommands/RunCommand.ts", "src/logic/runcommands/RunCommands.ts", "src/logic/runcommands/index.ts", "src/utils/geom/roundrectangle/IRoundRectangle.ts", "src/utils/string/WrapText.ts", "src/gameobjects/text/basetext/Types.ts", "src/gameobjects/text/basetext/penmanger/Line.ts", "src/utils/object/Clone.ts", "src/gameobjects/text/basetext/penmanger/Pen.ts", "src/gameobjects/text/basetext/penmanger/PenManager.ts", "src/utils/object/MergeRight.ts", "src/gameobjects/text/basetext/imagemanager/AddImageConfig.ts", "src/gameobjects/text/basetext/imagemanager/ImageManager.ts", "src/gameobjects/text/basetext/canvastext/SyncContextMethods.ts", "src/gameobjects/text/basetext/penmanger/TextMetrics.ts", "src/gameobjects/text/basetext/penmanger/UpdatePenManager.ts", "node_modules/@phaserjs/phaser/math/const.js", "node_modules/@phaserjs/phaser/geom/rectangle/Area.js", "node_modules/@phaserjs/phaser/geom/rectangle/Ceil.js", "node_modules/@phaserjs/phaser/geom/rectangle/CeilAll.js", "node_modules/@phaserjs/phaser/geom/rectangle/CenterOn.js", "node_modules/@phaserjs/phaser/geom/rectangle/CenterX.js", "node_modules/@phaserjs/phaser/geom/rectangle/CenterY.js", "node_modules/@phaserjs/phaser/geom/rectangle/Clone.js", "node_modules/@phaserjs/phaser/geom/rectangle/ContainsPoint.js", "node_modules/@phaserjs/phaser/geom/rectangle/ContainsRect.js", "node_modules/@phaserjs/phaser/geom/rectangle/CopyFrom.js", "node_modules/@phaserjs/phaser/geom/rectangle/Decompose.js", "node_modules/@phaserjs/phaser/geom/rectangle/Equals.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetAspectRatio.js", "node_modules/@phaserjs/phaser/geom/rectangle/FitInside.js", "node_modules/@phaserjs/phaser/geom/rectangle/FitOutside.js", "node_modules/@phaserjs/phaser/geom/rectangle/Floor.js", "node_modules/@phaserjs/phaser/geom/rectangle/FloorAll.js", "node_modules/@phaserjs/phaser/geom/rectangle/FromPoints.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetCenter.js", "node_modules/@phaserjs/phaser/geom/line/Line.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetEdges.js", "node_modules/@phaserjs/phaser/geom/rectangle/Perimeter.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetPoint.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetPoints.js", "node_modules/@phaserjs/phaser/geom/rectangle/GetSize.js", "node_modules/@phaserjs/phaser/geom/rectangle/Inflate.js", "node_modules/@phaserjs/phaser/geom/rectangle/Intersection.js", "node_modules/@phaserjs/phaser/geom/rectangle/MarchingAnts.js", "node_modules/@phaserjs/phaser/geom/rectangle/MergePoints.js", "node_modules/@phaserjs/phaser/geom/rectangle/MergeRect.js", "node_modules/@phaserjs/phaser/geom/rectangle/MergeXY.js", "node_modules/@phaserjs/phaser/geom/rectangle/Offset.js", "node_modules/@phaserjs/phaser/geom/rectangle/OffsetPoint.js", "node_modules/@phaserjs/phaser/geom/rectangle/Overlaps.js", "node_modules/@phaserjs/phaser/math/DegToRad.js", "node_modules/@phaserjs/phaser/geom/rectangle/PerimeterPoint.js", "node_modules/@phaserjs/phaser/geom/rectangle/Random.js", "node_modules/@phaserjs/phaser/math/Between.js", "node_modules/@phaserjs/phaser/geom/rectangle/RandomOutside.js", "node_modules/@phaserjs/phaser/geom/rectangle/SameDimensions.js", "node_modules/@phaserjs/phaser/geom/rectangle/Scale.js", "node_modules/@phaserjs/phaser/geom/rectangle/Union.js", "node_modules/@phaserjs/phaser/geom/rectangle/index.js", "src/gameobjects/text/basetext/hitareamanager/HitAreaManager.ts", "src/gameobjects/text/basetext/canvastext/Draw.ts", "src/gameobjects/text/basetext/canvastext/CanvasText.ts", "src/gameobjects/text/basetext/UpdateText.ts", "src/gameobjects/text/basetext/SetBackgroundStyle.ts", "src/gameobjects/text/basetext/SetPadding.ts", "src/gameobjects/text/basetext/SetFontMethods.ts", "src/gameobjects/text/basetext/SetFixedSize.ts", "src/gameobjects/text/basetext/SetWrapMode.ts", "src/gameobjects/text/basetext/SetUnderline.ts", "src/gameobjects/text/basetext/AddImageInfo.ts", "src/gameobjects/text/basetext/GetTextMethods.ts", "src/gameobjects/text/basetext/PenManagerMethods.ts", "src/gameobjects/text/basetext/BaseText.ts", "src/gameobjects/text/basetext/parser/BaseParser.ts", "src/gameobjects/text/bbocdetext/Parser.ts", "src/gameobjects/text/bbocdetext/BBCodeText.ts", "src/gameobjects/text/index.ts", "src/data/twodtable/MapKey.ts", "src/data/twodtable/DataToJSON.ts", "src/data/twodtable/TypeConvert.ts", "src/data/twodtable/Remove.ts", "src/utils/array/Copy.ts", "src/data/twodtable/LoadCSV.ts", "src/data/twodtable/Get.ts", "src/data/twodtable/Convert.ts", "src/data/twodtable/ForEach.ts", "src/data/twodtable/Set.ts", "src/data/twodtable/Append.ts", "src/data/twodtable/ITable.ts", "src/data/twodtable/Sort.ts", "src/data/twodtable/NextKey.ts", "src/data/twodtable/Search.ts", "src/data/twodtable/Cursor.ts", "src/data/twodtable/Table.ts", "src/data/twodtable/index.ts", "src/string/xor/Encrypt.js", "src/string/xor/Decrypt.js", "src/string/xor/XOR.ts", "src/string/xor/index.ts", "src/index.ts", "examples/bbcodetext/bbcodetext.ts"],
  "sourcesContent": ["/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&U(e.read)&&U(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",v=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s)}();var o=new RegExp(q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||h(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var i in e)t.push(i);return t}function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=y(e[a],a);0<t.length&&(r+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=y(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=v)}}return r}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=e.toString().replace(o,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=w,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else U(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=E(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&U(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(U(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!U(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(U(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function v(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){U(m.transformHeader)&&(e=m.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function y(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(q(t)+\"([^]*?)\"+q(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)U(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new w({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&v(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=E(m);return m.preview&&m.header&&s.preview++,a=e,o=new w(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=U(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,U(m.complete)&&m.complete(c),a=\"\"}}function q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function w(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,t,i){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var r=a.length,e=D.length,n=I.length,s=T.length,o=U(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(i)return R();if(!T||f.substring(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),g=a.indexOf(I,M),_=new RegExp(q(z)+q(O),\"g\"),m=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substring(M,M+s)===T){if(-1===g)return R();M=g+n,g=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<g||-1===g)){if(!(p<m)){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,m,g);if(v&&void 0!==v.nextDelim){p=v.nextDelim,m=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===g)break;if(f.push(a.substring(M,g)),C(g+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(m=M,M++;;){if(-1===(m=a.indexOf(O,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),E();if(m===r-1)return E(a.substring(M,m).replace(_,O));if(O!==z||a[m+1]!==z){if(O===z||0===m||a[m-1]!==z){-1!==p&&p<m+1&&(p=a.indexOf(D,m+1)),-1!==g&&g<m+1&&(g=a.indexOf(I,m+1));var y=w(-1===g?p:Math.min(p,g));if(a[m+1+y]===D){f.push(a.substring(M,m).replace(_,O)),a[M=m+1+y+e]!==O&&(m=a.indexOf(O,M)),p=a.indexOf(D,M),g=a.indexOf(I,M);break}var k=w(g);if(a.substring(m+1+k,m+1+k+n)===I){if(f.push(a.substring(M,m).replace(_,O)),C(m+1+k+n),p=a.indexOf(D,M),m=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),m++}}else m++}return E();function b(e){h.push(e),d=M}function w(e){var t=0;if(-1!==e){var i=a.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=a.substring(M)),f.push(e),M=r,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],g=a.indexOf(I,M)}function R(e){return{data:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(t||0)}}}function S(){A(R()),h=[],u=[]}function x(e,t,i){var r={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<i||-1===i)){var s=a.indexOf(D,n);if(-1===s)return r;n<s&&(n=a.indexOf(O,n+1)),r=x(s,n,i)}else r={nextDelim:e,quoteSearch:t};return r}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function E(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=E(e[i]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    tslib.__extends(FirebaseError, _super);\r\n    function FirebaseError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage);\r\n        // Keys with an underscore at the end of their name are not included in\r\n        // error.data for some reason.\r\n        // TODO: Replace with Object.entries when lib is updated to es2017.\r\n        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {\r\n            var key = _b[_a];\r\n            if (key.slice(-1) !== '_') {\r\n                if (key in error) {\r\n                    console.warn(\"Overwriting FirebaseError base field \\\"\" + key + \"\\\" can cause unexpected behavior.\");\r\n                }\r\n                error[key] = customData[key];\r\n            }\r\n        }\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? String(value) : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims;\r\n    var now = Math.floor(new Date().getTime() / 1000);\r\n    var validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argumentNumber The index of the argument\r\n * @param optional Whether or not the argument is optional\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\nexports.CONSTANTS = CONSTANTS;\nexports.Deferred = Deferred;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.Sha1 = Sha1;\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.async = async;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.contains = contains;\nexports.createSubscribe = createSubscribe;\nexports.decode = decode;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.errorPrefix = errorPrefix;\nexports.getUA = getUA;\nexports.isAdmin = isAdmin;\nexports.isBrowser = isBrowser;\nexports.isBrowserExtension = isBrowserExtension;\nexports.isElectron = isElectron;\nexports.isEmpty = isEmpty;\nexports.isIE = isIE;\nexports.isMobileCordova = isMobileCordova;\nexports.isNode = isNode;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.isSafari = isSafari;\nexports.isUWP = isUWP;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.issuedAtTime = issuedAtTime;\nexports.jsonEval = jsonEval;\nexports.map = map;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.safeGet = safeGet;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\nexports.stringify = stringify;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\n//# sourceMappingURL=index.cjs.js.map\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new util.Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            // If the service instance is available, resolve the promise with it immediately\r\n            try {\r\n                var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                if (instance) {\r\n                    deferred.resolve(instance);\r\n                }\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception during get(), it should not cause\r\n                // a fatal error. We just return the unresolved promise in this case.\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        try {\r\n            var instance = this.getOrInitializeService(normalizedIdentifier);\r\n            if (!instance) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n            return instance;\r\n        }\r\n        catch (e) {\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService(DEFAULT_ENTRY_NAME);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; })\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (identifier) {\r\n        var instance = this.instances.get(identifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));\r\n            this.instances.set(identifier, instance);\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexports.Component = Component;\nexports.ComponentContainer = ComponentContainer;\nexports.Provider = Provider;\n//# sourceMappingURL=index.cjs.js.map\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm.js.map\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar component = require('@firebase/component');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-app\" /* NO_APP */] = \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    _a[\"bad-app-name\" /* BAD_APP_NAME */] = \"Illegal App name: '{$appName}\",\r\n    _a[\"duplicate-app\" /* DUPLICATE_APP */] = \"Firebase App named '{$appName}' already exists\",\r\n    _a[\"app-deleted\" /* APP_DELETED */] = \"Firebase App named '{$appName}' already deleted\",\r\n    _a[\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    _a[\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\nvar name$1 = \"@firebase/app\";\nvar version = \"0.6.8\";\n\nvar name$2 = \"@firebase/analytics\";\n\nvar name$3 = \"@firebase/auth\";\n\nvar name$4 = \"@firebase/database\";\n\nvar name$5 = \"@firebase/functions\";\n\nvar name$6 = \"@firebase/installations\";\n\nvar name$7 = \"@firebase/messaging\";\n\nvar name$8 = \"@firebase/performance\";\n\nvar name$9 = \"@firebase/remote-config\";\n\nvar name$a = \"@firebase/storage\";\n\nvar name$b = \"@firebase/firestore\";\n\nvar name$c = \"firebase-wrapper\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a$1;\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nvar PLATFORM_LOG_STRING = (_a$1 = {},\r\n    _a$1[name$1] = 'fire-core',\r\n    _a$1[name$2] = 'fire-analytics',\r\n    _a$1[name$3] = 'fire-auth',\r\n    _a$1[name$4] = 'fire-rtdb',\r\n    _a$1[name$5] = 'fire-fn',\r\n    _a$1[name$6] = 'fire-iid',\r\n    _a$1[name$7] = 'fire-fcm',\r\n    _a$1[name$8] = 'fire-perf',\r\n    _a$1[name$9] = 'fire-rc',\r\n    _a$1[name$a] = 'fire-gcs',\r\n    _a$1[name$b] = 'fire-fst',\r\n    _a$1['fire-js'] = 'fire-js',\r\n    _a$1[name$c] = 'fire-js-all',\r\n    _a$1);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        var e_1, _a;\r\n        var _this = this;\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.name_ = config.name;\r\n        this.automaticDataCollectionEnabled_ =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.container = new component.ComponentContainer(config.name);\r\n        // add itself to container\r\n        this._addComponent(new component.Component('app', function () { return _this; }, \"PUBLIC\" /* PUBLIC */));\r\n        try {\r\n            // populate ComponentContainer with existing components\r\n            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component$1 = _c.value;\r\n                this._addComponent(component$1);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.automaticDataCollectionEnabled_;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this.automaticDataCollectionEnabled_ = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return this.container.getProvider(name).getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    };\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get this service again.\r\n     *\r\n     * NOTE: currently only firestore is using this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.container.getProvider(name).clearInstance(instanceIdentifier);\r\n    };\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     */\r\n    FirebaseAppImpl.prototype._addComponent = function (component) {\r\n        try {\r\n            this.container.addComponent(component);\r\n        }\r\n        catch (e) {\r\n            logger.debug(\"Component \" + component.name + \" failed to register with FirebaseApp \" + this.name, e);\r\n        }\r\n    };\r\n    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {\r\n        this.container.addOrOverwriteComponent(component);\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\n\nvar version$1 = \"7.16.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    var apps = {};\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var components = new Map();\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        // @ts-ignore\r\n        app: app,\r\n        registerVersion: registerVersion,\r\n        setLogLevel: logger$1.setLogLevel,\r\n        onLog: onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: version$1,\r\n        INTERNAL: {\r\n            registerComponent: registerComponent,\r\n            removeApp: removeApp,\r\n            components: components,\r\n            useAsService: useAsService\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n                appName: String(name)\r\n            });\r\n        }\r\n        if (util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n        var app = new firebaseAppImpl(options, config, namespace);\r\n        apps[name] = app;\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(function (name) { return apps[name]; });\r\n    }\r\n    function registerComponent(component) {\r\n        var e_1, _a;\r\n        var componentName = component.name;\r\n        if (components.has(componentName)) {\r\n            logger.debug(\"There were multiple attempts to register component \" + componentName + \".\");\r\n            return component.type === \"PUBLIC\" /* PUBLIC */\r\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    namespace[componentName]\r\n                : null;\r\n        }\r\n        components.set(componentName, component);\r\n        // create service namespace for public components\r\n        if (component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // The Service namespace is an accessor function ...\r\n            var serviceNamespace = function (appArg) {\r\n                if (appArg === void 0) { appArg = app(); }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentName] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentName]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                util.deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentName] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentName] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        try {\r\n            // add the component to existing app instances\r\n            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var appName = _c.value;\r\n                apps[appName]._addComponent(component);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentName]\r\n            : null;\r\n    }\r\n    function registerVersion(libraryKeyOrName, version, variant) {\r\n        var _a;\r\n        // TODO: We can use this check to whitelist strings when/if we set up\r\n        // a good whitelist system.\r\n        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n        if (variant) {\r\n            library += \"-\" + variant;\r\n        }\r\n        var libraryMismatch = library.match(/\\s|\\//);\r\n        var versionMismatch = version.match(/\\s|\\//);\r\n        if (libraryMismatch || versionMismatch) {\r\n            var warning = [\r\n                \"Unable to register library \\\"\" + library + \"\\\" with version \\\"\" + version + \"\\\":\"\r\n            ];\r\n            if (libraryMismatch) {\r\n                warning.push(\"library name \\\"\" + library + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            if (libraryMismatch && versionMismatch) {\r\n                warning.push('and');\r\n            }\r\n            if (versionMismatch) {\r\n                warning.push(\"version name \\\"\" + version + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            logger.warn(warning.join(' '));\r\n            return;\r\n        }\r\n        registerComponent(new component.Component(library + \"-version\", function () { return ({ library: library, version: version }); }, \"VERSION\" /* VERSION */));\r\n    }\r\n    function onLog(logCallback, options) {\r\n        if (logCallback !== null && typeof logCallback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */, {\r\n                appName: name\r\n            });\r\n        }\r\n        logger$1.setUserLogHandler(logCallback, options);\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,\r\n        extendNamespace: extendNamespace,\r\n        createSubscribe: util.createSubscribe,\r\n        ErrorFactory: util.ErrorFactory,\r\n        deepExtend: util.deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nvar firebase = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PlatformLoggerService = /** @class */ (function () {\r\n    function PlatformLoggerService(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    PlatformLoggerService.prototype.getPlatformInfoString = function () {\r\n        var providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(function (provider) {\r\n            if (isVersionServiceProvider(provider)) {\r\n                var service = provider.getImmediate();\r\n                return service.library + \"/\" + service.version;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(function (logString) { return logString; })\r\n            .join(' ');\r\n    };\r\n    return PlatformLoggerService;\r\n}());\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    var component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(firebase, variant) {\r\n    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    firebase.registerVersion(name$1, version, variant);\r\n    // Register platform SDK identifier (no version).\r\n    firebase.registerVersion('fire-js', '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection test\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (util.isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");\r\n    // eslint-disable-next-line\r\n    var sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");\r\n    }\r\n}\r\nvar initializeApp = firebase.initializeApp;\r\n// TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n// the no-explicit-any rule when ESlint releases it.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfirebase.initializeApp = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // Environment check before initializing app\r\n    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel\r\n    // in @firebase/logger\r\n    if (util.isNode()) {\r\n        logger.warn(\"\\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\\n      run in a Node environment.  If running in a Node environment, make sure you\\n      are using the bundle specified by the \\\"main\\\" field in package.json.\\n      \\n      If you are using Webpack, you can specify \\\"main\\\" as the first item in\\n      \\\"resolve.mainFields\\\":\\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\\n      \\n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \\\"main\\\"\\n      as the first item in \\\"mainFields\\\", e.g. ['main', 'module'].\\n      https://github.com/rollup/rollup-plugin-node-resolve\\n      \");\r\n    }\r\n    return initializeApp.apply(undefined, args);\r\n};\r\nvar firebase$1 = firebase;\r\nregisterCoreComponents(firebase$1);\n\nexports.default = firebase$1;\nexports.firebase = firebase$1;\n//# sourceMappingURL=index.cjs.js.map\n", "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar name = \"firebase\";\nvar version = \"7.16.0\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n", "var LZString=function(){function o(o,r){if(!t[o]){t[o]={};for(var n=0;n<o.length;n++)t[o][o.charAt(n)]=n}return t[o][r]}var r=String.fromCharCode,n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\",t={},i={compressToBase64:function(o){if(null==o)return\"\";var r=i._compress(o,6,function(o){return n.charAt(o)});switch(r.length%4){default:case 0:return r;case 1:return r+\"===\";case 2:return r+\"==\";case 3:return r+\"=\"}},decompressFromBase64:function(r){return null==r?\"\":\"\"==r?null:i._decompress(r.length,32,function(e){return o(n,r.charAt(e))})},compressToUTF16:function(o){return null==o?\"\":i._compress(o,15,function(o){return r(o+32)})+\" \"},decompressFromUTF16:function(o){return null==o?\"\":\"\"==o?null:i._decompress(o.length,16384,function(r){return o.charCodeAt(r)-32})},compressToUint8Array:function(o){for(var r=i.compress(o),n=new Uint8Array(2*r.length),e=0,t=r.length;t>e;e++){var s=r.charCodeAt(e);n[2*e]=s>>>8,n[2*e+1]=s%256}return n},decompressFromUint8Array:function(o){if(null===o||void 0===o)return i.decompress(o);for(var n=new Array(o.length/2),e=0,t=n.length;t>e;e++)n[e]=256*o[2*e]+o[2*e+1];var s=[];return n.forEach(function(o){s.push(r(o))}),i.decompress(s.join(\"\"))},compressToEncodedURIComponent:function(o){return null==o?\"\":i._compress(o,6,function(o){return e.charAt(o)})},decompressFromEncodedURIComponent:function(r){return null==r?\"\":\"\"==r?null:(r=r.replace(/ /g,\"+\"),i._decompress(r.length,32,function(n){return o(e,r.charAt(n))}))},compress:function(o){return i._compress(o,16,function(o){return r(o)})},_compress:function(o,r,n){if(null==o)return\"\";var e,t,i,s={},p={},u=\"\",c=\"\",a=\"\",l=2,f=3,h=2,d=[],m=0,v=0;for(i=0;i<o.length;i+=1)if(u=o.charAt(i),Object.prototype.hasOwnProperty.call(s,u)||(s[u]=f++,p[u]=!0),c=a+u,Object.prototype.hasOwnProperty.call(s,c))a=c;else{if(Object.prototype.hasOwnProperty.call(p,a)){if(a.charCodeAt(0)<256){for(e=0;h>e;e++)m<<=1,v==r-1?(v=0,d.push(n(m)),m=0):v++;for(t=a.charCodeAt(0),e=0;8>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1}else{for(t=1,e=0;h>e;e++)m=m<<1|t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t=0;for(t=a.charCodeAt(0),e=0;16>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1}l--,0==l&&(l=Math.pow(2,h),h++),delete p[a]}else for(t=s[a],e=0;h>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1;l--,0==l&&(l=Math.pow(2,h),h++),s[c]=f++,a=String(u)}if(\"\"!==a){if(Object.prototype.hasOwnProperty.call(p,a)){if(a.charCodeAt(0)<256){for(e=0;h>e;e++)m<<=1,v==r-1?(v=0,d.push(n(m)),m=0):v++;for(t=a.charCodeAt(0),e=0;8>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1}else{for(t=1,e=0;h>e;e++)m=m<<1|t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t=0;for(t=a.charCodeAt(0),e=0;16>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1}l--,0==l&&(l=Math.pow(2,h),h++),delete p[a]}else for(t=s[a],e=0;h>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1;l--,0==l&&(l=Math.pow(2,h),h++)}for(t=2,e=0;h>e;e++)m=m<<1|1&t,v==r-1?(v=0,d.push(n(m)),m=0):v++,t>>=1;for(;;){if(m<<=1,v==r-1){d.push(n(m));break}v++}return d.join(\"\")},decompress:function(o){return null==o?\"\":\"\"==o?null:i._decompress(o.length,32768,function(r){return o.charCodeAt(r)})},_decompress:function(o,n,e){var t,i,s,p,u,c,a,l,f=[],h=4,d=4,m=3,v=\"\",w=[],A={val:e(0),position:n,index:1};for(i=0;3>i;i+=1)f[i]=i;for(p=0,c=Math.pow(2,2),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;switch(t=p){case 0:for(p=0,c=Math.pow(2,8),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;l=r(p);break;case 1:for(p=0,c=Math.pow(2,16),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;l=r(p);break;case 2:return\"\"}for(f[3]=l,s=l,w.push(l);;){if(A.index>o)return\"\";for(p=0,c=Math.pow(2,m),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;switch(l=p){case 0:for(p=0,c=Math.pow(2,8),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;f[d++]=r(p),l=d-1,h--;break;case 1:for(p=0,c=Math.pow(2,16),a=1;a!=c;)u=A.val&A.position,A.position>>=1,0==A.position&&(A.position=n,A.val=e(A.index++)),p|=(u>0?1:0)*a,a<<=1;f[d++]=r(p),l=d-1,h--;break;case 2:return w.join(\"\")}if(0==h&&(h=Math.pow(2,m),m++),f[l])v=f[l];else{if(l!==d)return null;v=s+s.charAt(0)}w.push(v),f[d++]=s+v.charAt(0),h--,s=v,0==h&&(h=Math.pow(2,m),m++)}}};return i}();\"function\"==typeof define&&define.amd?define(function(){return LZString}):\"undefined\"!=typeof module&&null!=module&&(module.exports=LZString);", "let instance;\r\nlet frame = 0;\r\nlet elapsed = 0;\r\nconst GameInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (game) => {\r\n        instance = game;\r\n    },\r\n    getFrame: () => {\r\n        return frame;\r\n    },\r\n    setFrame: (current) => {\r\n        frame = current;\r\n    },\r\n    getElapsed: () => {\r\n        return elapsed;\r\n    },\r\n    setElapsed: (current) => {\r\n        elapsed = current;\r\n    }\r\n};\n\nexport { GameInstance, elapsed, frame, instance };\n", "let bgColor = 0;\r\nfunction BackgroundColor(color = 0) {\r\n    return () => {\r\n        bgColor = color;\r\n    };\r\n}\r\nfunction GetBackgroundColor() {\r\n    return bgColor;\r\n}\n\nexport { BackgroundColor, GetBackgroundColor };\n", "import { GameInstance } from '../GameInstance.js';\n\nlet title = 'Phaser';\r\nlet url = 'https://phaser4.io';\r\nlet color = '#fff';\r\nlet background = 'linear-gradient(#3e0081 40%, #00bcc3)';\r\nfunction Banner(gameTitle = '', gameURL = '', textColor, textBackground) {\r\n    return () => {\r\n        title = gameTitle;\r\n        url = gameURL;\r\n        if (textColor) {\r\n            color = textColor;\r\n        }\r\n        if (textBackground) {\r\n            background = textBackground;\r\n        }\r\n    };\r\n}\r\nfunction GetBanner() {\r\n    if (title !== '') {\r\n        const game = GameInstance.get();\r\n        const version = (title === 'Phaser') ? ' v' + game.VERSION : '';\r\n        console.log(`%c${title}${version}%c ${url}`, `padding: 4px 16px; color: ${color}; background: ${background}`, '');\r\n    }\r\n}\n\nexport { Banner, GetBanner };\n", "let _contextAttributes = {\r\n    alpha: false,\r\n    desynchronized: false\r\n};\r\nfunction CanvasContext(contextAttributes) {\r\n    return () => {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\nfunction GetCanvasContext() {\r\n    return _contextAttributes;\r\n}\n\nexport { CanvasContext, GetCanvasContext };\n", "let _width = 800;\r\nlet _height = 600;\r\nlet _resolution = 1;\r\nfunction Size(width = 800, height = 600, resolution = 1) {\r\n    if (resolution === 0) {\r\n        resolution = window.devicePixelRatio;\r\n    }\r\n    return () => {\r\n        _width = width;\r\n        _height = height;\r\n        _resolution = resolution;\r\n    };\r\n}\r\nfunction GetWidth() {\r\n    return _width;\r\n}\r\nfunction GetHeight() {\r\n    return _height;\r\n}\r\nfunction GetResolution() {\r\n    return _resolution;\r\n}\n\nexport { GetHeight, GetResolution, GetWidth, Size };\n", "const queue = [];\r\nconst BindingQueue = {\r\n    add: (texture) => {\r\n        queue.push(texture);\r\n    },\r\n    get: () => {\r\n        return queue;\r\n    },\r\n    clear: () => {\r\n        queue.length = 0;\r\n    }\r\n};\n\nexport { BindingQueue };\n", "import { GetBackgroundColor } from '../../config/BackgroundColor.js';\nimport { GetCanvasContext } from '../../config/CanvasContext.js';\nimport { GetWidth, GetHeight, GetResolution } from '../../config/Size.js';\nimport { BindingQueue } from '../BindingQueue.js';\n\nclass CanvasRenderer {\r\n    constructor() {\r\n        this.clearBeforeRender = true;\r\n        this.optimizeRedraw = true;\r\n        this.autoResize = true;\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n        const canvas = document.createElement('canvas');\r\n        this.canvas = canvas;\r\n        this.initContext();\r\n    }\r\n    initContext() {\r\n        const ctx = this.canvas.getContext('2d', GetCanvasContext());\r\n        this.ctx = ctx;\r\n        this.resize(this.width, this.height, this.resolution);\r\n    }\r\n    resize(width, height, resolution = 1) {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n        const canvas = this.canvas;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        if (this.autoResize) {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n    }\r\n    setBackgroundColor(color) {\r\n        const r = color >> 16 & 0xFF;\r\n        const g = color >> 8 & 0xFF;\r\n        const b = color & 0xFF;\r\n        const a = (color > 16777215) ? color >>> 24 : 255;\r\n        this.clearColor = `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        return this;\r\n    }\r\n    reset() {\r\n        const ctx = this.ctx;\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    render(renderData) {\r\n        BindingQueue.clear();\r\n        const ctx = this.ctx;\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if (this.clearBeforeRender) {\r\n            ctx.clearRect(0, 0, this.width, this.height);\r\n            ctx.fillStyle = this.clearColor;\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n        }\r\n        const worlds = renderData.worldData;\r\n        for (let i = 0; i < worlds.length; i++) {\r\n            const { camera, renderList, numRendered } = worlds[i];\r\n            const { a, b, c, d, tx, ty } = camera.worldTransform;\r\n            ctx.setTransform(a, b, c, d, tx, ty);\r\n        }\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { CanvasRenderer };\n", "let instance;\r\nfunction SetRenderer(renderer) {\r\n    instance = renderer;\r\n}\r\nfunction GetRenderer() {\r\n    return instance;\r\n}\n\nexport { GetRenderer, SetRenderer };\n", "import './BackgroundColor.js';\nimport './CanvasContext.js';\nimport './Size.js';\nimport '../renderer/BindingQueue.js';\nimport { CanvasRenderer as CanvasRenderer$1 } from '../renderer/canvas/CanvasRenderer.js';\nimport { SetRenderer } from './SetRenderer.js';\n\nfunction CanvasRenderer() {\r\n    return () => {\r\n        SetRenderer(CanvasRenderer$1);\r\n    };\r\n}\n\nexport { CanvasRenderer };\n", "let originX = 0.5;\r\nlet originY = 0.5;\r\nfunction DefaultOrigin(x = 0.5, y = x) {\r\n    return () => {\r\n        originX = x;\r\n        originY = y;\r\n    };\r\n}\n\nexport { DefaultOrigin, originX, originY };\n", "let maxTextures = 0;\r\nfunction MaxTextures(max = 0) {\r\n    return () => {\r\n        maxTextures = max;\r\n    };\r\n}\r\nfunction SetMaxTextures(max) {\r\n    maxTextures = max;\r\n}\r\nfunction GetMaxTextures() {\r\n    return maxTextures;\r\n}\n\nexport { GetMaxTextures, MaxTextures, SetMaxTextures };\n", "function GetElement(target) {\r\n    let element;\r\n    if (target) {\r\n        if (typeof target === 'string') {\r\n            element = document.getElementById(target);\r\n        }\r\n        else if (typeof target === 'object' && target.nodeType === 1) {\r\n            element = target;\r\n        }\r\n    }\r\n    if (!element) {\r\n        element = document.body;\r\n    }\r\n    return element;\r\n}\n\nexport { GetElement };\n", "import { GetElement } from '../dom/GetElement.js';\n\nlet parent;\r\nfunction Parent(parentElement) {\r\n    return () => {\r\n        if (parentElement) {\r\n            parent = GetElement(parentElement);\r\n        }\r\n    };\r\n}\r\nfunction GetParent() {\r\n    return parent;\r\n}\n\nexport { GetParent, Parent };\n", "let _scenes = [];\r\nfunction Scenes(scenes) {\r\n    return () => {\r\n        _scenes = [].concat(scenes);\r\n    };\r\n}\r\nfunction GetScenes() {\r\n    return _scenes;\r\n}\n\nexport { GetScenes, Scenes };\n", "let _contextAttributes = {\r\n    alpha: false,\r\n    antialias: false,\r\n    depth: false,\r\n    premultipliedAlpha: false\r\n};\r\nfunction WebGLContext(contextAttributes) {\r\n    return () => {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\nfunction GetWebGLContext() {\r\n    return _contextAttributes;\r\n}\n\nexport { GetWebGLContext, WebGLContext };\n", "class FBOSystem {\r\n    constructor(renderer) {\r\n        this.stack = [];\r\n        this.current = null;\r\n        this.renderer = renderer;\r\n    }\r\n    reset() {\r\n        this.stack = [];\r\n        this.current = null;\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, renderer.width, renderer.height);\r\n    }\r\n    add(framebuffer, clear = true, width = 0, height = 0) {\r\n        this.stack.push({ framebuffer, width, height });\r\n        this.set(framebuffer, clear, width, height);\r\n    }\r\n    set(framebuffer, clear = true, width = 0, height = 0) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        if (clear) {\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        if (width > 0) {\r\n            gl.viewport(0, 0, width, height);\r\n        }\r\n        this.current = framebuffer;\r\n    }\r\n    pop() {\r\n        this.stack.pop();\r\n        const len = this.stack.length;\r\n        if (len > 0) {\r\n            const entry = this.stack[len - 1];\r\n            this.set(entry.framebuffer, false, entry.width, entry.height);\r\n        }\r\n        else {\r\n            this.reset();\r\n        }\r\n    }\r\n    rebind() {\r\n        const gl = this.renderer.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.current);\r\n    }\r\n    destroy() {\r\n        this.stack = [];\r\n    }\r\n}\n\nexport { FBOSystem };\n", "let gl;\r\nconst GL = {\r\n    get: () => {\r\n        return gl;\r\n    },\r\n    set: (context) => {\r\n        gl = context;\r\n    }\r\n};\n\nexport { GL };\n", "function GetRGBArray(color, output = []) {\r\n    const r = color >> 16 & 0xFF;\r\n    const g = color >> 8 & 0xFF;\r\n    const b = color & 0xFF;\r\n    const a = (color > 16777215) ? color >>> 24 : 255;\r\n    output[0] = r / 255;\r\n    output[1] = g / 255;\r\n    output[2] = b / 255;\r\n    output[3] = a / 255;\r\n    return output;\r\n}\n\nexport { GetRGBArray };\n", "function ExactEquals(a, b) {\r\n    return (a.a === b.a &&\r\n        a.b === b.b &&\r\n        a.c === b.c &&\r\n        a.d === b.d &&\r\n        a.tx === b.tx &&\r\n        a.ty === b.ty);\r\n}\n\nexport { ExactEquals };\n", "import { GL } from '../GL.js';\n\nfunction CreateFramebuffer(texture, attachment) {\r\n    const gl = GL.get();\r\n    if (!attachment) {\r\n        attachment = gl.COLOR_ATTACHMENT0;\r\n    }\r\n    const framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    return framebuffer;\r\n}\n\nexport { CreateFramebuffer };\n", "import { GL } from '../GL.js';\n\nfunction CreateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    const { parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT } = binding;\r\n    const source = parent.image;\r\n    let width = parent.width;\r\n    let height = parent.height;\r\n    const glTexture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\r\n    if (source) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n        width = source.width;\r\n        height = source.height;\r\n    }\r\n    else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n    if (generateMipmap && isPOT) {\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n    binding.texture = glTexture;\r\n    return glTexture;\r\n}\n\nexport { CreateGLTexture };\n", "import { GL } from '../GL.js';\n\nfunction DeleteFramebuffer(framebuffer) {\r\n    const gl = GL.get();\r\n    if (gl && gl.isFramebuffer(framebuffer)) {\r\n        gl.deleteFramebuffer(framebuffer);\r\n    }\r\n}\n\nexport { DeleteFramebuffer };\n", "import { GL } from '../GL.js';\n\nfunction DeleteGLTexture(texture) {\r\n    const gl = GL.get();\r\n    if (!gl) {\r\n        return;\r\n    }\r\n    if (gl.isTexture(texture)) {\r\n        gl.deleteTexture(texture);\r\n    }\r\n}\n\nexport { DeleteGLTexture };\n", "function IsSizePowerOfTwo(width, height) {\r\n    if (width < 1 || height < 1) {\r\n        return false;\r\n    }\r\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\r\n}\n\nexport { IsSizePowerOfTwo };\n", "import { GL } from '../GL.js';\n\nfunction SetGLTextureFilterMode(texture, linear = true) {\r\n    const gl = GL.get();\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\r\n}\n\nexport { SetGLTextureFilterMode };\n", "import { GL } from '../GL.js';\n\nfunction UpdateGLTexture(binding) {\r\n    const gl = GL.get();\r\n    const source = binding.parent.image;\r\n    const width = source.width;\r\n    const height = source.height;\r\n    if (width > 0 && height > 0) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n    }\r\n    return binding.texture;\r\n}\n\nexport { UpdateGLTexture };\n", "import { GL } from '../GL.js';\nimport { CreateGLTexture } from './CreateGLTexture.js';\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer.js';\nimport { DeleteGLTexture } from './DeleteGLTexture.js';\nimport { IsSizePowerOfTwo } from '../../../math/pow2/IsSizePowerOfTwo.js';\nimport { SetGLTextureFilterMode } from './SetGLTextureFilterMode.js';\nimport { UpdateGLTexture } from './UpdateGLTexture.js';\n\nclass GLTextureBinding {\r\n    constructor(parent, config = {}) {\r\n        this.index = 0;\r\n        this.indexCounter = -1;\r\n        this.dirtyIndex = true;\r\n        this.unpackPremultiplyAlpha = true;\r\n        this.flipY = false;\r\n        this.isPOT = false;\r\n        this.generateMipmap = false;\r\n        const gl = GL.get();\r\n        this.parent = parent;\r\n        this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\r\n        const { texture = null, framebuffer = null, unpackPremultiplyAlpha = true, minFilter = gl.LINEAR, magFilter = gl.LINEAR, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, generateMipmap = this.isPOT, flipY = false } = config;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmap = generateMipmap;\r\n        this.flipY = flipY;\r\n        this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\r\n        if (framebuffer) {\r\n            this.framebuffer = framebuffer;\r\n        }\r\n        if (texture) {\r\n            this.texture = texture;\r\n        }\r\n        else {\r\n            CreateGLTexture(this);\r\n        }\r\n    }\r\n    setFilter(linear) {\r\n        if (this.texture) {\r\n            SetGLTextureFilterMode(this.texture, linear);\r\n        }\r\n    }\r\n    create() {\r\n        const texture = this.texture;\r\n        if (texture) {\r\n            DeleteGLTexture(texture);\r\n        }\r\n        return CreateGLTexture(this);\r\n    }\r\n    update() {\r\n        const texture = this.texture;\r\n        if (!texture) {\r\n            return CreateGLTexture(this);\r\n        }\r\n        else {\r\n            return UpdateGLTexture(this);\r\n        }\r\n    }\r\n    setIndex(index) {\r\n        this.dirtyIndex = (index !== this.index);\r\n        this.index = index;\r\n    }\r\n    destroy() {\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n        this.parent = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\n\nexport { GLTextureBinding };\n", "import { GL } from '../GL.js';\n\nclass IndexedBuffer {\r\n    constructor(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize) {\r\n        this.batchSize = batchSize;\r\n        this.dataSize = dataSize;\r\n        this.indexSize = indexSize;\r\n        this.vertexElementSize = vertexElementSize;\r\n        this.quadIndexSize = quadIndexSize;\r\n        this.vertexByteSize = vertexElementSize * dataSize;\r\n        this.quadByteSize = this.vertexByteSize * 4;\r\n        this.quadElementSize = vertexElementSize * 4;\r\n        this.bufferByteSize = batchSize * this.quadByteSize;\r\n        this.create();\r\n    }\r\n    create() {\r\n        let ibo = [];\r\n        for (let i = 0; i < (this.batchSize * this.indexSize); i += this.indexSize) {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n        this.data = new ArrayBuffer(this.bufferByteSize);\r\n        this.index = new Uint16Array(ibo);\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n        const gl = GL.get();\r\n        this.vertexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\r\n        this.indexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        ibo = [];\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { IndexedBuffer };\n", "class Frame {\r\n    constructor(texture, key, x, y, width, height) {\r\n        this.trimmed = false;\r\n        this.texture = texture;\r\n        this.key = key;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setPivot(x, y) {\r\n        this.pivot = { x, y };\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.updateUVs();\r\n    }\r\n    setSourceSize(width, height) {\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n    }\r\n    setTrim(width, height, x, y, w, h) {\r\n        this.trimmed = true;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n        this.spriteSourceSizeX = x;\r\n        this.spriteSourceSizeY = y;\r\n        this.spriteSourceSizeWidth = w;\r\n        this.spriteSourceSizeHeight = h;\r\n    }\r\n    getExtent(originX, originY) {\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let left;\r\n        let right;\r\n        let top;\r\n        let bottom;\r\n        if (this.trimmed) {\r\n            left = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            right = left + this.spriteSourceSizeWidth;\r\n            top = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            bottom = top + this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            left = -originX * sourceSizeWidth;\r\n            right = left + sourceSizeWidth;\r\n            top = -originY * sourceSizeHeight;\r\n            bottom = top + sourceSizeHeight;\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    setExtent(child) {\r\n        const transform = child.transform;\r\n        const originX = transform.origin.x;\r\n        const originY = transform.origin.y;\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n        let x;\r\n        let y;\r\n        let width;\r\n        let height;\r\n        if (this.trimmed) {\r\n            x = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            y = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            width = this.spriteSourceSizeWidth;\r\n            height = this.spriteSourceSizeHeight;\r\n        }\r\n        else {\r\n            x = -originX * sourceSizeWidth;\r\n            y = -originY * sourceSizeHeight;\r\n            width = sourceSizeWidth;\r\n            height = sourceSizeHeight;\r\n        }\r\n        transform.setExtent(x, y, width, height);\r\n    }\r\n    updateUVs() {\r\n        const { x, y, width, height } = this;\r\n        const baseTextureWidth = this.texture.width;\r\n        const baseTextureHeight = this.texture.height;\r\n        this.u0 = x / baseTextureWidth;\r\n        this.v0 = y / baseTextureHeight;\r\n        this.u1 = (x + width) / baseTextureWidth;\r\n        this.v1 = (y + height) / baseTextureHeight;\r\n    }\r\n}\n\nexport { Frame };\n", "import { BindingQueue } from '../renderer/BindingQueue.js';\nimport { Frame } from './Frame.js';\n\nclass Texture {\r\n    constructor(image, width, height) {\r\n        this.key = '';\r\n        if (image) {\r\n            width = image.width;\r\n            height = image.height;\r\n        }\r\n        this.image = image;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.frames = new Map();\r\n        this.data = {};\r\n        this.addFrame('__BASE', 0, 0, width, height);\r\n        BindingQueue.add(this);\r\n    }\r\n    addFrame(key, x, y, width, height) {\r\n        if (this.frames.has(key)) {\r\n            return null;\r\n        }\r\n        const frame = new Frame(this, key, x, y, width, height);\r\n        this.frames.set(key, frame);\r\n        if (!this.firstFrame || this.firstFrame.key === '__BASE') {\r\n            this.firstFrame = frame;\r\n        }\r\n        return frame;\r\n    }\r\n    getFrame(key) {\r\n        if (!key) {\r\n            return this.firstFrame;\r\n        }\r\n        if (key instanceof Frame) {\r\n            key = key.key;\r\n        }\r\n        let frame = this.frames.get(key);\r\n        if (!frame) {\r\n            console.warn(`Frame missing: ${key}`);\r\n            frame = this.firstFrame;\r\n        }\r\n        return frame;\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        const frame = this.frames.get('__BASE');\r\n        frame.setSize(width, height);\r\n    }\r\n    destroy() {\r\n        if (this.binding) {\r\n            this.binding.destroy();\r\n        }\r\n        this.frames.clear();\r\n        this.data = null;\r\n        this.image = null;\r\n        this.firstFrame = null;\r\n    }\r\n}\n\nexport { Texture };\n", "let instance;\r\nconst WebGLRendererInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (renderer) => {\r\n        instance = renderer;\r\n    }\r\n};\n\nexport { WebGLRendererInstance, instance };\n", "import { GetWidth, GetHeight, GetResolution } from '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport { CreateFramebuffer } from '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport { GLTextureBinding } from '../textures/GLTextureBinding.js';\nimport { IndexedBuffer } from '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport { Texture } from '../../../textures/Texture.js';\nimport { WebGLRendererInstance } from '../WebGLRendererInstance.js';\n\nconst shaderSource = {\r\n    fragmentShader: `\r\n#define SHADER_NAME SINGLE_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`,\r\n    vertexShader: `\r\n#define SHADER_NAME SINGLE_QUAD_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aTextureId;\r\nattribute vec4 aTintColor;\r\n\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uCameraMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nvoid main (void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vTintColor = aTintColor;\r\n\r\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n}`\r\n};\r\nclass SingleTextureQuadShader {\r\n    constructor(config = {}) {\r\n        this.attribs = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\r\n        this.uniforms = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0, uTime: 0, uResolution: 0 };\r\n        this.renderToFBO = false;\r\n        this.renderer = WebGLRendererInstance.get();\r\n        const { batchSize = 4096, dataSize = 4, indexSize = 4, vertexElementSize = 6, quadIndexSize = 6, fragmentShader = shaderSource.fragmentShader, vertexShader = shaderSource.vertexShader, width = GetWidth(), height = GetHeight(), resolution = GetResolution(), renderToFBO = false } = config;\r\n        this.buffer = new IndexedBuffer(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize);\r\n        this.createShaders(fragmentShader, vertexShader);\r\n        this.count = 0;\r\n        this.renderToFBO = renderToFBO;\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n        const binding = new GLTextureBinding(texture);\r\n        texture.binding = binding;\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const gl = this.renderer.gl;\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        gl.compileShader(fragmentShader);\r\n        let failed = false;\r\n        let message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, vertexShaderSource);\r\n        gl.compileShader(vertexShader);\r\n        message = gl.getShaderInfoLog(fragmentShader);\r\n        if (message.length > 0) {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n        if (failed) {\r\n            return;\r\n        }\r\n        const program = gl.createProgram();\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n        this.program = program;\r\n        for (const key of Object.keys(this.attribs)) {\r\n            const location = gl.getAttribLocation(program, key);\r\n            gl.enableVertexAttribArray(location);\r\n            this.attribs[key] = location;\r\n        }\r\n        for (const key of Object.keys(this.uniforms)) {\r\n            this.uniforms[key] = gl.getUniformLocation(program, key);\r\n        }\r\n    }\r\n    bind(projectionMatrix, cameraMatrix, textureID) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1i(uniforms.uTexture, renderer.textures.textureIndex[textureID]);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n    bindBuffers(indexBuffer, vertexBuffer) {\r\n        const gl = this.renderer.gl;\r\n        const stride = this.buffer.vertexByteSize;\r\n        const attribs = this.attribs;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\r\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);\r\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);\r\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);\r\n        this.count = 0;\r\n    }\r\n    draw(count) {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const buffer = this.buffer;\r\n        if (count === buffer.batchSize) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.DYNAMIC_DRAW);\r\n        }\r\n        else {\r\n            const view = buffer.vertexViewF32.subarray(0, count * buffer.quadElementSize);\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n        }\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.add(this.framebuffer, true);\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, count * buffer.quadIndexSize, gl.UNSIGNED_SHORT, 0);\r\n        if (this.renderToFBO) {\r\n            renderer.fbo.pop();\r\n        }\r\n    }\r\n    flush() {\r\n        const count = this.count;\r\n        if (count === 0) {\r\n            return false;\r\n        }\r\n        this.draw(count);\r\n        this.prevCount = count;\r\n        this.count = 0;\r\n        return true;\r\n    }\r\n}\n\nexport { SingleTextureQuadShader };\n", "import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport { GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nconst fragmentShader = `\r\n#define SHADER_NAME MULTI_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture[%count%];\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color;\r\n\r\n    %forloop%\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\nclass MultiTextureQuadShader extends SingleTextureQuadShader {\r\n    constructor(config = { fragmentShader }) {\r\n        super(config);\r\n    }\r\n    createShaders(fragmentShaderSource, vertexShaderSource) {\r\n        const maxTextures = GetMaxTextures();\r\n        let src = '';\r\n        for (let i = 1; i < maxTextures; i++) {\r\n            if (i > 1) {\r\n                src += '\\n\\telse ';\r\n            }\r\n            if (i < maxTextures - 1) {\r\n                src += `if (vTextureId < ${i}.5)`;\r\n            }\r\n            src += '\\n\\t{';\r\n            src += `\\n\\t\\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\r\n            src += '\\n\\t}';\r\n        }\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\r\n        super.createShaders(fragmentShaderSource, vertexShaderSource);\r\n    }\r\n    bind(projectionMatrix, cameraMatrix) {\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n        gl.useProgram(this.program);\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1iv(uniforms.uTexture, renderer.textures.textureIndex);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n        return true;\r\n    }\r\n}\n\nexport { MultiTextureQuadShader };\n", "function Ortho(width, height, near = -1, far = 1) {\r\n    const m00 = -2 * (1 / -width);\r\n    const m11 = -2 * (1 / height);\r\n    const m22 = 2 * (1 / (near - far));\r\n    return new Float32Array([m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1]);\r\n}\n\nexport { Ortho };\n", "import '../../../config/Size.js';\nimport '../../BindingQueue.js';\nimport '../GL.js';\nimport '../fbo/CreateFramebuffer.js';\nimport '../textures/CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport '../textures/DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport '../textures/SetGLTextureFilterMode.js';\nimport '../textures/UpdateGLTexture.js';\nimport '../textures/GLTextureBinding.js';\nimport '../buffers/IndexedBuffer.js';\nimport '../../../textures/Frame.js';\nimport '../../../textures/Texture.js';\nimport '../WebGLRendererInstance.js';\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader.js';\n\nclass ShaderSystem {\r\n    constructor(renderer, currentShader) {\r\n        this.renderer = renderer;\r\n        const stackEntry = {\r\n            shader: new currentShader()\r\n        };\r\n        this.stack = [stackEntry];\r\n        this.currentEntry = stackEntry;\r\n        this.current = stackEntry.shader;\r\n        this.singleQuadShader = new SingleTextureQuadShader();\r\n    }\r\n    add(shader, textureID) {\r\n        const stackEntry = { shader, textureID };\r\n        this.stack.push(stackEntry);\r\n        return stackEntry;\r\n    }\r\n    set(shader, textureID) {\r\n        this.flush();\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const success = shader.bind(projectionMatrix, cameraMatrix, textureID);\r\n        if (success) {\r\n            const entry = this.add(shader, textureID);\r\n            this.currentEntry = entry;\r\n            this.current = shader;\r\n        }\r\n        return success;\r\n    }\r\n    setDefault(textureID) {\r\n        this.set(this.singleQuadShader, textureID);\r\n    }\r\n    pop() {\r\n        this.flush();\r\n        const stack = this.stack;\r\n        if (stack.length > 1) {\r\n            stack.pop();\r\n        }\r\n        this.currentEntry = stack[stack.length - 1];\r\n        this.current = this.currentEntry.shader;\r\n    }\r\n    reset() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    flush() {\r\n        if (this.current.flush()) {\r\n            this.renderer.flushTotal++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    rebind() {\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n        const current = this.currentEntry;\r\n        current.shader.bind(projectionMatrix, cameraMatrix, current.textureID);\r\n    }\r\n    popAndRebind() {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n    clear() {\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { ShaderSystem };\n", "const fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}'\r\n].join('\\n');\r\nfunction GenerateSrc(maxIfs) {\r\n    let src = '';\r\n    for (let i = 0; i < maxIfs; ++i) {\r\n        if (i > 0) {\r\n            src += '\\nelse ';\r\n        }\r\n        if (i < maxIfs - 1) {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n    return src;\r\n}\r\nfunction CheckShaderMaxIfStatements(maxIfs, gl) {\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    while (true) {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return maxIfs;\r\n}\n\nexport { CheckShaderMaxIfStatements };\n", "import { BindingQueue } from '../../BindingQueue.js';\nimport { SetMaxTextures, GetMaxTextures } from '../../../config/MaxTextures.js';\nimport '../GL.js';\nimport './CreateGLTexture.js';\nimport '../fbo/DeleteFramebuffer.js';\nimport './DeleteGLTexture.js';\nimport '../../../math/pow2/IsSizePowerOfTwo.js';\nimport './SetGLTextureFilterMode.js';\nimport './UpdateGLTexture.js';\nimport { GLTextureBinding } from './GLTextureBinding.js';\nimport { CheckShaderMaxIfStatements } from '../shaders/CheckShaderMaxIfStatements.js';\n\nclass TextureSystem {\r\n    constructor(renderer) {\r\n        this.startActiveTexture = 0;\r\n        this.renderer = renderer;\r\n        this.tempTextures = [];\r\n        this.textureIndex = [];\r\n    }\r\n    init() {\r\n        const gl = this.renderer.gl;\r\n        let maxGPUTextures = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\r\n        const maxConfigTextures = GetMaxTextures();\r\n        if (maxConfigTextures === 0 || (maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures)) {\r\n            SetMaxTextures(maxGPUTextures);\r\n        }\r\n        else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures) {\r\n            maxGPUTextures = Math.max(8, maxConfigTextures);\r\n        }\r\n        const tempTextures = this.tempTextures;\r\n        if (tempTextures.length) {\r\n            tempTextures.forEach(texture => {\r\n                gl.deleteTexture(texture);\r\n            });\r\n        }\r\n        const index = [];\r\n        for (let texturesIndex = 0; texturesIndex < maxGPUTextures; texturesIndex++) {\r\n            const tempTexture = gl.createTexture();\r\n            gl.activeTexture(gl.TEXTURE0 + texturesIndex);\r\n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\r\n            tempTextures[texturesIndex] = tempTexture;\r\n            index.push(texturesIndex);\r\n        }\r\n        this.maxTextures = maxGPUTextures;\r\n        this.textureIndex = index;\r\n        this.currentActiveTexture = 1;\r\n    }\r\n    update() {\r\n        const queue = BindingQueue.get();\r\n        for (let i = 0; i < queue.length; i++) {\r\n            const texture = queue[i];\r\n            if (!texture.binding) {\r\n                texture.binding = new GLTextureBinding(texture);\r\n            }\r\n        }\r\n        BindingQueue.clear();\r\n    }\r\n    reset() {\r\n        const gl = this.renderer.gl;\r\n        const temp = this.tempTextures;\r\n        for (let i = 0; i < temp.length; i++) {\r\n            gl.activeTexture(gl.TEXTURE0 + i);\r\n            gl.bindTexture(gl.TEXTURE_2D, temp[i]);\r\n        }\r\n        this.currentActiveTexture = 1;\r\n        this.startActiveTexture++;\r\n    }\r\n    bind(texture, index = 0) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        binding.setIndex(index);\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n    }\r\n    unbind(index = 0) {\r\n        const gl = this.renderer.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.tempTextures[index]);\r\n        if (index > 0) {\r\n            this.startActiveTexture++;\r\n        }\r\n    }\r\n    request(texture) {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        const currentActiveTexture = this.currentActiveTexture;\r\n        if (binding.indexCounter >= this.startActiveTexture) {\r\n            return false;\r\n        }\r\n        binding.indexCounter = this.startActiveTexture;\r\n        if (currentActiveTexture < this.maxTextures) {\r\n            binding.setIndex(currentActiveTexture);\r\n            gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture++;\r\n        }\r\n        else {\r\n            this.renderer.flush();\r\n            this.startActiveTexture++;\r\n            binding.indexCounter = this.startActiveTexture;\r\n            binding.setIndex(1);\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n            this.currentActiveTexture = 2;\r\n        }\r\n        return true;\r\n    }\r\n}\n\nexport { TextureSystem };\n", "import { GetBackgroundColor } from '../../config/BackgroundColor.js';\nimport { GetWidth, GetHeight, GetResolution } from '../../config/Size.js';\nimport '../BindingQueue.js';\nimport '../../config/MaxTextures.js';\nimport { GetWebGLContext } from '../../config/WebGLContext.js';\nimport { FBOSystem } from './fbo/FBOSystem.js';\nimport { GL } from './GL.js';\nimport { GetRGBArray } from './colors/GetRGBArray.js';\nimport { ExactEquals } from '../../math/matrix2d-funcs/ExactEquals.js';\nimport './fbo/CreateFramebuffer.js';\nimport './textures/CreateGLTexture.js';\nimport './fbo/DeleteFramebuffer.js';\nimport './textures/DeleteGLTexture.js';\nimport '../../math/pow2/IsSizePowerOfTwo.js';\nimport './textures/SetGLTextureFilterMode.js';\nimport './textures/UpdateGLTexture.js';\nimport './textures/GLTextureBinding.js';\nimport './buffers/IndexedBuffer.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport { WebGLRendererInstance } from './WebGLRendererInstance.js';\nimport './shaders/SingleTextureQuadShader.js';\nimport { MultiTextureQuadShader } from './shaders/MultiTextureQuadShader.js';\nimport { Ortho } from './cameras/Ortho.js';\nimport { ShaderSystem } from './shaders/ShaderSystem.js';\nimport './shaders/CheckShaderMaxIfStatements.js';\nimport { TextureSystem } from './textures/TextureSystem.js';\n\nclass WebGLRenderer {\r\n    constructor() {\r\n        this.clearColor = [0, 0, 0, 1];\r\n        this.flushTotal = 0;\r\n        this.clearBeforeRender = true;\r\n        this.optimizeRedraw = false;\r\n        this.autoResize = true;\r\n        this.contextLost = false;\r\n        this.currentCamera = null;\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n        const canvas = document.createElement('canvas');\r\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\r\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\r\n        this.canvas = canvas;\r\n        this.fbo = new FBOSystem(this);\r\n        this.textures = new TextureSystem(this);\r\n        this.initContext();\r\n        WebGLRendererInstance.set(this);\r\n        this.shaders = new ShaderSystem(this, MultiTextureQuadShader);\r\n    }\r\n    initContext() {\r\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\r\n        GL.set(gl);\r\n        this.gl = gl;\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n        this.resize(this.width, this.height, this.resolution);\r\n        this.textures.init();\r\n    }\r\n    resize(width, height, resolution = 1) {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n        const canvas = this.canvas;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        if (this.autoResize) {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n        this.gl.viewport(0, 0, this.width, this.height);\r\n        this.projectionMatrix = Ortho(width, height);\r\n    }\r\n    onContextLost(event) {\r\n        event.preventDefault();\r\n        this.contextLost = true;\r\n    }\r\n    onContextRestored() {\r\n        this.contextLost = false;\r\n        this.initContext();\r\n    }\r\n    setBackgroundColor(color) {\r\n        GetRGBArray(color, this.clearColor);\r\n        return this;\r\n    }\r\n    reset(framebuffer = null, width = this.width, height = this.height) {\r\n        const gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        gl.viewport(0, 0, width, height);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        this.flushTotal = 0;\r\n        this.currentCamera = null;\r\n        this.textures.update();\r\n    }\r\n    render(renderData) {\r\n        if (this.contextLost) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0) {\r\n            return;\r\n        }\r\n        const gl = this.gl;\r\n        if (this.clearBeforeRender) {\r\n            const cls = this.clearColor;\r\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        const worlds = renderData.worldData;\r\n        for (let i = 0; i < worlds.length; i++) {\r\n            const { camera, renderList } = worlds[i];\r\n            if (!this.currentCamera || !ExactEquals(camera.worldTransform, this.currentCamera.worldTransform)) {\r\n                this.flush();\r\n                this.currentCamera = camera;\r\n                this.shaders.rebind();\r\n            }\r\n            renderList.forEach(entry => {\r\n                if (entry.children.length) {\r\n                    this.renderNode(entry);\r\n                }\r\n                else {\r\n                    entry.node.renderGL(this);\r\n                }\r\n            });\r\n        }\r\n        this.flush();\r\n    }\r\n    renderNode(entry) {\r\n        entry.node.renderGL(this);\r\n        entry.children.forEach(child => {\r\n            if (child.children.length > 0) {\r\n                this.renderNode(child);\r\n            }\r\n            else {\r\n                child.node.renderGL(this);\r\n            }\r\n        });\r\n        entry.node.postRenderGL(this);\r\n    }\r\n    flush() {\r\n        this.shaders.flush();\r\n    }\r\n    destroy() {\r\n        WebGLRendererInstance.set(undefined);\r\n    }\r\n}\n\nexport { WebGLRenderer };\n", "import './BackgroundColor.js';\nimport './Size.js';\nimport '../renderer/BindingQueue.js';\nimport { SetRenderer } from './SetRenderer.js';\nimport './MaxTextures.js';\nimport './WebGLContext.js';\nimport '../renderer/webgl1/fbo/FBOSystem.js';\nimport '../renderer/webgl1/GL.js';\nimport '../renderer/webgl1/colors/GetRGBArray.js';\nimport '../math/matrix2d-funcs/ExactEquals.js';\nimport '../renderer/webgl1/fbo/CreateFramebuffer.js';\nimport '../renderer/webgl1/textures/CreateGLTexture.js';\nimport '../renderer/webgl1/fbo/DeleteFramebuffer.js';\nimport '../renderer/webgl1/textures/DeleteGLTexture.js';\nimport '../math/pow2/IsSizePowerOfTwo.js';\nimport '../renderer/webgl1/textures/SetGLTextureFilterMode.js';\nimport '../renderer/webgl1/textures/UpdateGLTexture.js';\nimport '../renderer/webgl1/textures/GLTextureBinding.js';\nimport '../renderer/webgl1/buffers/IndexedBuffer.js';\nimport '../textures/Frame.js';\nimport '../textures/Texture.js';\nimport '../renderer/webgl1/WebGLRendererInstance.js';\nimport '../renderer/webgl1/shaders/SingleTextureQuadShader.js';\nimport '../renderer/webgl1/shaders/MultiTextureQuadShader.js';\nimport '../renderer/webgl1/cameras/Ortho.js';\nimport '../renderer/webgl1/shaders/ShaderSystem.js';\nimport '../renderer/webgl1/shaders/CheckShaderMaxIfStatements.js';\nimport '../renderer/webgl1/textures/TextureSystem.js';\nimport { WebGLRenderer as WebGLRenderer$1 } from '../renderer/webgl1/WebGLRenderer.js';\n\nfunction WebGLRenderer() {\r\n    return () => {\r\n        SetRenderer(WebGLRenderer$1);\r\n    };\r\n}\n\nexport { WebGLRenderer };\n", "import '../GameInstance.js';\nexport { BackgroundColor, GetBackgroundColor } from './BackgroundColor.js';\nexport { Banner, GetBanner } from './Banner.js';\nexport { CanvasContext, GetCanvasContext } from './CanvasContext.js';\nexport { GetHeight, GetResolution, GetWidth, Size } from './Size.js';\nimport '../renderer/BindingQueue.js';\nimport '../renderer/canvas/CanvasRenderer.js';\nexport { GetRenderer, SetRenderer } from './SetRenderer.js';\nexport { CanvasRenderer } from './CanvasRenderer.js';\nexport { DefaultOrigin, originX, originY } from './DefaultOrigin.js';\nexport { GetMaxTextures, MaxTextures, SetMaxTextures } from './MaxTextures.js';\nimport '../dom/GetElement.js';\nexport { GetParent, Parent } from './Parent.js';\nexport { GetScenes, Scenes } from './Scenes.js';\nexport { GetWebGLContext, WebGLContext } from './WebGLContext.js';\nimport '../renderer/webgl1/fbo/FBOSystem.js';\nimport '../renderer/webgl1/GL.js';\nimport '../renderer/webgl1/colors/GetRGBArray.js';\nimport '../math/matrix2d-funcs/ExactEquals.js';\nimport '../renderer/webgl1/fbo/CreateFramebuffer.js';\nimport '../renderer/webgl1/textures/CreateGLTexture.js';\nimport '../renderer/webgl1/fbo/DeleteFramebuffer.js';\nimport '../renderer/webgl1/textures/DeleteGLTexture.js';\nimport '../math/pow2/IsSizePowerOfTwo.js';\nimport '../renderer/webgl1/textures/SetGLTextureFilterMode.js';\nimport '../renderer/webgl1/textures/UpdateGLTexture.js';\nimport '../renderer/webgl1/textures/GLTextureBinding.js';\nimport '../renderer/webgl1/buffers/IndexedBuffer.js';\nimport '../textures/Frame.js';\nimport '../textures/Texture.js';\nimport '../renderer/webgl1/WebGLRendererInstance.js';\nimport '../renderer/webgl1/shaders/SingleTextureQuadShader.js';\nimport '../renderer/webgl1/shaders/MultiTextureQuadShader.js';\nimport '../renderer/webgl1/cameras/Ortho.js';\nimport '../renderer/webgl1/shaders/ShaderSystem.js';\nimport '../renderer/webgl1/shaders/CheckShaderMaxIfStatements.js';\nimport '../renderer/webgl1/textures/TextureSystem.js';\nimport '../renderer/webgl1/WebGLRenderer.js';\nexport { WebGLRenderer } from './WebGLRenderer.js';\n", "function Emit(emitter, event, ...args) {\r\n    if (emitter.events.size === 0 || !emitter.events.has(event)) {\r\n        return false;\r\n    }\r\n    const listeners = emitter.events.get(event);\r\n    for (const ee of listeners) {\r\n        ee.callback.apply(ee.context, args);\r\n        if (ee.once) {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        emitter.events.delete(event);\r\n    }\r\n    return true;\r\n}\n\nexport { Emit };\n", "import { GetElement } from './GetElement.js';\n\nfunction AddToDOM(element, parent) {\r\n    const target = GetElement(parent);\r\n    target.appendChild(element);\r\n    return element;\r\n}\n\nexport { AddToDOM };\n", "function DOMContentLoaded(callback) {\r\n    const readyState = document.readyState;\r\n    if (readyState === 'complete' || readyState === 'interactive') {\r\n        callback();\r\n        return;\r\n    }\r\n    const check = () => {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n        callback();\r\n    };\r\n    if (!document.body) {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (window.hasOwnProperty('cordova')) {\r\n        document.addEventListener('deviceready', check, true);\r\n    }\r\n    else {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n}\n\nexport { DOMContentLoaded };\n", "class EventEmitter {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n}\n\nexport { EventEmitter };\n", "class EventInstance {\r\n    constructor(callback, context, once = false) {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\n\nexport { EventInstance };\n", "import { EventInstance } from './EventInstance.js';\n\nfunction On(emitter, event, callback, context = emitter, once = false) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n    if (!listeners) {\r\n        emitter.events.set(event, new Set([listener]));\r\n    }\r\n    else {\r\n        listeners.add(listener);\r\n    }\r\n    return listener;\r\n}\n\nexport { On };\n", "import './EventInstance.js';\nimport { On } from './On.js';\n\nfunction Once(emitter, event, callback, context = emitter) {\r\n    return On(emitter, event, callback, context, true);\r\n}\n\nexport { Once };\n", "function CreateSceneRenderData() {\r\n    return {\r\n        gameFrame: 0,\r\n        numTotalFrames: 0,\r\n        numDirtyFrames: 0,\r\n        numDirtyCameras: 0,\r\n        worldData: []\r\n    };\r\n}\n\nexport { CreateSceneRenderData };\n", "function ResetSceneRenderData(renderData, gameFrame = 0) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.numTotalFrames = 0;\r\n    renderData.numDirtyFrames = 0;\r\n    renderData.numDirtyCameras = 0;\r\n    renderData.worldData.length = 0;\r\n}\n\nexport { ResetSceneRenderData };\n", "let instance;\r\nconst SceneManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { SceneManagerInstance };\n", "import { GameInstance } from '../GameInstance.js';\nimport { GetScenes } from '../config/Scenes.js';\nimport { Emit } from '../events/Emit.js';\nimport '../events/EventInstance.js';\nimport '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport { CreateSceneRenderData } from './CreateSceneRenderData.js';\nimport { ResetSceneRenderData } from './ResetSceneRenderData.js';\nimport { SceneManagerInstance } from './SceneManagerInstance.js';\n\nclass SceneManager {\r\n    constructor() {\r\n        this.scenes = new Map();\r\n        this.sceneIndex = 0;\r\n        this.flush = false;\r\n        this.renderResult = CreateSceneRenderData();\r\n        this.game = GameInstance.get();\r\n        SceneManagerInstance.set(this);\r\n        Once(this.game, 'boot', () => this.boot());\r\n    }\r\n    boot() {\r\n        GetScenes().forEach(scene => new scene());\r\n    }\r\n    update(delta, time) {\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'update', delta, time);\r\n        }\r\n    }\r\n    render(gameFrame) {\r\n        const results = this.renderResult;\r\n        ResetSceneRenderData(results, gameFrame);\r\n        for (const scene of this.scenes.values()) {\r\n            Emit(scene, 'render', results);\r\n        }\r\n        if (this.flush) {\r\n            results.numDirtyFrames++;\r\n            this.flush = false;\r\n        }\r\n        return results;\r\n    }\r\n}\n\nexport { SceneManager };\n", "function CreateCanvas(width, height) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas.getContext('2d');\r\n}\n\nexport { CreateCanvas };\n", "let instance;\r\nconst TextureManagerInstance = {\r\n    get: () => {\r\n        return instance;\r\n    },\r\n    set: (manager) => {\r\n        instance = manager;\r\n    }\r\n};\n\nexport { TextureManagerInstance };\n", "import '../renderer/BindingQueue.js';\nimport './Frame.js';\nimport { Texture } from './Texture.js';\nimport { CreateCanvas } from './CreateCanvas.js';\nimport { TextureManagerInstance } from './TextureManagerInstance.js';\n\nclass TextureManager {\r\n    constructor() {\r\n        this.textures = new Map();\r\n        this.createDefaultTextures();\r\n        TextureManagerInstance.set(this);\r\n    }\r\n    createDefaultTextures() {\r\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\r\n        const missing = CreateCanvas(32, 32);\r\n        missing.strokeStyle = '#0f0';\r\n        missing.moveTo(0, 0);\r\n        missing.lineTo(32, 32);\r\n        missing.stroke();\r\n        missing.strokeRect(0.5, 0.5, 31, 31);\r\n        this.add('__MISSING', new Texture(missing.canvas));\r\n    }\r\n    get(key) {\r\n        const textures = this.textures;\r\n        if (textures.has(key)) {\r\n            return textures.get(key);\r\n        }\r\n        else {\r\n            return textures.get('__MISSING');\r\n        }\r\n    }\r\n    has(key) {\r\n        return this.textures.has(key);\r\n    }\r\n    add(key, source) {\r\n        let texture;\r\n        const textures = this.textures;\r\n        if (!textures.has(key)) {\r\n            if (source instanceof Texture) {\r\n                texture = source;\r\n            }\r\n            else {\r\n                texture = new Texture(source);\r\n            }\r\n            texture.key = key;\r\n            textures.set(key, texture);\r\n        }\r\n        return texture;\r\n    }\r\n}\n\nexport { TextureManager };\n", "import { GameInstance } from './GameInstance.js';\nimport { GetBanner } from './config/Banner.js';\nimport './renderer/BindingQueue.js';\nimport { GetRenderer } from './config/SetRenderer.js';\nimport './dom/GetElement.js';\nimport { GetParent } from './config/Parent.js';\nimport './config/Scenes.js';\nimport './textures/Frame.js';\nimport './textures/Texture.js';\nimport { Emit } from './events/Emit.js';\nimport { AddToDOM } from './dom/AddToDOM.js';\nimport { DOMContentLoaded } from './dom/DOMContentLoaded.js';\nimport { EventEmitter } from './events/EventEmitter.js';\nimport './events/EventInstance.js';\nimport './events/On.js';\nimport './events/Once.js';\nimport './scenes/CreateSceneRenderData.js';\nimport './scenes/ResetSceneRenderData.js';\nimport './scenes/SceneManagerInstance.js';\nimport { SceneManager } from './scenes/SceneManager.js';\nimport './textures/CreateCanvas.js';\nimport './textures/TextureManagerInstance.js';\nimport { TextureManager } from './textures/TextureManager.js';\n\nclass Game extends EventEmitter {\r\n    constructor(...settings) {\r\n        super();\r\n        this.VERSION = '4.0.0-beta1';\r\n        this.isBooted = false;\r\n        this.isPaused = false;\r\n        this.willUpdate = true;\r\n        this.willRender = true;\r\n        this.lastTick = 0;\r\n        this.elapsed = 0;\r\n        this.frame = 0;\r\n        GameInstance.set(this);\r\n        DOMContentLoaded(() => this.boot(settings));\r\n    }\r\n    boot(settings) {\r\n        settings.forEach(setting => setting());\r\n        const renderer = GetRenderer();\r\n        this.renderer = new renderer();\r\n        this.textureManager = new TextureManager();\r\n        this.sceneManager = new SceneManager();\r\n        const parent = GetParent();\r\n        if (parent) {\r\n            AddToDOM(this.renderer.canvas, parent);\r\n        }\r\n        this.isBooted = true;\r\n        GetBanner();\r\n        Emit(this, 'boot');\r\n        this.lastTick = performance.now();\r\n        this.step(this.lastTick);\r\n    }\r\n    pause() {\r\n        this.isPaused = true;\r\n    }\r\n    resume() {\r\n        this.isPaused = false;\r\n        this.lastTick = performance.now();\r\n    }\r\n    step(time) {\r\n        const delta = time - this.lastTick;\r\n        this.lastTick = time;\r\n        this.elapsed += delta;\r\n        if (!this.isPaused) {\r\n            if (this.willUpdate) {\r\n                this.sceneManager.update(delta, time);\r\n                Emit(this, 'update', delta, time);\r\n            }\r\n            if (this.willRender) {\r\n                this.renderer.render(this.sceneManager.render(this.frame));\r\n            }\r\n        }\r\n        this.frame++;\r\n        GameInstance.setFrame(this.frame);\r\n        GameInstance.setElapsed(this.elapsed);\r\n        requestAnimationFrame(now => this.step(now));\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { Game };\n", "function GetConfigValue(config, property, defaultValue) {\r\n    if (Object.prototype.hasOwnProperty.call(config, property)) {\r\n        return config[property];\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\n\nexport { GetConfigValue };\n", "import { SceneManagerInstance } from './SceneManagerInstance.js';\nimport { GetConfigValue } from './GetConfigValue.js';\n\nfunction Install(scene, config = {}) {\r\n    const sceneManager = SceneManagerInstance.get();\r\n    const size = sceneManager.scenes.size;\r\n    const sceneIndex = sceneManager.sceneIndex;\r\n    const firstScene = (size === 0);\r\n    if (typeof config === 'string') {\r\n        scene.key = config;\r\n    }\r\n    else if (config || (!config && firstScene)) {\r\n        scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex.toString());\r\n    }\r\n    if (sceneManager.scenes.has(scene.key)) {\r\n        console.warn('Scene key already in use: ' + scene.key);\r\n    }\r\n    else {\r\n        sceneManager.scenes.set(scene.key, scene);\r\n        sceneManager.flush = true;\r\n        sceneManager.sceneIndex++;\r\n    }\r\n}\n\nexport { Install };\n", "import { GameInstance } from '../GameInstance.js';\nimport './SceneManagerInstance.js';\nimport './GetConfigValue.js';\nimport { Install } from './Install.js';\n\nclass Scene {\r\n    constructor(config) {\r\n        this.game = GameInstance.get();\r\n        this.events = new Map();\r\n        Install(this, config);\r\n    }\r\n}\n\nexport { Scene };\n", "class Matrix2D {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n    set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        return this;\r\n    }\r\n    identity() {\r\n        return this.set();\r\n    }\r\n    toArray() {\r\n        return [this.a, this.b, this.c, this.d, this.tx, this.ty];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n}\n\nexport { Matrix2D };\n", "function Contains(rect, x, y) {\r\n    if (rect.width <= 0 || rect.height <= 0) {\r\n        return false;\r\n    }\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n}\n\nexport { Contains };\n", "import { Contains } from './Contains.js';\n\nclass Rectangle {\r\n    constructor(x = 0, y = 0, width = 0, height = 0) {\r\n        this.set(x, y, width, height);\r\n    }\r\n    set(x = 0, y = 0, width = 0, height = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n    contains(x, y) {\r\n        return Contains(this, x, y);\r\n    }\r\n    set right(value) {\r\n        if (value <= this.x) {\r\n            this.width = 0;\r\n        }\r\n        else {\r\n            this.width = value - this.x;\r\n        }\r\n    }\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    set bottom(value) {\r\n        if (value <= this.y) {\r\n            this.height = 0;\r\n        }\r\n        else {\r\n            this.height = value - this.y;\r\n        }\r\n    }\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n}\n\nexport { Rectangle };\n", "function NOOP() {\r\n}\n\nexport { NOOP };\n", "import { NOOP } from '../../utils/NOOP.js';\n\nclass Vec2Callback {\r\n    constructor(callback, x = 0, y = 0, compareValue = false) {\r\n        this.compareValue = false;\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback = callback;\r\n        this.compareValue = compareValue;\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback(this);\r\n        return this;\r\n    }\r\n    destroy() {\r\n        this.callback = NOOP;\r\n    }\r\n    set x(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._x = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set y(value) {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x)) {\r\n            this._y = value;\r\n            this.callback(this);\r\n        }\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n}\n\nexport { Vec2Callback };\n", "function Wrap(value, min, max) {\r\n    const range = max - min;\r\n    return (min + ((((value - min) % range) + range) % range));\r\n}\n\nexport { Wrap };\n", "import { Wrap } from '../Wrap.js';\n\nfunction WrapAngle(angle) {\r\n    return Wrap(angle, -Math.PI, Math.PI);\r\n}\n\nexport { WrapAngle };\n", "import { GameInstance } from '../GameInstance.js';\nimport { Matrix2D } from '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport { Rectangle } from '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport { Vec2Callback } from '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport { WrapAngle } from '../math/angle/WrapAngle.js';\n\nclass Camera {\r\n    constructor() {\r\n        this._rotation = 0;\r\n        this.type = 'Camera';\r\n        this.dirtyRender = true;\r\n        const game = GameInstance.get();\r\n        this.renderer = game.renderer;\r\n        this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]);\r\n        this.bounds = new Rectangle();\r\n        this.worldTransform = new Matrix2D();\r\n        this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\r\n        this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\r\n        this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\r\n        this.reset();\r\n    }\r\n    updateTransform() {\r\n        const matrix = this.matrix;\r\n        const px = this.position.x;\r\n        const py = this.position.y;\r\n        const sx = this.scale.x;\r\n        const sy = this.scale.y;\r\n        const ox = -px + (this.width * this.origin.x);\r\n        const oy = -py + (this.height * this.origin.y);\r\n        const z = Math.sin(this.rotation);\r\n        const w = Math.cos(this.rotation);\r\n        const z2 = z + z;\r\n        const zz = z * z2;\r\n        const wz = w * z2;\r\n        const out0 = (1 - zz) * sx;\r\n        const out1 = wz * sx;\r\n        const out4 = -wz * sy;\r\n        const out5 = (1 - zz) * sy;\r\n        matrix[0] = out0;\r\n        matrix[1] = out1;\r\n        matrix[4] = out4;\r\n        matrix[5] = out5;\r\n        matrix[12] = px + ox - (out0 * ox + out4 * oy);\r\n        matrix[13] = py + oy - (out1 * ox + out5 * oy);\r\n        this.worldTransform.set(w * sx, z * sx, -z * sy, w * sy, -px, -py);\r\n        const bw = this.width * (1 / sx);\r\n        const bh = this.height * (1 / sy);\r\n        this.bounds.set(ox - (bw / 2), oy - (bh / 2), bw, bh);\r\n        this.dirtyRender = true;\r\n    }\r\n    reset() {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n    set rotation(value) {\r\n        if (value !== this._rotation) {\r\n            this._rotation = WrapAngle(value);\r\n            this.updateTransform();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    destroy() {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.origin.destroy();\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\n\nexport { Camera };\n", "import { GameInstance } from '../GameInstance.js';\nimport { Matrix2D } from '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport { Rectangle } from '../geom/rectangle/Rectangle.js';\n\nclass StaticCamera {\r\n    constructor() {\r\n        this.type = 'StaticCamera';\r\n        this.dirtyRender = true;\r\n        const game = GameInstance.get();\r\n        this.renderer = game.renderer;\r\n        this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n        this.bounds = new Rectangle();\r\n        this.worldTransform = new Matrix2D();\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n    destroy() {\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\n\nexport { StaticCamera };\n", "function DepthFirstSearch(parent) {\r\n    const stack = [parent];\r\n    const output = [];\r\n    while (stack.length > 0) {\r\n        const node = stack.shift();\r\n        output.push(node);\r\n        const numChildren = node.numChildren;\r\n        if (numChildren > 0) {\r\n            for (let i = numChildren - 1; i >= 0; i--) {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n    output.shift();\r\n    return output;\r\n}\n\nexport { DepthFirstSearch };\n", "function GetChildIndex(parent, child) {\r\n    return parent.children.indexOf(child);\r\n}\n\nexport { GetChildIndex };\n", "function RemoveChildAt(parent, index) {\r\n    const children = parent.children;\r\n    let child;\r\n    if (index >= 0 && index < children.length) {\r\n        const removed = children.splice(index, 1);\r\n        if (removed[0]) {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChildAt };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { RemoveChildAt } from './RemoveChildAt.js';\n\nfunction RemoveChild(parent, child) {\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex > -1) {\r\n        RemoveChildAt(parent, currentIndex);\r\n    }\r\n    return child;\r\n}\n\nexport { RemoveChild };\n", "const AddedToWorldEvent = 'addedtoworld';\n\nexport { AddedToWorldEvent };\n", "const DestroyEvent = 'destroy';\n\nexport { DestroyEvent };\n", "const PostUpdateEvent = 'postupdate';\n\nexport { PostUpdateEvent };\n", "const RemovedFromWorldEvent = 'removedfromworld';\n\nexport { RemovedFromWorldEvent };\n", "const UpdateEvent = 'update';\n\nexport { UpdateEvent };\n", "import { AddedToWorldEvent } from '../gameobjects/events/AddedToWorldEvent.js';\nimport { RemovedFromWorldEvent } from '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\n\nfunction SetWorld(world, ...children) {\r\n    children.forEach(child => {\r\n        if (child.world) {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n        child.world = world;\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n    return children;\r\n}\n\nexport { SetWorld };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport { SetWorld } from './SetWorld.js';\n\nfunction SetParent(parent, ...children) {\r\n    children.forEach(child => {\r\n        if (child.parent) {\r\n            RemoveChild(child.parent, child);\r\n        }\r\n        child.parent = parent;\r\n    });\r\n    const parentWorld = parent.world;\r\n    if (parentWorld) {\r\n        SetWorld(parentWorld, ...DepthFirstSearch(parent));\r\n    }\r\n    return children;\r\n}\n\nexport { SetParent };\n", "const DIRTY_CONST = {\r\n    CLEAR: 0,\r\n    TRANSFORM: 1,\r\n    UPDATE: 2,\r\n    CHILD_CACHE: 4,\r\n    POST_RENDER: 8,\r\n    COLORS: 16,\r\n    BOUNDS: 32,\r\n    TEXTURE: 64,\r\n    FRAME: 128,\r\n    ALPHA: 256,\r\n    CHILD: 512,\r\n    DEFAULT: 1 + 2 + 16 + 32,\r\n    USER1: 536870912,\r\n    USER2: 1073741824,\r\n    USER3: 2147483648,\r\n    USER4: 4294967296\r\n};\n\nexport { DIRTY_CONST };\n", "function RemoveChildrenBetween(parent, beginIndex = 0, endIndex) {\r\n    const children = parent.children;\r\n    if (endIndex === undefined) {\r\n        endIndex = children.length;\r\n    }\r\n    const range = endIndex - beginIndex;\r\n    if (range > 0 && range <= endIndex) {\r\n        const removed = children.splice(beginIndex, range);\r\n        removed.forEach(child => {\r\n            child.parent = null;\r\n        });\r\n        return removed;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\n\nexport { RemoveChildrenBetween };\n", "import { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction DestroyChildren(parent, beginIndex = 0, endIndex) {\r\n    const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    removed.forEach(child => {\r\n        child.destroy();\r\n    });\r\n}\n\nexport { DestroyChildren };\n", "import './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport { RemoveChild } from './RemoveChild.js';\n\nfunction RemoveChildren(parent, ...children) {\r\n    children.forEach(child => {\r\n        RemoveChild(parent, child);\r\n    });\r\n    return children;\r\n}\n\nexport { RemoveChildren };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\n\nfunction ReparentChildren(parent, newParent, beginIndex = 0, endIndex) {\r\n    const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n    SetParent(newParent, ...moved);\r\n    moved.forEach(child => {\r\n        child.transform.updateWorld();\r\n    });\r\n    return moved;\r\n}\n\nexport { ReparentChildren };\n", "import { EventInstance } from './EventInstance.js';\n\nfunction Off(emitter, event, callback, context, once) {\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n    if (!callback) {\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance) {\r\n        listeners.delete(callback);\r\n    }\r\n    else {\r\n        const hasContext = !context;\r\n        const hasOnce = (once !== undefined);\r\n        for (const listener of listeners) {\r\n            if ((listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)) {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n    if (listeners.size === 0) {\r\n        events.delete(event);\r\n    }\r\n    return emitter;\r\n}\n\nexport { Off };\n", "function GetVertices(transform) {\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y, right, bottom } = transform.extent;\r\n    const x0 = (x * a) + (y * c) + tx;\r\n    const y0 = (x * b) + (y * d) + ty;\r\n    const x1 = (x * a) + (bottom * c) + tx;\r\n    const y1 = (x * b) + (bottom * d) + ty;\r\n    const x2 = (right * a) + (bottom * c) + tx;\r\n    const y2 = (right * b) + (bottom * d) + ty;\r\n    const x3 = (right * a) + (y * c) + tx;\r\n    const y3 = (right * b) + (y * d) + ty;\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\n\nexport { GetVertices };\n", "import '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { GetVertices } from '../transform/GetVertices.js';\n\nclass BoundsComponent {\r\n    constructor(entity) {\r\n        this.fixed = false;\r\n        this.includeChildren = true;\r\n        this.visibleOnly = true;\r\n        this.entity = entity;\r\n        this.area = new Rectangle();\r\n    }\r\n    set(x, y, width, height) {\r\n        this.area.set(x, y, width, height);\r\n    }\r\n    get() {\r\n        if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed) {\r\n            this.update();\r\n        }\r\n        return this.area;\r\n    }\r\n    updateLocal() {\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(this.entity.transform);\r\n        const x = Math.min(x0, x1, x2, x3);\r\n        const y = Math.min(y0, y1, y2, y3);\r\n        const right = Math.max(x0, x1, x2, x3);\r\n        const bottom = Math.max(y0, y1, y2, y3);\r\n        return this.area.set(x, y, right - x, bottom - y);\r\n    }\r\n    update() {\r\n        const bounds = this.updateLocal();\r\n        this.entity.clearDirty(DIRTY_CONST.BOUNDS);\r\n        if (!this.includeChildren || !this.entity.numChildren) {\r\n            return bounds;\r\n        }\r\n        const visibleOnly = this.visibleOnly;\r\n        const children = this.entity.children;\r\n        let x = bounds.x;\r\n        let y = bounds.y;\r\n        let right = bounds.right;\r\n        let bottom = bounds.bottom;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            if (!child || (visibleOnly && !child.visible)) {\r\n                continue;\r\n            }\r\n            const childBounds = child.bounds.get();\r\n            if (childBounds.x < x) {\r\n                x = childBounds.x;\r\n            }\r\n            if (childBounds.y < y) {\r\n                y = childBounds.y;\r\n            }\r\n            if (childBounds.right > right) {\r\n                right = childBounds.right;\r\n            }\r\n            if (childBounds.bottom > bottom) {\r\n                bottom = childBounds.bottom;\r\n            }\r\n        }\r\n        return bounds.set(x, y, right - x, bottom - y);\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.area = null;\r\n    }\r\n}\n\nexport { BoundsComponent };\n", "class InputComponent {\r\n    constructor(entity) {\r\n        this.enabled = false;\r\n        this.enabledChildren = true;\r\n        this.entity = entity;\r\n    }\r\n    destroy() {\r\n        this.entity = null;\r\n        this.hitArea = null;\r\n    }\r\n}\n\nexport { InputComponent };\n", "class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.set(x, y);\r\n    }\r\n    set(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y];\r\n    }\r\n    fromArray(src) {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n    toString() {\r\n        return `[x=${this.x}, y=${this.y}]`;\r\n    }\r\n}\n\nexport { Vec2 };\n", "function UpdateLocalTransform(transform) {\r\n    const local = transform.local;\r\n    const x = transform.position.x;\r\n    const y = transform.position.y;\r\n    const rotation = transform.rotation;\r\n    const scaleX = transform.scale.x;\r\n    const scaleY = transform.scale.y;\r\n    const skewX = transform.skew.x;\r\n    const skewY = transform.skew.y;\r\n    local.set(Math.cos(rotation + skewY) * scaleX, Math.sin(rotation + skewY) * scaleX, -Math.sin(rotation - skewX) * scaleY, Math.cos(rotation - skewX) * scaleY, x, y);\r\n}\n\nexport { UpdateLocalTransform };\n", "function Copy(src, target) {\r\n    return target.set(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\n\nexport { Copy };\n", "import { Copy } from '../../../math/matrix2d/Copy.js';\n\nfunction UpdateWorldTransform(gameObject) {\r\n    const parent = gameObject.parent;\r\n    const transform = gameObject.transform;\r\n    const lt = transform.local;\r\n    const wt = transform.world;\r\n    if (!parent) {\r\n        Copy(lt, wt);\r\n    }\r\n    else if (transform.passthru) {\r\n        Copy(parent.transform.world, wt);\r\n    }\r\n    else {\r\n        const { a, b, c, d, tx, ty } = lt;\r\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.transform.world;\r\n        wt.set(a * pa + b * pc, a * pb + b * pd, c * pa + d * pc, c * pb + d * pd, tx * pa + ty * pc + ptx, tx * pb + ty * pd + pty);\r\n    }\r\n}\n\nexport { UpdateWorldTransform };\n", "import { Matrix2D } from '../../../math/matrix2d/Matrix2D.js';\nimport '../../../geom/rectangle/Contains.js';\nimport { Rectangle } from '../../../geom/rectangle/Rectangle.js';\nimport '../../../utils/NOOP.js';\nimport { Vec2Callback } from '../../../math/vec2/Vec2Callback.js';\nimport { originX, originY } from '../../../config/DefaultOrigin.js';\nimport { DIRTY_CONST } from '../../DIRTY_CONST.js';\nimport { Vec2 } from '../../../math/vec2/Vec2.js';\nimport { UpdateLocalTransform } from './UpdateLocalTransform.js';\nimport '../../../math/matrix2d/Copy.js';\nimport { UpdateWorldTransform } from './UpdateWorldTransform.js';\n\nclass TransformComponent {\r\n    constructor(entity, x = 0, y = 0) {\r\n        this.passthru = false;\r\n        this._rotation = 0;\r\n        this.entity = entity;\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n        this.position = new Vec2Callback(() => this.update(), x, y);\r\n        this.scale = new Vec2Callback(() => this.update(), 1, 1, true);\r\n        this.skew = new Vec2Callback(() => this.update(), 0, 0, true);\r\n        this.origin = new Vec2Callback(() => this.updateExtent(), originX, originY);\r\n        this.extent = new Rectangle();\r\n    }\r\n    update() {\r\n        this.updateLocal();\r\n        this.updateWorld();\r\n    }\r\n    updateLocal() {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateLocalTransform(this);\r\n    }\r\n    updateWorld() {\r\n        const entity = this.entity;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n        UpdateWorldTransform(entity);\r\n        if (entity.numChildren) {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n    updateChildren() {\r\n        const children = this.entity.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            child.transform.updateWorld();\r\n        }\r\n    }\r\n    globalToLocal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        const id = 1 / ((a * d) + (c * -b));\r\n        out.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        out.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n        return out;\r\n    }\r\n    localToGlobal(x, y, out = new Vec2()) {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n        out.x = (a * x) + (c * y) + tx;\r\n        out.y = (b * x) + (d * y) + ty;\r\n        return out;\r\n    }\r\n    setExtent(x, y, width, height) {\r\n        this.extent.set(x, y, width, height);\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    updateExtent(width, height) {\r\n        const extent = this.extent;\r\n        const entity = this.entity;\r\n        if (width !== undefined) {\r\n            extent.width = width;\r\n        }\r\n        if (height !== undefined) {\r\n            extent.height = height;\r\n        }\r\n        extent.x = -(this.origin.x) * extent.width;\r\n        extent.y = -(this.origin.y) * extent.height;\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n    set rotation(value) {\r\n        if (value !== this._rotation) {\r\n            this._rotation = value;\r\n            this.update();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    destroy() {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.skew.destroy();\r\n        this.origin.destroy();\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.skew = null;\r\n        this.origin = null;\r\n        this.extent = null;\r\n    }\r\n}\n\nexport { TransformComponent };\n", "import { GameInstance } from '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport './events/AddedToWorldEvent.js';\nimport { DestroyEvent } from './events/DestroyEvent.js';\nimport './events/RemovedFromWorldEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport { DIRTY_CONST } from './DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport { DestroyChildren } from '../display/DestroyChildren.js';\nimport { ReparentChildren } from '../display/ReparentChildren.js';\nimport './components/transform/GetVertices.js';\nimport { BoundsComponent } from './components/bounds/BoundsComponent.js';\nimport { InputComponent } from './components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport './components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport './components/transform/UpdateWorldTransform.js';\nimport { TransformComponent } from './components/transform/TransformComponent.js';\n\nclass GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        this.type = 'GameObject';\r\n        this.name = '';\r\n        this.willUpdate = true;\r\n        this.willUpdateChildren = true;\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = false;\r\n        this.dirty = 0;\r\n        this.dirtyFrame = 0;\r\n        this.visible = true;\r\n        this.children = [];\r\n        this.events = new Map();\r\n        this.transform = new TransformComponent(this, x, y);\r\n        this.bounds = new BoundsComponent(this);\r\n        this.input = new InputComponent(this);\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n        this.transform.update();\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender);\r\n    }\r\n    isDirty(flag) {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n    clearDirty(flag) {\r\n        if (this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n        }\r\n        return this;\r\n    }\r\n    setDirty(flag, flag2) {\r\n        if (!this.isDirty(flag)) {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n        if (!this.isDirty(flag2)) {\r\n            this.dirty ^= flag2;\r\n        }\r\n        return this;\r\n    }\r\n    update(delta, time) {\r\n        if (this.willUpdateChildren) {\r\n            const children = this.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child && child.willUpdate) {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n        this.postUpdate(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n    }\r\n    renderGL(renderer) {\r\n    }\r\n    renderCanvas(renderer) {\r\n    }\r\n    postRenderGL(renderer) {\r\n    }\r\n    postRenderCanvas(renderer) {\r\n    }\r\n    get numChildren() {\r\n        return this.children.length;\r\n    }\r\n    destroy(reparentChildren) {\r\n        if (reparentChildren) {\r\n            ReparentChildren(this, reparentChildren);\r\n        }\r\n        else {\r\n            DestroyChildren(this);\r\n        }\r\n        Emit(this, DestroyEvent, this);\r\n        this.transform.destroy();\r\n        this.bounds.destroy();\r\n        this.input.destroy();\r\n        this.events.clear();\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\n\nexport { GameObject };\n", "const WorldRenderEvent = 'worldrender';\n\nexport { WorldRenderEvent };\n", "const WorldShutdownEvent = 'worldshutdown';\n\nexport { WorldShutdownEvent };\n", "import { WorldRenderEvent } from './world/events/WorldRenderEvent.js';\nimport { WorldShutdownEvent } from './world/events/WorldShutdownEvent.js';\n\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    WorldRenderEvent: WorldRenderEvent,\n    WorldShutdownEvent: WorldShutdownEvent\n});\n\nexport { index as i };\n", "function CalculateTotalRenderable(entry, renderData) {\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n        renderData.dirtyFrame++;\r\n    }\r\n    entry.children.forEach(child => {\r\n        if (child.children.length > 0) {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\n\nexport { CalculateTotalRenderable };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction HasDirtyChildren(parent) {\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE)) {\r\n        return true;\r\n    }\r\n    const stack = [parent];\r\n    while (stack.length > 0) {\r\n        const entry = stack.pop();\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            return true;\r\n        }\r\n        const numChildren = entry.children.length;\r\n        if (numChildren > 0) {\r\n            for (let i = 0; i < numChildren; i++) {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n    stack.length = 0;\r\n    return false;\r\n}\n\nexport { HasDirtyChildren };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\nimport { HasDirtyChildren } from './HasDirtyChildren.js';\n\nfunction UpdateCachedLayers(cachedLayers, dirtyCamera) {\r\n    cachedLayers.forEach(layer => {\r\n        if (dirtyCamera || HasDirtyChildren(layer)) {\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else {\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\n\nexport { UpdateCachedLayers };\n", "function WorldDepthFirstSearch(cachedLayers, parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const node = parent.children[i];\r\n        if (node.isRenderable()) {\r\n            const children = [];\r\n            const entry = { node, children };\r\n            output.push(entry);\r\n            if (node.willRenderChildren && node.numChildren > 0) {\r\n                if (node.willCacheChildren) {\r\n                    cachedLayers.push(entry);\r\n                }\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { WorldDepthFirstSearch };\n", "import '../gameobjects/DIRTY_CONST.js';\nimport { CalculateTotalRenderable } from './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport { UpdateCachedLayers } from './UpdateCachedLayers.js';\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch.js';\n\nfunction BuildRenderList(world) {\r\n    const cachedLayers = [];\r\n    const stack = [];\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n    const renderData = world.renderData;\r\n    if (cachedLayers.length > 0) {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n    entries.forEach(entry => {\r\n        if (entry.children.length) {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame) {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n    renderData.renderList = entries;\r\n    if (world.forceRefresh) {\r\n        renderData.dirtyFrame++;\r\n        world.forceRefresh = false;\r\n    }\r\n}\n\nexport { BuildRenderList };\n", "function MergeRenderData(sceneRenderData, worldRenderData) {\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n    if (worldRenderData.camera.dirtyRender) {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\n\nexport { MergeRenderData };\n", "function ResetWorldRenderData(renderData, gameFrame) {\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n    renderData.renderList.length = 0;\r\n}\n\nexport { ResetWorldRenderData };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport { DestroyEvent } from '../gameobjects/events/DestroyEvent.js';\nimport { PostUpdateEvent } from '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport { UpdateEvent } from '../gameobjects/events/UpdateEvent.js';\nimport { Emit } from '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport { RemoveChildren } from '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport { Off } from '../events/Off.js';\nimport { On } from '../events/On.js';\nimport { Once } from '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport { GameObject } from '../gameobjects/GameObject.js';\nimport { WorldRenderEvent } from './events/WorldRenderEvent.js';\nimport { WorldShutdownEvent } from './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport { BuildRenderList } from './BuildRenderList.js';\nimport { MergeRenderData } from './MergeRenderData.js';\nimport { ResetWorldRenderData } from './ResetWorldRenderData.js';\n\nclass BaseWorld extends GameObject {\r\n    constructor(scene) {\r\n        super();\r\n        this.forceRefresh = false;\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n        this.events = new Map();\r\n        this._updateListener = On(scene, 'update', (delta, time) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n    update(delta, time) {\r\n        if (!this.willUpdate) {\r\n            return;\r\n        }\r\n        Emit(this, UpdateEvent, delta, time, this);\r\n        super.update(delta, time);\r\n    }\r\n    postUpdate(delta, time) {\r\n        Emit(this, PostUpdateEvent, delta, time, this);\r\n    }\r\n    render(sceneRenderData) {\r\n        const renderData = this.renderData;\r\n        ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\r\n        if (!this.willRender || !this.visible) {\r\n            return;\r\n        }\r\n        BuildRenderList(this);\r\n        Emit(this, WorldRenderEvent, renderData, this);\r\n        MergeRenderData(sceneRenderData, renderData);\r\n        if (this.camera) {\r\n            this.camera.dirtyRender = false;\r\n        }\r\n    }\r\n    shutdown() {\r\n        const scene = this.scene;\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n        RemoveChildren(this);\r\n        Emit(this, WorldShutdownEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.reset();\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        Emit(this, DestroyEvent, this);\r\n        ResetWorldRenderData(this.renderData, 0);\r\n        if (this.camera) {\r\n            this.camera.destroy();\r\n        }\r\n        this.events.clear();\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\n\nexport { BaseWorld };\n", "function CreateWorldRenderData(camera) {\r\n    return {\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0,\r\n        renderList: []\r\n    };\r\n}\n\nexport { CreateWorldRenderData };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport { StaticCamera } from '../camera/StaticCamera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport './BuildRenderList.js';\nimport './MergeRenderData.js';\nimport './ResetWorldRenderData.js';\nimport { BaseWorld } from './BaseWorld.js';\nimport { CreateWorldRenderData } from './CreateWorldRenderData.js';\n\nclass StaticWorld extends BaseWorld {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.type = 'StaticWorld';\r\n        this.camera = new StaticCamera();\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\n\nexport { StaticWorld };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport '../math/angle/WrapAngle.js';\nimport { Camera } from '../camera/Camera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nimport './CalculateTotalRenderable.js';\nimport './HasDirtyChildren.js';\nimport './UpdateCachedLayers.js';\nimport './WorldDepthFirstSearch.js';\nimport './BuildRenderList.js';\nimport './MergeRenderData.js';\nimport './ResetWorldRenderData.js';\nimport { BaseWorld } from './BaseWorld.js';\nimport { CreateWorldRenderData } from './CreateWorldRenderData.js';\n\nclass World extends BaseWorld {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.enableCameraCull = true;\r\n        this.type = 'World';\r\n        this.camera = new Camera();\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\n\nexport { World };\n", "import '../GameInstance.js';\nimport '../math/matrix2d/Matrix2D.js';\nimport '../geom/rectangle/Contains.js';\nimport '../geom/rectangle/Rectangle.js';\nimport '../utils/NOOP.js';\nimport '../math/vec2/Vec2Callback.js';\nimport '../math/Wrap.js';\nimport '../math/angle/WrapAngle.js';\nimport '../camera/Camera.js';\nimport '../camera/StaticCamera.js';\nimport '../config/DefaultOrigin.js';\nimport '../display/DepthFirstSearch.js';\nimport '../display/GetChildIndex.js';\nimport '../display/RemoveChildAt.js';\nimport '../display/RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/DestroyEvent.js';\nimport '../gameobjects/events/PostUpdateEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../gameobjects/events/UpdateEvent.js';\nimport '../events/Emit.js';\nimport '../display/SetWorld.js';\nimport '../display/SetParent.js';\nimport '../gameobjects/DIRTY_CONST.js';\nimport '../display/RemoveChildrenBetween.js';\nimport '../display/DestroyChildren.js';\nimport '../display/RemoveChildren.js';\nimport '../display/ReparentChildren.js';\nimport '../events/EventInstance.js';\nimport '../events/Off.js';\nimport '../events/On.js';\nimport '../events/Once.js';\nimport '../gameobjects/components/transform/GetVertices.js';\nimport '../gameobjects/components/bounds/BoundsComponent.js';\nimport '../gameobjects/components/input/InputComponent.js';\nimport '../math/vec2/Vec2.js';\nimport '../gameobjects/components/transform/UpdateLocalTransform.js';\nimport '../math/matrix2d/Copy.js';\nimport '../gameobjects/components/transform/UpdateWorldTransform.js';\nimport '../gameobjects/components/transform/TransformComponent.js';\nimport '../gameobjects/GameObject.js';\nimport './events/WorldRenderEvent.js';\nimport './events/WorldShutdownEvent.js';\nexport { i as Events } from '../index-664c5328.js';\nexport { CalculateTotalRenderable } from './CalculateTotalRenderable.js';\nexport { HasDirtyChildren } from './HasDirtyChildren.js';\nexport { UpdateCachedLayers } from './UpdateCachedLayers.js';\nexport { WorldDepthFirstSearch } from './WorldDepthFirstSearch.js';\nexport { BuildRenderList } from './BuildRenderList.js';\nexport { MergeRenderData } from './MergeRenderData.js';\nexport { ResetWorldRenderData } from './ResetWorldRenderData.js';\nexport { BaseWorld } from './BaseWorld.js';\nexport { CreateWorldRenderData } from './CreateWorldRenderData.js';\nexport { StaticWorld } from './StaticWorld.js';\nexport { World } from './World.js';\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChild(parent, child) {\r\n    parent.children.push(child);\r\n    SetParent(parent, child);\r\n    child.transform.updateWorld();\r\n    return child;\r\n}\n\nexport { AddChild };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChildAt(parent, index, child) {\r\n    const children = parent.children;\r\n    if (index >= 0 && index <= children.length) {\r\n        SetParent(parent, child);\r\n        children.splice(index, 0, child);\r\n        child.transform.updateWorld();\r\n    }\r\n    return child;\r\n}\n\nexport { AddChildAt };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport './SetParent.js';\nimport { AddChild } from './AddChild.js';\n\nfunction AddChildren(parent, ...children) {\r\n    children.forEach(child => {\r\n        AddChild(parent, child);\r\n    });\r\n    return children;\r\n}\n\nexport { AddChildren };\n", "import './DepthFirstSearch.js';\nimport './GetChildIndex.js';\nimport './RemoveChildAt.js';\nimport './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nimport './SetWorld.js';\nimport { SetParent } from './SetParent.js';\n\nfunction AddChildrenAt(parent, index, ...children) {\r\n    const parentChildren = parent.children;\r\n    if (index >= 0 && index <= parentChildren.length) {\r\n        children.reverse().forEach(child => {\r\n            children.splice(index, 0, child);\r\n            SetParent(parent, child);\r\n            child.transform.updateWorld();\r\n        });\r\n    }\r\n    return children;\r\n}\n\nexport { AddChildrenAt };\n", "function AddPosition(x, y, ...children) {\r\n    children.forEach(child => {\r\n        child.x += x;\r\n        child.y += y;\r\n    });\r\n    return children;\r\n}\n\nexport { AddPosition };\n", "function AddRotation(rotation, ...children) {\r\n    children.forEach(child => {\r\n        child.rotation += rotation;\r\n    });\r\n    return children;\r\n}\n\nexport { AddRotation };\n", "function AddScale(scaleX, scaleY, ...children) {\r\n    children.forEach(child => {\r\n        child.scaleX += scaleX;\r\n        child.scaleY += scaleY;\r\n    });\r\n    return children;\r\n}\n\nexport { AddScale };\n", "function AddSkew(skewX, skewY, ...children) {\r\n    children.forEach(child => {\r\n        child.skewX += skewX;\r\n        child.skewY += skewY;\r\n    });\r\n    return children;\r\n}\n\nexport { AddSkew };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction BringChildToTop(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex < parentChildren.length) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.push(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { BringChildToTop };\n", "function DepthFirstSearchRecursiveNested(parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const node = parent.children[i];\r\n        const children = [];\r\n        output.push({ node, children });\r\n        if (node.numChildren > 0) {\r\n            DepthFirstSearchRecursiveNested(node, children);\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { DepthFirstSearchRecursiveNested };\n", "import { DepthFirstSearchRecursiveNested } from './DepthFirstSearchRecursiveNested.js';\n\nfunction GetInfo(entry) {\r\n    const legend = (entry.numChildren > 0) ? 'Parent' : 'Child';\r\n    return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\r\n}\r\nfunction LogChildren(entry) {\r\n    console.group(GetInfo(entry.node));\r\n    entry.children.forEach(child => {\r\n        if (child.children.length > 0) {\r\n            LogChildren(child);\r\n        }\r\n        else {\r\n            console.log(GetInfo(child.node));\r\n        }\r\n    });\r\n    console.groupEnd();\r\n}\r\nfunction ConsoleTreeChildren(parent) {\r\n    const entries = DepthFirstSearchRecursiveNested(parent);\r\n    if (parent.world === parent) {\r\n        console.group('World');\r\n    }\r\n    else {\r\n        console.group(GetInfo(parent));\r\n    }\r\n    entries.forEach(entry => {\r\n        if (entry.children.length) {\r\n            LogChildren(entry);\r\n        }\r\n        else {\r\n            console.log(GetInfo(entry.node));\r\n        }\r\n    });\r\n    console.groupEnd();\r\n}\n\nexport { ConsoleTreeChildren };\n", "function CountMatchingChildren(parent, property, value) {\r\n    const children = parent.children;\r\n    let total = 0;\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            total++;\r\n        }\r\n    });\r\n    return total;\r\n}\n\nexport { CountMatchingChildren };\n", "function DepthFirstSearchRecursive(parent, output = []) {\r\n    for (let i = 0; i < parent.numChildren; i++) {\r\n        const child = parent.children[i];\r\n        output.push(child);\r\n        if (child.numChildren > 0) {\r\n            DepthFirstSearchRecursive(child, output);\r\n        }\r\n    }\r\n    return output;\r\n}\n\nexport { DepthFirstSearchRecursive };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction FindChildByName(parent, searchString) {\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (regex.test(child.name)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { FindChildByName };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction FindChildrenByName(parent, searchString) {\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n    const results = [];\r\n    children.forEach(child => {\r\n        if (regex.test(child.name)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { FindChildrenByName };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction GetAllChildren(parent, property, value) {\r\n    const children = DepthFirstSearch(parent);\r\n    if (!property) {\r\n        return children;\r\n    }\r\n    const results = [];\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { GetAllChildren };\n", "function GetChildAt(parent, index) {\r\n    const children = parent.children;\r\n    if (index < 0 || index > children.length) {\r\n        throw new Error(`Index out of bounds: ${index}`);\r\n    }\r\n    return children[index];\r\n}\n\nexport { GetChildAt };\n", "function GetChildren(parent, property, value) {\r\n    const children = parent.children;\r\n    if (!property) {\r\n        return [...children];\r\n    }\r\n    const results = [];\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            results.push(child);\r\n        }\r\n    });\r\n    return results;\r\n}\n\nexport { GetChildren };\n", "function DistanceBetweenPoints(a, b) {\r\n    const dx = a.x - b.x;\r\n    const dy = a.y - b.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\n\nexport { DistanceBetweenPoints };\n", "import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints.js';\n\nfunction GetClosestChild(parent, point) {\r\n    const children = parent.children;\r\n    let closest = null;\r\n    let distance = 0;\r\n    children.forEach(child => {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n        if (!closest || childDistance < distance) {\r\n            closest = child;\r\n            distance = childDistance;\r\n        }\r\n    });\r\n    return closest;\r\n}\n\nexport { GetClosestChild };\n", "function GetFirstChild(parent, property, value) {\r\n    const children = parent.children;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { GetFirstChild };\n", "import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints.js';\n\nfunction GetFurthestChild(parent, point) {\r\n    const children = parent.children;\r\n    let furthest = null;\r\n    let distance = 0;\r\n    children.forEach(child => {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n        if (!furthest || childDistance > distance) {\r\n            furthest = child;\r\n            distance = childDistance;\r\n        }\r\n    });\r\n    return furthest;\r\n}\n\nexport { GetFurthestChild };\n", "function GetLastChild(parent, property, value) {\r\n    const children = parent.children;\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n        const child = children[i];\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor && (value === undefined || value === descriptor.value)) {\r\n            return child;\r\n        }\r\n    }\r\n}\n\nexport { GetLastChild };\n", "function GetParents(child) {\r\n    const parents = [];\r\n    while (child.parent) {\r\n        parents.push(child.parent);\r\n        child = child.parent;\r\n    }\r\n    return parents;\r\n}\n\nexport { GetParents };\n", "function GetRandomChild(parent, startIndex = 0, length) {\r\n    const children = parent.children;\r\n    if (!length) {\r\n        length = children.length;\r\n    }\r\n    const randomIndex = startIndex + Math.floor(Math.random() * length);\r\n    return children[randomIndex];\r\n}\n\nexport { GetRandomChild };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildDown(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex > 0) {\r\n        const child2 = parentChildren[currentIndex - 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildDown };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildTo(parent, child, index) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex === -1 || index < 0 || index >= parentChildren.length) {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n    if (currentIndex !== index) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.splice(index, 0, child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildTo };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction MoveChildUp(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex > 0) {\r\n        const child2 = parentChildren[currentIndex + 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { MoveChildUp };\n", "function RectangleToRectangle(rectA, rectB) {\r\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0) {\r\n        return false;\r\n    }\r\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\r\n}\n\nexport { RectangleToRectangle };\n", "import { RectangleToRectangle } from '../geom/intersects/RectangleToRectangle.js';\n\nfunction Overlap(source, ...targets) {\r\n    const sourceBounds = source.bounds.get();\r\n    for (let i = 0; i < targets.length; i++) {\r\n        const target = targets[i];\r\n        const targetBounds = target.bounds.get();\r\n        if (RectangleToRectangle(sourceBounds, targetBounds)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\nexport { Overlap };\n", "import { RemoveChildAt } from './RemoveChildAt.js';\n\nfunction RemoveChildrenAt(parent, ...index) {\r\n    const removed = [];\r\n    index.sort((a, b) => a - b);\r\n    index.reverse().forEach(i => {\r\n        const child = RemoveChildAt(parent, i);\r\n        if (child) {\r\n            removed.push(child);\r\n        }\r\n    });\r\n    return removed;\r\n}\n\nexport { RemoveChildrenAt };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction RotateChildrenLeft(parent, total = 1) {\r\n    const parentChildren = parent.children;\r\n    let child = null;\r\n    for (let i = 0; i < total; i++) {\r\n        child = parentChildren.shift();\r\n        parentChildren.push(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { RotateChildrenLeft };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction RotateChildrenRight(parent, total = 1) {\r\n    const parentChildren = parent.children;\r\n    let child = null;\r\n    for (let i = 0; i < total; i++) {\r\n        child = parentChildren.pop();\r\n        parentChildren.unshift(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { RotateChildrenRight };\n", "import { GetChildIndex } from './GetChildIndex.js';\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction SendChildToBack(parent, child) {\r\n    const parentChildren = parent.children;\r\n    const currentIndex = GetChildIndex(parent, child);\r\n    if (currentIndex !== -1 && currentIndex > 0) {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.unshift(child);\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return child;\r\n}\n\nexport { SendChildToBack };\n", "function SetBounds(x, y, width, height, ...children) {\r\n    children.forEach(child => {\r\n        child.bounds.set(x, y, width, height);\r\n    });\r\n    return children;\r\n}\n\nexport { SetBounds };\n", "import { DepthFirstSearch } from './DepthFirstSearch.js';\n\nfunction SetChildrenValue(parent, property, value) {\r\n    const children = DepthFirstSearch(parent);\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor) {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n    return children;\r\n}\n\nexport { SetChildrenValue };\n", "function SetName(name, ...children) {\r\n    children.forEach(child => {\r\n        child.name = name;\r\n    });\r\n    return children;\r\n}\n\nexport { SetName };\n", "function SetOrigin(originX, originY, ...children) {\r\n    children.forEach(child => {\r\n        child.setOrigin(originX, originY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetOrigin };\n", "function SetPosition(x, y, ...children) {\r\n    children.forEach(child => {\r\n        child.setPosition(x, y);\r\n    });\r\n    return children;\r\n}\n\nexport { SetPosition };\n", "function SetRotation(rotation, ...children) {\r\n    children.forEach(child => {\r\n        child.rotation = rotation;\r\n    });\r\n    return children;\r\n}\n\nexport { SetRotation };\n", "function SetScale(scaleX, scaleY, ...children) {\r\n    children.forEach(child => {\r\n        child.setScale(scaleX, scaleY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetScale };\n", "function SetSize(width, height, ...children) {\r\n    children.forEach(child => {\r\n        child.setSize(width, height);\r\n    });\r\n    return children;\r\n}\n\nexport { SetSize };\n", "function SetSkew(skewX, skewY, ...children) {\r\n    children.forEach(child => {\r\n        child.setSkew(skewX, skewY);\r\n    });\r\n    return children;\r\n}\n\nexport { SetSkew };\n", "function SetType(type, ...children) {\r\n    children.forEach(child => {\r\n        child.type = type;\r\n    });\r\n    return children;\r\n}\n\nexport { SetType };\n", "function SetValue(property, value, ...children) {\r\n    children.forEach(child => {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n        if (descriptor) {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n    return children;\r\n}\n\nexport { SetValue };\n", "function SetVisible(visible, ...children) {\r\n    children.forEach(child => {\r\n        child.visible = visible;\r\n    });\r\n    return children;\r\n}\n\nexport { SetVisible };\n", "import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST.js';\n\nfunction ShuffleChildren(parent) {\r\n    const children = parent.children;\r\n    for (let i = children.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = children[i];\r\n        children[i] = children[j];\r\n        children[j] = temp;\r\n        temp.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n    return children;\r\n}\n\nexport { ShuffleChildren };\n", "import { GetChildIndex } from './GetChildIndex.js';\n\nfunction SwapChildren(child1, child2) {\r\n    if (child1.parent === child2.parent) {\r\n        const children = child1.parent.children;\r\n        const index1 = GetChildIndex(child1.parent, child1);\r\n        const index2 = GetChildIndex(child2.parent, child2);\r\n        if (index1 !== index2) {\r\n            children[index1] = child2;\r\n            children[index2] = child1;\r\n        }\r\n    }\r\n}\n\nexport { SwapChildren };\n", "export { DepthFirstSearch } from './DepthFirstSearch.js';\nexport { GetChildIndex } from './GetChildIndex.js';\nexport { RemoveChildAt } from './RemoveChildAt.js';\nexport { RemoveChild } from './RemoveChild.js';\nimport '../gameobjects/events/AddedToWorldEvent.js';\nimport '../gameobjects/events/RemovedFromWorldEvent.js';\nimport '../events/Emit.js';\nexport { SetWorld } from './SetWorld.js';\nexport { SetParent } from './SetParent.js';\nexport { AddChild } from './AddChild.js';\nexport { AddChildAt } from './AddChildAt.js';\nexport { AddChildren } from './AddChildren.js';\nexport { AddChildrenAt } from './AddChildrenAt.js';\nexport { AddPosition } from './AddPosition.js';\nexport { AddRotation } from './AddRotation.js';\nexport { AddScale } from './AddScale.js';\nexport { AddSkew } from './AddSkew.js';\nimport '../gameobjects/DIRTY_CONST.js';\nexport { BringChildToTop } from './BringChildToTop.js';\nexport { DepthFirstSearchRecursiveNested } from './DepthFirstSearchRecursiveNested.js';\nexport { ConsoleTreeChildren } from './ConsoleTreeChildren.js';\nexport { CountMatchingChildren } from './CountMatchingChildren.js';\nexport { DepthFirstSearchRecursive } from './DepthFirstSearchRecursive.js';\nexport { RemoveChildrenBetween } from './RemoveChildrenBetween.js';\nexport { DestroyChildren } from './DestroyChildren.js';\nexport { FindChildByName } from './FindChildByName.js';\nexport { FindChildrenByName } from './FindChildrenByName.js';\nexport { GetAllChildren } from './GetAllChildren.js';\nexport { GetChildAt } from './GetChildAt.js';\nexport { GetChildren } from './GetChildren.js';\nimport '../math/distance/DistanceBetweenPoints.js';\nexport { GetClosestChild } from './GetClosestChild.js';\nexport { GetFirstChild } from './GetFirstChild.js';\nexport { GetFurthestChild } from './GetFurthestChild.js';\nexport { GetLastChild } from './GetLastChild.js';\nexport { GetParents } from './GetParents.js';\nexport { GetRandomChild } from './GetRandomChild.js';\nexport { MoveChildDown } from './MoveChildDown.js';\nexport { MoveChildTo } from './MoveChildTo.js';\nexport { MoveChildUp } from './MoveChildUp.js';\nimport '../geom/intersects/RectangleToRectangle.js';\nexport { Overlap } from './Overlap.js';\nexport { RemoveChildren } from './RemoveChildren.js';\nexport { RemoveChildrenAt } from './RemoveChildrenAt.js';\nexport { ReparentChildren } from './ReparentChildren.js';\nexport { RotateChildrenLeft } from './RotateChildrenLeft.js';\nexport { RotateChildrenRight } from './RotateChildrenRight.js';\nexport { SendChildToBack } from './SendChildToBack.js';\nexport { SetBounds } from './SetBounds.js';\nexport { SetChildrenValue } from './SetChildrenValue.js';\nexport { SetName } from './SetName.js';\nexport { SetOrigin } from './SetOrigin.js';\nexport { SetPosition } from './SetPosition.js';\nexport { SetRotation } from './SetRotation.js';\nexport { SetScale } from './SetScale.js';\nexport { SetSize } from './SetSize.js';\nexport { SetSkew } from './SetSkew.js';\nexport { SetType } from './SetType.js';\nexport { SetValue } from './SetValue.js';\nexport { SetVisible } from './SetVisible.js';\nexport { ShuffleChildren } from './ShuffleChildren.js';\nexport { SwapChildren } from './SwapChildren.js';\n", "class File {\r\n    constructor(key, url, config) {\r\n        this.responseType = 'text';\r\n        this.crossOrigin = undefined;\r\n        this.skipCache = false;\r\n        this.hasLoaded = false;\r\n        this.key = key;\r\n        this.url = url;\r\n        this.config = config;\r\n    }\r\n}\n\nexport { File };\n", "function GetURL(key, url, extension, loader) {\r\n    if (!url) {\r\n        url = key + extension;\r\n    }\r\n    if ((/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/).exec(url)) {\r\n        return url;\r\n    }\r\n    else if (loader) {\r\n        return loader.baseURL + loader.path + url;\r\n    }\r\n    else {\r\n        return url;\r\n    }\r\n}\n\nexport { GetURL };\n", "function ImageTagLoader(file) {\r\n    file.data = new Image();\r\n    if (file.crossOrigin) {\r\n        file.data.crossOrigin = file.crossOrigin;\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        file.data.onload = () => {\r\n            if (file.data.onload) {\r\n                file.data.onload = null;\r\n                file.data.onerror = null;\r\n                resolve(file);\r\n            }\r\n        };\r\n        file.data.onerror = (event) => {\r\n            if (file.data.onload) {\r\n                file.data.onload = null;\r\n                file.data.onerror = null;\r\n                file.error = event;\r\n                reject(file);\r\n            }\r\n        };\r\n        file.data.src = file.url;\r\n        if (file.data.complete && file.data.width && file.data.height) {\r\n            file.data.onload = null;\r\n            file.data.onerror = null;\r\n            resolve(file);\r\n        }\r\n    });\r\n}\n\nexport { ImageTagLoader };\n", "import { TextureManagerInstance } from '../../textures/TextureManagerInstance.js';\nimport { File } from '../File.js';\nimport { GetURL } from '../GetURL.js';\nimport { ImageTagLoader } from '../ImageTagLoader.js';\n\nfunction ImageFile(key, url) {\r\n    const file = new File(key, url);\r\n    file.load = () => {\r\n        file.url = GetURL(file.key, file.url, '.png', file.loader);\r\n        if (file.loader) {\r\n            file.crossOrigin = file.loader.crossOrigin;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const textureManager = TextureManagerInstance.get();\r\n            if (textureManager.has(file.key)) {\r\n                resolve(file);\r\n            }\r\n            else {\r\n                ImageTagLoader(file).then(file => {\r\n                    textureManager.add(file.key, file.data);\r\n                    resolve(file);\r\n                }).catch(file => {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return file;\r\n}\n\nexport { ImageFile };\n", "export enum State {\r\n    IDLE, UPDATING\r\n};\r\n\r\n/**\r\n * Config of constructor.\r\n *\r\n * @export\r\n * @interface IConfig\r\n */\r\nexport interface IConfig {\r\n    /**\r\n     * Key of localStorage to store last time-stamp.\r\n     *\r\n     * @type {string}\r\n     * @memberof IConfig\r\n     */\r\n    key?: string;\r\n\r\n    /**\r\n     * Period of saving last time-stamp.\r\n     *\r\n     * @type {number}\r\n     * @memberof IConfig\r\n     */\r\n    period?: number;\r\n\r\n}\r\n\r\nexport interface IState {\r\n    key?: string;\r\n    period?: number;\r\n\r\n}\r\n\r\nexport interface IAwayTime {\r\n    state: State;\r\n    key: string;\r\n    period: number;\r\n    timer: number;\r\n\r\n    awayTime: number;\r\n}", "import { IAwayTime, IConfig, IState, State } from './IAwayTime';\r\n/**\r\n * Get time from previous closing application to now. \r\n *\r\n * @class AwayTime\r\n */\r\nexport class AwayTime implements IAwayTime {\r\n\r\n    state: State;\r\n    key: string;\r\n    period: number;\r\n    timer: number;\r\n\r\n    /**\r\n     * Creates an instance of AwayTime.\r\n     * @param {IConfig} [{\r\n     *         key = 'away',\r\n     *         period = 1000\r\n     *     }={}]\r\n     * @memberof AwayTime\r\n     */\r\n    constructor({\r\n        key = 'away',\r\n        period = 1000\r\n    }: IConfig = {}) {\r\n\r\n        this.state = State.IDLE;\r\n        this.setKey(key);\r\n        this.setPeriod(period);\r\n    }\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     *\r\n     * @memberof AwayTime\r\n     */\r\n    destroy(): void {\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * Reset state.\r\n     *\r\n     * @param {IState} [{\r\n     *         key = 'away',\r\n     *         period = 1000\r\n     *     }={}]\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    fromJSON({\r\n        key = 'away',\r\n        period = 1000\r\n    }: IState = {}): this {\r\n\r\n        this.state = State.IDLE;\r\n        this.setKey(key);\r\n        this.setPeriod(period);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get state.\r\n     *\r\n     * @returns {IState}\r\n     * @memberof AwayTime\r\n     */\r\n    toJSON(): IState {\r\n        return {\r\n            key: this.key,\r\n            period: this.period\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get time from previous closing application to now, in millisecond.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof AwayTime\r\n     */\r\n    get awayTime(): number {\r\n        let prevTimeData: string | null = localStorage.getItem(this.key);\r\n        this.start();\r\n        if (prevTimeData == null) {\r\n            return 0;\r\n        }\r\n\r\n        let prevTime: number = parseInt(prevTimeData);\r\n        let curTime: number = this.curTime;\r\n        if ((prevTime < 0) || (prevTime > curTime)) {\r\n            return 0;\r\n        }\r\n\r\n        // console.log(new Date(prevTime).toLocaleString());\r\n        // console.log(new Date(curTime).toLocaleString());        \r\n        return curTime - prevTime;\r\n    }\r\n\r\n    /**\r\n     * Get current time-stamp.\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof AwayTime\r\n     */\r\n    get curTime(): number {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * Start task of stroing current time-stamp periodically.\r\n     *\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    start(): this {\r\n\r\n        this.stop();\r\n        this.updateTime();\r\n        this.timer = window.setInterval(this.updateTime.bind(this), this.period);\r\n        this.state = State.UPDATING;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stop task of stroing current time-stamp periodically.\r\n     *\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    stop(): this {\r\n        if (this.state === State.IDLE) {\r\n            return this;\r\n        }\r\n\r\n        clearTimeout(this.timer);\r\n        this.timer = undefined;\r\n        this.state = State.IDLE;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stroing current time-stamp\r\n     *\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    updateTime(): this {\r\n\r\n        localStorage.setItem(this.key, this.curTime.toString());\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set key of localStorage to store last time-stamp.\r\n     *\r\n     * @param {string} key Key of localStorage to store last time-stamp.\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    setKey(key: string): this {\r\n\r\n        this.key = key;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set period of saving last time-stamp.\r\n     *\r\n     * @param {number} time Period of saving last time-stamp.\r\n     * @returns {this}\r\n     * @memberof AwayTime\r\n     */\r\n    setPeriod(time: number): this {\r\n\r\n        this.period = time;\r\n        return this;\r\n    }\r\n}", "import { AwayTime } from './AwayTime';\r\n\r\nexport { AwayTime };", "import { XType, YType, Vec2Type } from '../Types';\r\n\r\nexport function XYToKey(\r\n    x: XType | undefined,\r\n    y: YType | undefined\r\n): string | undefined {\r\n\r\n    return ((x === undefined) || (y === undefined)) ? undefined : `${x}|${y}`;\r\n}\r\n\r\nexport function KeyToXY(\r\n    key: string,\r\n    out?: Vec2Type\r\n): Vec2Type {\r\n\r\n    let xy = key.split('|');\r\n    if (out === undefined) {\r\n        out = globXY;\r\n    }\r\n    out.x = parseInt(xy[0]);\r\n    out.y = parseInt(xy[1]);\r\n    return out;\r\n}\r\n\r\nlet globXY: Vec2Type = { x: 0, y: 0 }", "export class Stack<T> {\r\n    items: T[];\r\n\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop(): T {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l: T): this {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr: T[]): this {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n        this.items.length = 0;\r\n        return this;\r\n    }\r\n}", "import { Stack } from '../struct/Stack';\r\n\r\ntype T = Map<any, any>;\r\nlet globEmptyMapPool = new Stack<T>();\r\n\r\nexport function GetEmptyMap(\r\n\r\n): T {\r\n\r\n    let newMap = globEmptyMapPool.pop();\r\n    if (newMap === null) {\r\n        newMap = new Map();\r\n    }\r\n    return newMap;\r\n}\r\n\r\nexport function FreeEmptyMap(\r\n    map: T\r\n): void {\r\n\r\n    globEmptyMapPool.push(map);\r\n}\r\n\r\nexport function FreeEmptyMaps(\r\n    maps: T[]\r\n): void {\r\n\r\n    globEmptyMapPool.pushMultiple(maps);\r\n}", "import { XType, YType, ZType, IChess, ZMapType } from '../../../Types';\r\nimport { XYToKey } from '../../../utils/StringKey';\r\nimport { FreeEmptyMap, GetEmptyMap } from '../../../../utils/pool/EmptyMap';\r\n\r\nexport function AddChessToZMap(\r\n    chess: IChess,\r\n    chessMap: Map<string, ZMapType>,\r\n    prevX: XType | undefined,\r\n    prevY: YType | undefined,\r\n    prevZ: ZType | undefined,\r\n    currX: XType | undefined,\r\n    currY: YType | undefined,\r\n    currZ: ZType | undefined\r\n) {\r\n    if ((prevX === currX) && (prevY === currY) && (prevZ === currZ)) {\r\n        return;\r\n    }\r\n    let prevKey = XYToKey(prevX, prevY);\r\n    let currKey = XYToKey(currX, currY);\r\n    if (prevKey) {\r\n        let zMap = chessMap.get(prevKey);\r\n        zMap.delete(prevZ);\r\n        if (prevKey === currKey) {\r\n            zMap.set(currZ, chess);\r\n            return;\r\n        } else if (zMap.size === 0) {\r\n            FreeEmptyMap(zMap); // Add to EmptyMap pool\r\n            chessMap.delete(prevKey);\r\n        }\r\n    }\r\n    if (currKey) {\r\n        let zMap = chessMap.get(currKey);\r\n        if (zMap) {\r\n            zMap.set(currZ, chess);\r\n        } else {\r\n            zMap = GetEmptyMap(); // Request an empty map\r\n            zMap.set(currZ, chess);\r\n            chessMap.set(currKey, zMap);\r\n        }\r\n    }\r\n}\r\n\r\nexport function RemoveChessFromZMap(\r\n    chessMap: Map<string, ZMapType>,\r\n    x: XType,\r\n    y: YType,\r\n    z?: ZType\r\n) {\r\n    let key = XYToKey(x, y);\r\n    let zMap = chessMap.get(key);\r\n    if (zMap) {\r\n        if (z !== undefined) {\r\n            zMap.delete(z);\r\n            if (zMap.size === 0) {\r\n                FreeEmptyMap(zMap); // Add to EmptyMap pool\r\n                chessMap.delete(key);\r\n            }\r\n        } else {\r\n            zMap.clear();\r\n            FreeEmptyMap(zMap); // Add to EmptyMap pool\r\n            chessMap.delete(key);\r\n        }\r\n    }\r\n}", "import { Stack } from '../struct/Stack';\r\n\r\ntype T = Set<any>;\r\nlet globEmptySetPool = new Stack<T>();\r\n\r\nexport function GetEmptySet(\r\n\r\n): T {\r\n\r\n    let newSet = globEmptySetPool.pop();\r\n    if (newSet === null) {\r\n        newSet = new Set();\r\n    }\r\n    return newSet;\r\n}\r\n\r\nexport function FreeEmptySet(\r\n    set: T\r\n): void {\r\n\r\n    globEmptySetPool.push(set);\r\n}\r\n\r\nexport function FreeEmptySets(\r\n    sets: T[]\r\n): void {\r\n\r\n    globEmptySetPool.pushMultiple(sets);\r\n}", "import { IChess, AnyKeyType, ChessSetType } from '../../../Types';\r\nimport { FreeEmptySet, GetEmptySet } from '../../../../utils/pool/EmptySet';\r\n\r\nexport function AddChessToSet(\r\n    chess: IChess,\r\n    chessMap: Map<AnyKeyType, ChessSetType>,\r\n    prevKey: AnyKeyType | undefined,\r\n    currKey: AnyKeyType | undefined\r\n): void {\r\n    if (prevKey === currKey) {\r\n        return;\r\n    }\r\n\r\n    if (prevKey !== undefined) {\r\n        let chessSet = chessMap.get(prevKey);\r\n        if (chessSet) {\r\n            chessSet.delete(chess);\r\n            if (chessSet.size === 0) {\r\n                FreeEmptySet(chessSet); // Add to EmptySet pool\r\n                chessMap.delete(prevKey);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (currKey !== undefined) {\r\n        let chessSet = chessMap.get(currKey);\r\n        if (chessSet) {\r\n            chessSet.add(chess);\r\n        } else {\r\n            chessSet = GetEmptySet(); // Request an empty set\r\n            chessSet.add(chess);\r\n            chessMap.set(currKey, chessSet);\r\n        }\r\n    }\r\n}\r\n\r\nexport function RemoveChessFromSet(\r\n    chessMap: Map<AnyKeyType, ChessSetType>,\r\n    key: AnyKeyType,\r\n    chess: IChess\r\n): void {\r\n\r\n    let chessSet = chessMap.get(key);\r\n    if (chessSet) {\r\n        chessSet.delete(chess);\r\n        if (chessSet.size === 0) {\r\n            FreeEmptySet(chessSet); // Add to EmptySet pool\r\n            chessMap.delete(key);\r\n        }\r\n    }\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { XType, YType, ZType, IChess } from '../../../Types';\r\nimport { AddChessToZMap } from './ZMap';\r\nimport { AddChessToSet } from './ChessSet';\r\n\r\nexport function AddChess(\r\n    boardData: IBoardData,\r\n    chess: IChess,\r\n    x: XType,\r\n    y: YType,\r\n    z: ZType\r\n): void {\r\n\r\n    let prevXYZ = boardData.chessToXYZ.get(chess);\r\n    let prevX = (prevXYZ) ? prevXYZ.x : undefined;\r\n    let prevY = (prevXYZ) ? prevXYZ.y : undefined;\r\n    let prevZ = (prevXYZ) ? prevXYZ.y : undefined;\r\n\r\n    if (prevXYZ) {\r\n        prevXYZ.x = x;\r\n        prevXYZ.y = y;\r\n        prevXYZ.z = z;\r\n    } else {\r\n        boardData.chessToXYZ.set(chess, { x: x, y: y, z: z });\r\n    }\r\n    AddChessToZMap(chess, boardData.XYToZMap, prevX, prevY, prevZ, x, y, z);\r\n    AddChessToSet(chess, boardData.XToChessSet, prevX, x);\r\n    AddChessToSet(chess, boardData.YToChessSet, prevY, y);\r\n    AddChessToSet(chess, boardData.ZToChessSet, prevZ, z);\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { XType, YType, ZType, IChess, ZMapType } from '../../../Types';\r\nimport { XYToKey } from '../../../utils/StringKey';\r\n\r\nexport function GetChess(\r\n    boardData: IBoardData,\r\n    x: XType,\r\n    y: YType,\r\n    z?: ZType\r\n): IChess | ZMapType | null {\r\n    let zMap = boardData.XYToZMap.get(XYToKey(x, y));\r\n    if (zMap === undefined) {\r\n        return null;\r\n    }\r\n\r\n    if (z !== undefined) {\r\n        return (zMap.has(z)) ? zMap.get(z) : null;\r\n    } else {\r\n        return zMap;\r\n    }\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { XType, YType, ZType, IChess, ZMapType } from '../../../Types';\r\nimport { GetChess } from './GetChess';\r\nimport { RemoveChessFromZMap } from './ZMap';\r\nimport { RemoveChessFromSet } from './ChessSet';\r\n\r\nexport function RemoveChess(\r\n    boardData: IBoardData,\r\n    x: XType,\r\n    y: YType,\r\n    z?: ZType\r\n): void {\r\n\r\n    if (z !== undefined) {\r\n        let chess = GetChess(boardData, x, y, z) as IChess;\r\n        if (chess === undefined) {\r\n            return;\r\n        }\r\n\r\n        boardData.chessToXYZ.delete(chess);\r\n        RemoveChessFromZMap(boardData.XYToZMap, x, y, z);\r\n        RemoveChessFromSet(boardData.XToChessSet, x, chess);\r\n        RemoveChessFromSet(boardData.YToChessSet, y, chess);\r\n        RemoveChessFromSet(boardData.ZToChessSet, z, chess);\r\n\r\n    } else {\r\n\r\n        let zMap = GetChess(boardData, x, y) as ZMapType;\r\n        if (zMap) {\r\n            for (const [z, chess] of zMap) {\r\n                boardData.chessToXYZ.delete(chess);\r\n                // RemoveChessFromZMap(boardData.XYToZMap, x, y, z);\r\n                RemoveChessFromSet(boardData.XToChessSet, x, chess);\r\n                RemoveChessFromSet(boardData.YToChessSet, y, chess);\r\n                RemoveChessFromSet(boardData.ZToChessSet, z, chess);\r\n\r\n            }\r\n\r\n            RemoveChessFromZMap(boardData.XYToZMap, x, y);\r\n\r\n        }\r\n    }\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { IChess } from '../../../Types';\r\n\r\nexport function HasChess(\r\n    boardData: IBoardData,\r\n    chess: IChess\r\n): boolean {\r\n\r\n    return boardData.chessToXYZ.has(chess);\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { XType, YType, ZType } from '../../../Types';\r\nimport { GetChess } from './GetChess';\r\n\r\nexport function Contains(\r\n    boardData: IBoardData,\r\n    x: XType,\r\n    y: YType,\r\n    z: ZType\r\n): boolean {\r\n\r\n    return (GetChess(boardData, x, y, z) !== null);\r\n}", "import { IBoardData } from '../IBoardData';\r\nimport { IChess, XYZType } from '../../../Types';\r\n\r\nexport function GetXYZ(\r\n    boardData: IBoardData,\r\n    chess: IChess\r\n): XYZType | null {\r\n\r\n    return boardData.chessToXYZ.get(chess) || null;\r\n}", "export function GetMaxMapKey(map: Map<number, any>) {\r\n    let result = -Infinity;\r\n    for (const [key, item] of map) {\r\n        if (result < key) {\r\n            result = key;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function GetMinMapKey(map: Map<number, any>) {\r\n    let result = Infinity;\r\n    for (const [key, item] of map) {\r\n        if (result > key) {\r\n            result = key;\r\n        }\r\n    }\r\n    return result;\r\n}", "import { IBoardData } from './IBoardData';\r\nimport { XType, YType, ZType, XYZType, IChess, ZMapType, ChessSetType } from '../../Types';\r\nimport { AddChess } from './methods/AddChess';\r\nimport { GetChess } from './methods/GetChess';\r\nimport { RemoveChess } from './methods/RemoveChess';\r\nimport { HasChess } from './methods/HasChess';\r\nimport { Contains } from './methods/Contains';\r\nimport { GetXYZ } from './methods/GetXYZ';\r\nimport { GetMaxMapKey, GetMinMapKey } from './methods/GetMaxMinMapKey';\r\n\r\nexport class BoardData implements IBoardData {\r\n    chessToXYZ: Map<IChess, XYZType>; // {chess: {x,y,z}}\r\n    XYToZMap: Map<string, Map<ZType, IChess>>; // {'x|y': {z:chess}}\r\n    XToChessSet: Map<XType, ChessSetType>; // {x, [chess]}\r\n    YToChessSet: Map<YType, ChessSetType>; // {y, [chess]}\r\n    ZToChessSet: Map<ZType, ChessSetType>; // {z, [chess]}\r\n\r\n    _xMax: number | undefined;\r\n    _xMin: number | undefined;\r\n    _yMax: number | undefined;\r\n    _yMin: number | undefined;\r\n\r\n    constructor() {\r\n        this.chessToXYZ = new Map();\r\n        this.XYToZMap = new Map();\r\n        this.XToChessSet = new Map();\r\n        this.YToChessSet = new Map();\r\n        this.ZToChessSet = new Map();\r\n\r\n        this._xMax = undefined;\r\n        this._xMin = undefined;\r\n        this._yMax = undefined;\r\n        this._yMin = undefined;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): this {\r\n        this.chessToXYZ.clear();\r\n        this.XYToZMap.clear();\r\n        this.XToChessSet.clear();\r\n        this.YToChessSet.clear();\r\n        this.ZToChessSet.clear();\r\n        this.clearBounds();\r\n        return this;\r\n    }\r\n\r\n    clearBounds(): this {\r\n        this._xMax = undefined;\r\n        this._xMin = undefined;\r\n        this._yMax = undefined;\r\n        this._yMin = undefined;\r\n        return this;\r\n    }\r\n\r\n    addChess(\r\n        chess: IChess,\r\n        x: XType,\r\n        y: YType,\r\n        z: ZType\r\n    ): this {\r\n\r\n        AddChess(this, chess, x, y, z);\r\n        this.clearBounds();\r\n        return this;\r\n    }\r\n\r\n    getChess(\r\n        x: XType,\r\n        y: YType,\r\n        z?: ZType\r\n    ): IChess | ZMapType | null {\r\n\r\n        return GetChess(this, x, y, z);\r\n    }\r\n\r\n    removeChess(\r\n        x: XType,\r\n        y: YType,\r\n        z?: ZType\r\n    ): this {\r\n\r\n        RemoveChess(this, x, y, z);\r\n        this.clearBounds();\r\n        return this;\r\n    }\r\n\r\n    hasChess(\r\n        chess: IChess\r\n    ): boolean {\r\n\r\n        return HasChess(this, chess);\r\n    }\r\n\r\n    contains(\r\n        x: XType,\r\n        y: YType,\r\n        z?: ZType\r\n    ): boolean {\r\n\r\n        return Contains(this, x, y, z);\r\n    }\r\n\r\n    getXYZ(\r\n        chess: IChess\r\n    ): XYZType | null {\r\n\r\n        return GetXYZ(this, chess);\r\n    }\r\n\r\n    get xMax() {\r\n        if (this._xMax === undefined) {\r\n            this._xMax = GetMaxMapKey(this.XToChessSet);\r\n        }\r\n        return this._xMax;\r\n    }\r\n\r\n    get xMin() {\r\n        if (this._xMin === undefined) {\r\n            this._xMin = GetMinMapKey(this.XToChessSet);\r\n        }\r\n        return this._xMin;\r\n    }\r\n\r\n    get yMax() {\r\n        if (this._yMax === undefined) {\r\n            this._yMax = GetMaxMapKey(this.YToChessSet);\r\n        }\r\n        return this._yMax;\r\n    }\r\n\r\n    get yMin() {\r\n        if (this._yMin === undefined) {\r\n            this._yMin = GetMinMapKey(this.YToChessSet);\r\n        }\r\n        return this._yMin;\r\n    }\r\n}\r\n\r\n\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess } from '../../Types';\r\n\r\n\r\nexport function GetAllChess(\r\n    board: IBaseBoard,\r\n    out: IChess[] = []\r\n): IChess[] {\r\n\r\n    let chessToXYZ = board.boardData.chessToXYZ;\r\n    for (const [chess, xyz] of chessToXYZ) {\r\n        out.push(chess);\r\n    }\r\n    return out;\r\n};", "export function IsPlainObject(\r\n    obj: any\r\n): boolean {\r\n\r\n    // Not plain objects:\r\n    // - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n    // - DOM nodes\r\n    // - window\r\n    if (typeof (obj) !== 'object' || obj.nodeType || obj === obj.window) {\r\n        return false;\r\n    }\r\n\r\n    // Support: Firefox <20\r\n    // The try/catch suppresses exceptions thrown when attempting to access\r\n    // the \"constructor\" property of certain host objects, ie. |window.location|\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=814622\r\n    try {\r\n        if (obj.constructor && !({}).hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n\r\n    // If the function hasn't returned already, we're confident that\r\n    // |obj| is a plain object, created by {} or constructed with new Object\r\n    return true;\r\n};\r\n", "import { IsPlainObject } from '../../utils/object/IsPlainObject';\r\n\r\nexport function IsTileXYZ(obj: any): boolean {\r\n    if (IsPlainObject(obj)) {\r\n        return true;\r\n    } else if (typeof (obj) === 'object') {\r\n        return obj.isTileXYZ;\r\n    } else {\r\n        return false;\r\n    }\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYZType, XYType } from '../../Types';\r\nimport { IsTileXYZ } from '../../utils/IsTileXYZ';\r\n\r\nexport function ChessToTileXYZ(\r\n    board: IBaseBoard,\r\n    chess: IChess | XYZType | XYType\r\n): XYType | null {\r\n\r\n    let xyz: XYZType | undefined = board.boardData.getXYZ(chess);\r\n    if (xyz) {\r\n        return xyz;\r\n    } else if (IsTileXYZ(chess)) { // {x, y}, or {x, y, z}\r\n        return chess as XYType;\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, ZType, IChess } from '../../Types';\r\n\r\nexport function TileXYZToChess(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    tileZ: ZType\r\n): IChess | null {\r\n\r\n    return board.boardData.getChess(tileX, tileY, tileZ) as IChess;\r\n}", "import { XYZType } from '../../Types';\r\nimport { IBaseBoard } from '../IBaseBoard';\r\nimport {\r\n    IChessData,\r\n    BlockerType, EdgeBlockerType\r\n} from './IChessData';\r\n\r\nexport class ChessData implements IChessData {\r\n    parent: any;\r\n    board: IBaseBoard | null;\r\n    blocker: BlockerType | EdgeBlockerType;\r\n\r\n    constructor(parent: any) {\r\n        this.parent = parent;\r\n        this.board = null;\r\n        this.blocker = false;\r\n        this.boot();\r\n    }\r\n\r\n    boot() {\r\n        if ((typeof (this.parent) === 'object') && this.parent.on) {\r\n            this.parent.on('destroy', this.destroy, this);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.board) {\r\n            let tileXYZ = this.tileXYZ;\r\n            this.board.boardData.removeChess(tileXYZ.x, tileXYZ.y, tileXYZ.z);\r\n        }\r\n\r\n        this.parent = undefined;\r\n        this.board = null;\r\n    }\r\n\r\n    setBoard(board: IBaseBoard | null): this {\r\n\r\n        this.board = board;\r\n        return this;\r\n    }\r\n\r\n    get tileXYZ(): XYZType | null {\r\n        if (this.board == null) {\r\n            return null;\r\n        }\r\n        return this.board.boardData.getXYZ(this.parent);\r\n    }\r\n\r\n    setBlocker(value: boolean = true): this {\r\n\r\n        this.blocker = value;\r\n        return this;\r\n    }\r\n\r\n    setBlockEdge(\r\n        direction: number | object,\r\n        value: boolean = true\r\n    ): this {\r\n\r\n        if (typeof (this.blocker) === 'boolean') {\r\n            this.blocker = {};\r\n        }\r\n\r\n        let blocker = this.blocker;\r\n        if (typeof (direction) === 'object') {\r\n            let blockEdges = direction;\r\n            for (let dir in blockEdges) {\r\n                blocker[dir] = blockEdges[dir];\r\n            }\r\n        } else {\r\n            blocker[direction] = value;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getBlockEdge(direction: number): boolean {\r\n\r\n        if (typeof (this.blocker) === 'boolean') {\r\n            return false;\r\n        }\r\n\r\n        if (!this.blocker.hasOwnProperty(direction)) {\r\n            return false;\r\n        } else {\r\n            return this.blocker[direction];\r\n        }\r\n    }\r\n}", "import { IChessData } from './IChessData';\r\nimport { ChessData } from './ChessData';\r\nimport { IChess } from '../../Types';\r\n\r\nexport function GetChessData(\r\n    chess: IChess\r\n): IChessData {\r\n\r\n    if (!chess.hasOwnProperty('rexChess')) {\r\n        chess.rexChess = new ChessData(chess);\r\n    }\r\n    return chess.rexChess;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XType, YType, ZType, XYZType } from '../../Types';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { GetChessData } from '../chessdata/GetChessData';\r\n\r\n\r\nexport function RemoveChess(\r\n    board: IBaseBoard,\r\n    chess: IChess | null | undefined,\r\n    tileX?: XType,\r\n    tileY?: YType,\r\n    tileZ?: ZType,\r\n    destroy: boolean = false,\r\n    fromBoardRemove: boolean = false\r\n) {\r\n\r\n    if (chess) {\r\n        let tileXYZ = ChessToTileXYZ(board, chess) as XYZType;\r\n        if (tileXYZ) {\r\n            tileX = tileXYZ.x;\r\n            tileY = tileXYZ.y;\r\n            tileZ = tileXYZ.z;\r\n        } else {\r\n            // chess is not in this board\r\n            return;\r\n        }\r\n    } else {\r\n        chess = TileXYZToChess(board, tileX, tileY, tileZ);\r\n        if (!chess) {\r\n            // chess is not in this board\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (!fromBoardRemove) {\r\n        board.boardData.removeChess(tileX, tileY, tileZ);\r\n    }\r\n    if (board._isBoard) {\r\n        GetChessData(chess).setBoard(null);\r\n    }\r\n\r\n    if (destroy && chess.destroy) {\r\n        chess.destroy();\r\n    }\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { GetAllChess } from '../chess/GetAllChess';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { RemoveChess } from '../chess/RemoveChess';\r\n\r\nexport function SetBoardHeight(\r\n    board: IBaseBoard,\r\n    height: number\r\n): void {\r\n\r\n    if (board.infinityMode) {\r\n        return;\r\n    }\r\n    if ((board.height === undefined) || (board.height <= height)) {\r\n        board.height = height;\r\n        return;\r\n    }\r\n\r\n    // this.height > height : collapse\r\n    let chessArray = GetAllChess(board);\r\n    chessArray.forEach((chess) => {\r\n        let tileXYZ = ChessToTileXYZ(board, chess);\r\n        if (tileXYZ.y > height) {\r\n            RemoveChess(board, chess);\r\n        }\r\n    })\r\n\r\n    board.height = height;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { GetAllChess } from '../chess/GetAllChess';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { RemoveChess } from '../chess/RemoveChess';\r\n\r\nexport function SetBoardWidth(\r\n    board: IBaseBoard,\r\n    width: number\r\n): void {\r\n\r\n    if (board.infinityMode) {\r\n        return;\r\n    }\r\n    if ((board.width === undefined) || (board.width <= width)) {\r\n        board.width = width;\r\n        return;\r\n    }\r\n\r\n    // this.width > width : collapse\r\n    let chessArray = GetAllChess(board);\r\n    chessArray.forEach((chess) => {\r\n        let tileXYZ = ChessToTileXYZ(board, chess);\r\n        if (tileXYZ.x > width) {\r\n            RemoveChess(board, chess);\r\n        }\r\n    })\r\n\r\n    board.width = width;\r\n}", "import { BoardData } from './BoardData';\r\nimport { SetBoardHeight } from './SetBoardHeight';\r\nimport { SetBoardWidth } from './SetBoardWidth';\r\n\r\nexport {\r\n    BoardData,\r\n    SetBoardHeight,\r\n    SetBoardWidth\r\n}", "import { IBaseBoard, IConfig } from './IBaseBoard';\r\nimport { IGrid } from '../grid/IGrid';\r\nimport { IBoardData } from './boarddata/IBoardData';\r\nimport { BoardData, SetBoardWidth, SetBoardHeight } from './boarddata';\r\n\r\nexport class BaseBoard implements IBaseBoard {\r\n\r\n    grid: IGrid;\r\n    wrapMode: boolean;\r\n    infinityMode: boolean;\r\n    width: number | undefined;\r\n    height: number | undefined;\r\n    boardData: IBoardData;\r\n    _isBoard: boolean;\r\n\r\n    constructor({\r\n        grid = undefined,\r\n        wrap = false,\r\n        inifinity = false,\r\n        width = 0,\r\n        height = 0\r\n    }: IConfig = {}) {\r\n\r\n        this.boardData = new BoardData();\r\n        this._isBoard = true;\r\n        this.setGrid(grid);\r\n        this.setWrapMode(wrap);\r\n        this.setInfinityMode(inifinity);\r\n        this.setBoardSize(width, height);\r\n    }\r\n\r\n    destroy() {\r\n\r\n    }\r\n\r\n    setGrid(grid?: IGrid): this {\r\n\r\n        this.grid = grid;\r\n        return this;\r\n    }\r\n\r\n    setWrapMode(mode: boolean = true): this {\r\n\r\n        this.wrapMode = mode;\r\n        return this;\r\n    }\r\n\r\n    setInfinityMode(mode: boolean = true): this {\r\n\r\n        this.infinityMode = mode;\r\n        return this;\r\n    }\r\n\r\n    setBoardSize(width: number = 0, height: number = 0): this {\r\n\r\n        SetBoardWidth(this, width);\r\n        SetBoardHeight(this, height);\r\n        return this;\r\n    }\r\n\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, ZType } from '../../Types';\r\n\r\nexport function Contains(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    tileZ?: ZType\r\n): boolean {\r\n\r\n    let result: boolean;\r\n    if (board.infinityMode) {\r\n        result = true;\r\n    } else {\r\n        result = (tileX >= 0) && (tileX < board.width) &&\r\n            (tileY >= 0) && (tileY < board.height);\r\n    }\r\n    if (result && (tileZ !== undefined)) {\r\n        result = board.boardData.contains(tileX, tileY, tileZ);\r\n    }\r\n    return result;\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, Vec2Type } from '../../Types';\r\n\r\nexport function TileXYToWorldXY(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    out?: Vec2Type | true\r\n): Vec2Type {\r\n\r\n    return board.grid.getWorldXY(tileX, tileY, out);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XType, YType, XYZType } from '../../Types';\r\nimport { GetAllChess } from '../chess/GetAllChess';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { TileXYToWorldXY } from './TileXYToWorldXY';\r\n\r\nexport function GridAlign(\r\n    board: IBaseBoard,\r\n    chess?: IChess,\r\n    tileX?: XType,\r\n    tileY?: YType\r\n): void {\r\n\r\n    if (chess === undefined) {\r\n        let chessArray = GetAllChess(board);\r\n        for (let i = 0, cnt = chessArray.length; i < cnt; i++) {\r\n            let chess = chessArray[i];\r\n            let tileXYZ = ChessToTileXYZ(board, chess) as XYZType;\r\n\r\n            TileXYToWorldXY(board, tileXYZ.x, tileXYZ.y, chess);\r\n        }\r\n    } else {\r\n        if (tileX === undefined) {\r\n            let tileXYZ = ChessToTileXYZ(board, chess) as XYZType;\r\n            tileX = tileXYZ.x;\r\n            tileY = tileXYZ.y;\r\n        }\r\n\r\n        TileXYToWorldXY(board, tileX, tileY, chess);\r\n    }\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XType, YType, ZType, XYZType } from '../../Types';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { Contains } from '../tilexy/Contains';\r\nimport { GetChessData } from '../chessdata/GetChessData';\r\nimport { GridAlign } from '../worldxy/GridAlign';\r\nimport { RemoveChess } from './RemoveChess'\r\n\r\nexport function AddChess(\r\n    board: IBaseBoard,\r\n    chess: IChess,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    tileZ?: ZType,\r\n    align: boolean = true\r\n) {\r\n\r\n    if (!Contains(board, tileX, tileY)) {\r\n        return;\r\n    }\r\n\r\n    let curTileXYZ = ChessToTileXYZ(board, chess) as XYZType;\r\n    if (tileZ === undefined) {\r\n        if (curTileXYZ) {\r\n            tileZ = curTileXYZ.z;\r\n        } else {\r\n            tileZ = 0;\r\n        }\r\n    }\r\n\r\n    if (curTileXYZ &&\r\n        (curTileXYZ.x === tileX) && (curTileXYZ.y === tileY) && (curTileXYZ.z === tileZ)) {\r\n        // Move to current position\r\n        return;\r\n    }\r\n\r\n    let occupiedChess = TileXYZToChess(board, tileX, tileY, tileZ);\r\n    if (occupiedChess) {\r\n        // board.emit('kickout', occupiedChess, chess, curTileXYZ);\r\n        RemoveChess(board, null, tileX, tileY, tileZ); // Clear up (tileX, tileY, tileZ)\r\n    }\r\n\r\n    board.boardData.addChess(chess, tileX, tileY, tileZ);\r\n\r\n    if (board._isBoard) {\r\n        GetChessData(chess).setBoard(board);\r\n    }\r\n\r\n    if (align) {\r\n        GridAlign(board, chess, tileX, tileY);\r\n    }\r\n};", "export function Between(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number\r\n): number {\r\n\r\n    return Math.atan2(y2 - y1, x2 - x1);\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { TileXYToWorldXY } from './TileXYToWorldXY';\r\nimport { Between as GetAngle } from '../../../utils/math/angle/Between';\r\n\r\nexport function AngleBetween(\r\n    board: IBaseBoard,\r\n    chessA: IChess | XYType,\r\n    chessB: IChess | XYType\r\n): number {\r\n\r\n    let tileA = ChessToTileXYZ(board, chessA);\r\n    let tileB = ChessToTileXYZ(board, chessB);\r\n    let out = TileXYToWorldXY(board, tileA.x, tileA.y, true);\r\n    let x0 = out.x;\r\n    let y0 = out.y;\r\n    out = TileXYToWorldXY(board, tileB.x, tileB.y, true);\r\n    let x1 = out.x;\r\n    let y1 = out.y;\r\n    return GetAngle(x0, y0, x1, y1); // -PI~PI\r\n}", "export function Wrap(\r\n    value: number,\r\n    min: number,\r\n    max: number\r\n): number {\r\n\r\n    let range = max - min;\r\n    return (min + ((((value - min) % range) + range) % range));\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, XYType } from '../../Types';\r\nimport { Wrap } from '../../../utils/math/Wrap';\r\n\r\nexport function GetWrapTileXY(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    if (board.wrapMode) {\r\n        tileX = Wrap(tileX, 0, board.width);\r\n    } else if ((!board.infinityMode) &&\r\n        ((tileX < 0) || (tileX >= board.width))) {\r\n        tileX = null;\r\n    }\r\n    if (board.wrapMode) {\r\n        tileY = Wrap(tileY, 0, board.height);\r\n    } else if ((!board.infinityMode) &&\r\n        ((tileY < 0) || (tileY >= board.height))) {\r\n        tileY = null;\r\n    }\r\n    out.x = tileX;\r\n    out.y = tileY;\r\n    return out;\r\n}\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from './ChessToTileXYZ';\r\nimport { GetWrapTileXY } from './GetWrapTileXY';\r\n\r\nexport type DistanceConfig = {\r\n    end?: number,\r\n    start?: number,\r\n    step?: number\r\n};\r\n\r\nexport function GetTileXYAtDirection(\r\n    board: IBaseBoard,\r\n    chess: IChess | XYType,\r\n    directions: number | number[] | string | null,\r\n    distance: number | number[] | DistanceConfig,\r\n    out?: XYType | XYType[] | true\r\n): XYType | XYType[] | null {\r\n\r\n    let srcTileXY = ChessToTileXYZ(board, chess);\r\n    if (srcTileXY === null) {\r\n        return null;\r\n    }\r\n\r\n    if (typeof (directions) === 'string') {\r\n        if (directions.indexOf(',') === -1) {\r\n            directions = parseInt(directions);\r\n        } else {\r\n            directions = directions.split('.').map((dir) => parseInt(dir, 10))\r\n        }\r\n    }\r\n\r\n    let isNumberDirection = (typeof (directions) === 'number');\r\n    let isNumberDistance = (typeof (distance) === 'number');\r\n    if (isNumberDirection && isNumberDistance) {\r\n        // Directions is a number, distance is a number, return a singl tileXY\r\n        let result = board.grid.getTileXYAtDirection(\r\n            srcTileXY,\r\n            directions as number,\r\n            distance as number,\r\n            out as XYType | true\r\n        ) as XYType;\r\n        GetWrapTileXY(board, result.x, result.y, result);\r\n        if ((result.x === null) || (result.y === null)) {\r\n            result = null;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    if (!Array.isArray(out)) {\r\n        out = [];\r\n    }\r\n    if (directions === null) {\r\n        directions = board.grid.allDirections;\r\n    }\r\n\r\n    let resultTileXY: XYType;\r\n    if (isNumberDirection) {\r\n        // Directions is a number, distance is an object or array\r\n        if (Array.isArray(distance)) { // Distance is an array\r\n            for (let i = 0, cnt = distance.length; i < cnt; i++) {\r\n                resultTileXY = GetTileXYAtDirection(board, srcTileXY, directions, distance[i]) as XYType;\r\n                if (resultTileXY !== null) {\r\n                    out.push(resultTileXY);\r\n                }\r\n            }\r\n        } else {\r\n            let end: number,\r\n                start: number,\r\n                step: number;\r\n            ({\r\n                end = 1,\r\n                start = ((end > 0) ? 1 : -1),\r\n                step = ((end >= start) ? 1 : -1)\r\n            } = distance as DistanceConfig);\r\n\r\n            if (start === end) {\r\n                resultTileXY = GetTileXYAtDirection(board, srcTileXY, directions, end) as XYType; // Return a single tileXY\r\n                if (resultTileXY !== null) {\r\n                    out.push(resultTileXY);\r\n                }\r\n            } else if (start < end) {\r\n                for (let i = start; i <= end; i += step) {\r\n                    resultTileXY = GetTileXYAtDirection(board, srcTileXY, directions, i) as XYType; // return a single tileXY\r\n                    if (resultTileXY !== null) {\r\n                        out.push(resultTileXY);\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = start; i >= end; i += step) {\r\n                    resultTileXY = GetTileXYAtDirection(board, srcTileXY, directions, i) as XYType; // Return a single tileXY\r\n                    if (resultTileXY !== null) {\r\n                        out.push(resultTileXY);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    } else { // Directions is a list\r\n        for (let i = 0, cnt = (directions as number[]).length; i < cnt; i++) {\r\n            if (isNumberDistance) { // Return a single tileXY\r\n                resultTileXY = GetTileXYAtDirection(board, srcTileXY, directions[i], distance) as XYType;\r\n                if (resultTileXY !== null) {\r\n                    out.push(resultTileXY);\r\n                }\r\n            } else { // Append an array of tileXY\r\n                GetTileXYAtDirection(board, srcTileXY, directions[i], distance, out);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { GetTileXYAtDirection } from '../tilexy/GetTileXYAtDirection';\r\n\r\nexport function GetNeighborTileXY(\r\n    board: IBaseBoard,\r\n    srcTileXY: XYType,\r\n    directions: number | number[] | string | null = null,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType | XYType[] | null {\r\n\r\n    return GetTileXYAtDirection(board, srcTileXY, directions, 1, out);\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { GetNeighborTileXY } from '../neighbors/GetNeighborTileXY';\r\nimport { AngleBetween } from './AngleBetween';\r\n\r\nexport function AngleToward(\r\n    board: IBaseBoard,\r\n    tileXY: XYType,\r\n    direction: number\r\n): number {\r\n\r\n    if (tileXY === undefined) {\r\n        tileXY = zeroTileXY;\r\n    }\r\n    // Save wrapMode, infinityMode and clear them\r\n    let wrapModeSave = board.wrapMode;\r\n    let infinityModeSave = board.infinityMode;\r\n    board.wrapMode = false;\r\n    board.infinityMode = true;\r\n\r\n    // Get neighborTileXY\r\n    let neighborTileXY = GetNeighborTileXY(board, tileXY, direction, true) as XYType;\r\n\r\n    // Restore wrapMode, infinityMode and clear them\r\n    board.wrapMode = wrapModeSave;\r\n    board.infinityMode = infinityModeSave;\r\n    return AngleBetween(board, tileXY, neighborTileXY); // -PI~PI\r\n}\r\n\r\nlet zeroTileXY: XYType = { x: 0, y: 0 };", "const RAD_TO_DEG = 180 / Math.PI;\r\n\r\nexport function RadToDeg(radians: number): number {\r\n\r\n    return radians * RAD_TO_DEG;\r\n};\r\n", "export function ShortestBetween(\r\n    angle1: number,\r\n    angle2: number\r\n): number {\r\n\r\n    let difference = angle2 - angle1;\r\n    if (difference === 0) {\r\n        return 0;\r\n    }\r\n\r\n    let times = Math.floor((difference - (-180)) / 360);\r\n    return difference - (times * 360);\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { AngleToward } from './AngleToward';\r\nimport { RadToDeg } from '../../../utils/math/angle/RadToDeg';\r\nimport { ShortestBetween } from '../../../utils/math/angle/ShortestBetween';\r\n\r\nexport function AngleSnapToDirection(\r\n    board: IBaseBoard,\r\n    tileXY: XYType,\r\n    angle: number\r\n): number {\r\n\r\n    angle = RadToDeg(angle); // -180~180\r\n    let directions = board.grid.allDirections;\r\n    let minDeltaAngle = Infinity,\r\n        direction = undefined;\r\n    for (let i = 0, cnt = directions.length; i < cnt; i++) {\r\n        let neighborAngle = RadToDeg(AngleToward(board, tileXY, directions[i])); // -PI~PI -> -180~180\r\n        let deltaAngle = Math.abs(ShortestBetween(angle, neighborAngle));\r\n        if (deltaAngle < minDeltaAngle) {\r\n            minDeltaAngle = deltaAngle;\r\n            direction = i;\r\n        }\r\n    }\r\n\r\n    return direction;\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { GetNeighborTileXY } from './GetNeighborTileXY'\r\n\r\nexport function GetNeighborTileDirection(\r\n    board: IBaseBoard,\r\n    srcTileXY: XYType | null,\r\n    neighborTileXY: XYType | null\r\n): number | null {\r\n\r\n    if ((srcTileXY === null) || (neighborTileXY === null)) {\r\n        return null;\r\n    }\r\n    if ((srcTileXY.x === neighborTileXY.x) && (srcTileXY.y === neighborTileXY.y)) {\r\n        return null\r\n    }\r\n\r\n    let direction = board.grid.getNeighborTileDirection(srcTileXY, neighborTileXY);\r\n    if (board.wrapMode && (direction === null)) {\r\n        let tileXYArray = GetNeighborTileXY(board, srcTileXY, null) as XYType[];\r\n        for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n            let tileXY = tileXYArray[i];\r\n            if ((neighborTileXY.x === tileXY.x) && (neighborTileXY.y === tileXY.y)) {\r\n                direction = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return direction;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { GetNeighborTileDirection } from './GetNeighborTileDirection'\r\n\r\nexport function GetNeighborChessDirection(\r\n    board: IBaseBoard,\r\n    chess: IChess | XYType,\r\n    neighborChess: IChess | XYType\r\n): number {\r\n\r\n    let srcTileXYZ = ChessToTileXYZ(board, chess);\r\n    let neighborTileXYZ = ChessToTileXYZ(board, neighborChess);\r\n    return GetNeighborTileDirection(board, srcTileXYZ, neighborTileXYZ);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { GetNeighborChessDirection } from './GetNeighborChessDirection'\r\n\r\nexport function AreNeighbors(\r\n    board: IBaseBoard,\r\n    chessA: IChess | XYType,\r\n    chessB: IChess | XYType\r\n): boolean {\r\n\r\n    return (GetNeighborChessDirection(board, chessA, chessB) !== null);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from './ChessToTileXYZ'\r\n\r\nexport function DirectionBetween(\r\n    board: IBaseBoard,\r\n    chessA: IChess | XYType,\r\n    chessB: IChess | XYType,\r\n    round: boolean = true\r\n): number | null {\r\n\r\n    let tileA = ChessToTileXYZ(board, chessA);\r\n    let tileB = ChessToTileXYZ(board, chessB);\r\n    if ((tileA === null) || (tileB === null)) {\r\n        return null;\r\n    }\r\n\r\n    return board.grid.directionBetween(tileA, tileB, round);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { Contains } from '../tilexy/Contains';\r\n\r\nexport function RingToTileXYArray(\r\n    board: IBaseBoard,\r\n    centerTileXY: XYType,\r\n    radius: number = 1,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let tileArray = board.grid.ringToTileXYArray(centerTileXY, radius) as XYType[];\r\n    for (let i = 0, cnt = tileArray.length; i < cnt; i++) {\r\n        let tileXY = tileArray[i];\r\n        if (Contains(board, tileXY.x, tileXY.y)) {\r\n            out.push(tileXY);\r\n        }\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { RingToTileXYArray } from './RingToTileXYArray'\r\n\r\nexport function FilledRingToTileXYArray(\r\n    board: IBaseBoard,\r\n    centerTileXY: XYType,\r\n    radius: number,\r\n    nearToFar: boolean = true,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    for (let i = 0; i <= radius; i++) {\r\n        let level = (nearToFar) ? i : (radius - i);\r\n        RingToTileXYArray(board, centerTileXY, level, out);\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\n\r\n\r\nexport function Offset(\r\n    board: IBaseBoard,\r\n    tileXY: XYType,\r\n    offsetTileX: number,\r\n    offsetTileY: number,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    if ((offsetTileX === 0) && (offsetTileY === 0)) {\r\n        out.x = tileXY.x;\r\n        out.y = tileXY.y;\r\n    } else {\r\n        board.grid.offset(tileXY, offsetTileX, offsetTileY, out);\r\n    }\r\n    return out;\r\n};\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "// Offset tileXYArray to (0,0), and set board size to fit tileXYArray\r\nimport { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { Offset } from './Offset';\r\nimport { SetBoardHeight } from '../boarddata/SetBoardHeight';\r\nimport { SetBoardWidth } from '../boarddata/SetBoardWidth';\r\n\r\nexport function Fit(\r\n    board: IBaseBoard,\r\n    tileXYArray: XYType[]\r\n): XYType[] {\r\n\r\n    // Get minimum tileX, tileY\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let tileXY: XYType;\r\n    for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n        tileXY = tileXYArray[i];\r\n        minX = Math.min(minX, tileXY.x);\r\n        minY = Math.min(minY, tileXY.y);\r\n    }\r\n    // Offset tileXYArray to (0,0)\r\n    if ((minX !== 0) || (minY !== 0)) {\r\n        for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n            tileXY = tileXYArray[i];\r\n            Offset(board, tileXY, -minX, -minY, tileXY);\r\n        }\r\n    }\r\n\r\n    // Get maximun tileX, tileY\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n        tileXY = tileXYArray[i];\r\n        maxX = Math.max(maxX, tileXY.x);\r\n        maxY = Math.max(maxY, tileXY.y);\r\n    }\r\n\r\n    // Set board size\r\n    SetBoardWidth(board, maxX + 1);\r\n    SetBoardHeight(board, maxY + 1);\r\n\r\n    return tileXYArray;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\n\r\nexport type ForEachTileXYCallback = (tileXY: XYType, board: IBaseBoard) => void;\r\nexport enum ForEachTileXYOrder {\r\n    'x+,y+' = 0,\r\n    'x-,y+' = 1,\r\n    'y+,x+' = 2,\r\n    'y-,x+' = 3\r\n}\r\n\r\nexport function ForEachTileXY(\r\n    board: IBaseBoard,\r\n    callback: ForEachTileXYCallback,\r\n    scope?: unknown,\r\n    order: ForEachTileXYOrder = ForEachTileXYOrder['x+,y+']\r\n): void {\r\n\r\n    let tileXY: XYType = { x: 0, y: 0 };\r\n    switch (order) {\r\n        case ForEachTileXYOrder['x+,y+']:\r\n            for (let tileY = 0; tileY < board.height; tileY++) {\r\n                for (let tileX = 0; tileX < board.width; tileX++) {\r\n                    tileXY.x = tileX;\r\n                    tileXY.y = tileY;\r\n                    if (scope) {\r\n                        callback.call(scope, tileXY, board);\r\n                    } else {\r\n                        callback(tileXY, board);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case ForEachTileXYOrder['x-,y+']:\r\n            for (let tileY = 0; tileY < board.height; tileY++) {\r\n                for (let tileX = board.width - 1; tileX >= 0; tileX--) {\r\n                    tileXY.x = tileX;\r\n                    tileXY.y = tileY;\r\n                    if (scope) {\r\n                        callback.call(scope, tileXY, board);\r\n                    } else {\r\n                        callback(tileXY, board);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case ForEachTileXYOrder['y+,x+']:\r\n            for (let tileX = 0; tileX < board.width; tileX++) {\r\n                for (let tileY = 0; tileY < board.height; tileY++) {\r\n                    tileXY.x = tileX;\r\n                    tileXY.y = tileY;\r\n                    if (scope) {\r\n                        callback.call(scope, tileXY, board);\r\n                    } else {\r\n                        callback(tileXY, board);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case ForEachTileXYOrder['y-,x+']:\r\n            for (let tileX = 0; tileX < board.width; tileX++) {\r\n                for (let tileY = board.height - 1; tileY >= 0; tileY--) {\r\n                    tileXY.x = tileX;\r\n                    tileXY.y = tileY;\r\n                    if (scope) {\r\n                        callback.call(scope, tileXY, board);\r\n                    } else {\r\n                        callback(tileXY, board);\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\n\r\nexport function GetDistance(\r\n    board: IBaseBoard,\r\n    tileA: XYType,\r\n    tileB: XYType,\r\n    roughMode?: boolean\r\n): number {\r\n\r\n    return board.grid.getDistance(tileA, tileB, roughMode);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { ZType, XYType } from '../../Types';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\n\r\nexport function GetEmptyTileXYArray(\r\n    board: IBaseBoard,\r\n    tileZ: ZType | ZType[] = 0,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    if (!Array.isArray(tileZ)) {\r\n        for (let tileY = 0; tileY < board.height; tileY++) {\r\n            for (let tileX = 0; tileX < board.width; tileX++) {\r\n                if (TileXYZToChess(board, tileX, tileY, tileZ) === null) {\r\n                    out.push({\r\n                        x: tileX,\r\n                        y: tileY\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        let tileZArray = tileZ;\r\n        for (let tileY = 0; tileY < board.height; tileY++) {\r\n            for (let tileX = 0; tileX < board.width; tileX++) {\r\n                let isEmpty = true;\r\n                for (let k = 0, kcnt = tileZArray.length; k < kcnt; k++) {\r\n                    if (TileXYZToChess(board, tileX, tileY, tileZArray[k]) !== null) {\r\n                        isEmpty = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isEmpty) {\r\n                    out.push({\r\n                        x: tileX,\r\n                        y: tileY\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { Vec2Type } from '../../Types';\r\n\r\nexport function GetGridPoints(\r\n    board: IBaseBoard,\r\n    tileX?: number | Vec2Type,\r\n    tileY?: number,\r\n    out?: Vec2Type[] | true\r\n): Vec2Type[] {\r\n\r\n    return board.grid.getGridPoints(tileX, tileY, out);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, IChess, ZMapType } from '../../Types';\r\n\r\nexport function TileXYToChessArray(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    out: IChess[] = []\r\n): IChess[] {\r\n\r\n    let zMap = board.boardData.getChess(tileX, tileY) as ZMapType;\r\n    for (const [tileZ, chess] of zMap) {\r\n        out.push(chess);\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { ZType, XYType, IChess } from '../../Types';\r\nimport { TileXYZToChess } from './TileXYZToChess';\r\nimport { TileXYToChessArray } from './TileXYToChessArray';\r\n\r\nexport function TileXYArrayToChessArray(\r\n    board: IBaseBoard,\r\n    tileXYArray: XYType[],\r\n    tileZ?: ZType,\r\n    out: IChess[] = []\r\n): IChess[] {\r\n\r\n    let tileZMode = (tileZ != null);\r\n    let tileXY: XYType,\r\n        chess: IChess;\r\n    for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n        tileXY = tileXYArray[i];\r\n        if (tileZMode) {\r\n            chess = TileXYZToChess(board, tileXY.x, tileXY.y, tileZ as ZType);\r\n            if (chess !== null) {\r\n                out.push(chess);\r\n            }\r\n        } else {\r\n            TileXYToChessArray(board, tileXY.x, tileXY.y, out);\r\n        }\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType, XYZType, ZType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { TileXYArrayToChessArray } from '../tilexy/TileXYArrayToChessArray';\r\nimport { TileXYToChessArray } from '../tilexy/TileXYToChessArray';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { GetNeighborTileXY } from './GetNeighborTileXY';\r\n\r\nexport function GetNeighborChess(\r\n    board: IBaseBoard,\r\n    chess: IChess | XYType,\r\n    directions: number | number[] | string | null,\r\n    neighborTileZ?: ZType | null,\r\n    out?: IChess[]\r\n): IChess | IChess[] | null {\r\n\r\n    let tileXYZ = ChessToTileXYZ(board, chess);\r\n    if (tileXYZ === null) { // chess is not on board\r\n        return null;\r\n    }\r\n\r\n    if (neighborTileZ == null) {\r\n        neighborTileZ = (tileXYZ.hasOwnProperty('z')) ? (tileXYZ as XYZType).z : null;\r\n    }\r\n\r\n    let neighborTileXY = GetNeighborTileXY(board, tileXYZ, directions, true);\r\n    if (neighborTileXY === null) {\r\n        return null;\r\n    } else if (Array.isArray(neighborTileXY)) { // NeighborTileXY array -> chess array\r\n        if (out === undefined) {\r\n            out = [];\r\n        }\r\n        return TileXYArrayToChessArray(board, neighborTileXY, neighborTileZ, out);\r\n    } else { // Single neighborTileXY -> single chess if tileZ, chess array if no tileZ\r\n        if (neighborTileZ == null) {\r\n            if (out === undefined) {\r\n                out = [];\r\n            }\r\n            return TileXYToChessArray(board, neighborTileXY.x, neighborTileXY.y, out);\r\n        } else {\r\n            return TileXYZToChess(board, neighborTileXY.x, neighborTileXY.y, neighborTileZ);\r\n        }\r\n    }\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { AngleSnapToDirection } from '../worldxy/AngleSnapToDirection';\r\nimport { GetTileXYAtDirection } from '../tilexy/GetTileXYAtDirection';\r\n\r\nexport function GetNeighborTileXYAtAngle(\r\n    board: IBaseBoard,\r\n    srcTileXY: XYType,\r\n    angle: number,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType | null {\r\n\r\n    let direction = AngleSnapToDirection(board, srcTileXY, angle);\r\n    return GetTileXYAtDirection(board, srcTileXY, direction, 1, out) as XYType;\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType } from '../../Types';\r\n\r\nexport function GetOppositeDirection(\r\n    baord: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    direction: number\r\n): number {\r\n\r\n    return baord.grid.getOppositeDirection(tileX, tileY, direction);\r\n}", "export function RandomInt(\r\n    min: number,\r\n    max: number\r\n): number {\r\n\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};", "export function GetRandomItem<T>(\r\n    array: T[],\r\n    startIndex: number = 0,\r\n    length: number = array.length\r\n): T {\r\n\r\n    let randomIndex = startIndex + Math.floor(Math.random() * length);\r\n    return (array[randomIndex] === undefined) ? null : array[randomIndex];\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, ZType, XYType } from '../../Types';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { GetEmptyTileXYArray } from './GetEmptyTileXYArray';\r\nimport { RandomInt } from '../../../utils/math/RandomInt';\r\nimport { GetRandomItem } from '../../../utils/array/GetRandom';\r\n\r\nexport function GetRandomEmptyTileXY(\r\n    board: IBaseBoard,\r\n    tileZ: ZType = 0,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType | null {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    // Random picking a tileXY\r\n    let retryCount = Math.floor(board.width * board.height * 0.3);\r\n    for (let i = 0; i < retryCount; i++) {\r\n        let tileX = RandomInt(0, board.width - 1) as XType;\r\n        let tileY = RandomInt(0, board.height - 1) as YType;\r\n        if (TileXYZToChess(board, tileX, tileY, tileZ) === null) {\r\n            out.x = tileX;\r\n            out.y = tileY;\r\n            return out;\r\n        }\r\n    }\r\n\r\n    // Not found any empty tileXY\r\n    // Get all empty tileXY\r\n    let tileXYArray = GetEmptyTileXYArray(board, tileZ);\r\n    if (tileXYArray.length === 0) {\r\n        return null;\r\n    } else {\r\n        let tileXY: XYType = GetRandomItem(tileXYArray);\r\n        out.x = tileXY.x;\r\n        out.y = tileXY.y;\r\n        return out;\r\n    }\r\n}\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, ZType } from '../../Types';\r\nimport { TileXYToChessArray } from '../tilexy/TileXYToChessArray';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { GetChessData } from '../chessdata/GetChessData';\r\n\r\nexport function HasBlocker(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    tileZ?: ZType\r\n): boolean {\r\n\r\n    if (tileZ === undefined) {\r\n        // Any chess at (tileX, tileY) has blocker\r\n        let chessArray = TileXYToChessArray(board, tileX, tileY);\r\n        for (let i = 0, cnt = chessArray.length; i < cnt; i++) {\r\n            let blocker = GetChessData(chessArray[i]).blocker;\r\n            if (blocker === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    } else {\r\n        // chess at (tileX, tileY, tileZ) has blocker\r\n        let chess = TileXYZToChess(board, tileX, tileY, tileZ);\r\n        if (chess === null) {\r\n            return false;\r\n        }\r\n        let blocker = GetChessData(chess).blocker;\r\n        return (blocker === true);\r\n\r\n    }\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess } from '../../Types';\r\n\r\nexport function HasChess(\r\n    board: IBaseBoard,\r\n    chess: IChess\r\n): boolean {\r\n\r\n    return board.boardData.chessToXYZ.has(chess);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XType, YType, ZType } from '../../Types';\r\nimport { EdgeBlockerType } from '../chessdata/IChessData';\r\nimport { TileXYToChessArray } from '../tilexy/TileXYToChessArray';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { GetChessData } from '../chessdata/GetChessData';\r\n\r\nexport function HasEdgeBlocker(\r\n    board: IBaseBoard,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    tileZ: ZType | undefined,\r\n    direction: number\r\n): boolean {\r\n\r\n    if (tileZ === undefined) {\r\n        // Any chess at (tileX, tileY) has blocker\r\n        let chessArray = TileXYToChessArray(board, tileX, tileY);\r\n        for (let i = 0, cnt = chessArray.length; i < cnt; i++) {\r\n            if (IsEdgeBlocker(GetChessData(chessArray[i]).blocker, direction)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    } else {\r\n        // chess at (tileX, tileY, tileZ) has blocker\r\n        let chess = TileXYZToChess(board, tileX, tileY, tileZ);\r\n        if (chess === null) {\r\n            return false;\r\n        }\r\n        return IsEdgeBlocker(GetChessData(chess).blocker, direction);\r\n    }\r\n}\r\n\r\nfunction IsEdgeBlocker(\r\n    blocker: EdgeBlockerType | boolean,\r\n    direction: number\r\n): boolean {\r\n\r\n    if ((blocker === false) || (blocker === true)) {\r\n        return blocker;\r\n    } else {\r\n        return (blocker[direction] === true);\r\n    }\r\n}", "export function Normalize(angle: number): number {\r\n    angle = angle % PI2;\r\n\r\n    if (angle >= 0) {\r\n        return angle;\r\n    }\r\n    else {\r\n        return angle + PI2;\r\n    }\r\n};\r\n\r\nconst PI2 = Math.PI * 2;\r\n", "export function Equal(\r\n    a: number,\r\n    b: number,\r\n    epsilon: number = 0.0001\r\n): boolean {\r\n\r\n    return Math.abs(a - b) < epsilon;\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { AngleBetween } from './AngleBetween';\r\nimport { Normalize as AngleNormalize } from '../../../utils/math/angle/Normalize';\r\nimport { Equal } from '../../../utils/math/fuzzy/Equal';\r\n\r\nexport function IsAngleInCone(\r\n    board: IBaseBoard,\r\n    chessA: IChess | XYType,\r\n    chessB: IChess | XYType,\r\n    face: number,\r\n    cone: number\r\n): boolean {\r\n\r\n    let tileXYA = ChessToTileXYZ(board, chessA);\r\n    let tileXYB = ChessToTileXYZ(board, chessB);\r\n    let targetAngle = AngleBetween(board, tileXYA, tileXYB); // -PI~PI\r\n    targetAngle = AngleNormalize(targetAngle); // 0~2PI\r\n    let deltaAngle = Math.abs(targetAngle - face);\r\n    deltaAngle = Math.min(deltaAngle, PI2 - deltaAngle);\r\n    let halfCone = cone / 2;\r\n    return Equal(deltaAngle, halfCone) || (deltaAngle < halfCone);\r\n}\r\n\r\nconst PI2 = Math.PI * 2;", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYType } from '../../Types';\r\nimport { ChessToTileXYZ } from './ChessToTileXYZ'\r\n\r\nexport function IsDirectionInCone(\r\n    board: IBaseBoard,\r\n    chessA: IChess | XYType,\r\n    chessB: IChess | XYType,\r\n    face: number,\r\n    cone: number\r\n): boolean {\r\n\r\n    let tileXYA = ChessToTileXYZ(board, chessA);\r\n    let tileXYB = ChessToTileXYZ(board, chessB);\r\n\r\n    let savedDirections = board.grid.directions; // Save directions\r\n    board.grid.directions = board.grid.sides;\r\n    let direction = board.grid.directionBetween(tileXYA, tileXYB, false);\r\n    board.grid.directions = savedDirections; // Restore directions\r\n\r\n    let deltaDirection = Math.abs(direction - face);\r\n    deltaDirection = Math.min(deltaDirection, board.grid.directions - deltaDirection);\r\n    return (deltaDirection <= (cone / 2));\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\n\r\n\r\nexport function WorldXYToTileXY(\r\n    board: IBaseBoard,\r\n    worldX: number,\r\n    worldY: number,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType {\r\n\r\n    return board.grid.getTileXY(worldX, worldY, out);\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { ZType } from '../../Types';\r\nimport { WorldXYToTileXY } from './WorldXYToTileXY';\r\nimport { Contains } from '../tilexy/Contains'\r\n\r\nexport function IsOverlappingPoint(\r\n    board: IBaseBoard,\r\n    worldX: number,\r\n    worldY: number,\r\n    tileZ?: ZType\r\n): boolean {\r\n\r\n    if (board.infinityMode && (tileZ === undefined)) {\r\n        return true;\r\n    }\r\n\r\n    let out = WorldXYToTileXY(board, worldX, worldY, true);\r\n    return Contains(board, out.x, out.y, tileZ);\r\n}", "export function DistanceBetween(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number\r\n): number {\r\n\r\n    let dx = x1 - x2;\r\n    let dy = y1 - y2;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n};", "export function Linear(\r\n    p0: number,\r\n    p1: number,\r\n    t: number\r\n): number {\r\n\r\n    return (p1 - p0) * t + p0;\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { WorldXYToTileXY } from '../worldxy/WorldXYToTileXY';\r\nimport { Contains } from '../tilexy/Contains';\r\nimport { XYType } from '../../Types';\r\nimport { DistanceBetween } from '../../../utils/math/distance/DistanceBetween';\r\nimport { Linear } from '../../../utils/math/Linear';\r\n\r\nexport function LineToTileXYArray(\r\n    board: IBaseBoard,\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let totalDistance = DistanceBetween(startX, startY, endX, endY);\r\n    let gridSize = Math.min(board.grid.width, board.grid.height);\r\n    let quantity = Math.ceil(totalDistance / (gridSize / 4));\r\n    let preTileXY: XYType;\r\n    for (let i = 0; i <= quantity; i++) {\r\n        let t = i / quantity;\r\n        let worldX = Linear(startX, endX, t);\r\n        let worldY = Linear(startY as number, endY, t);\r\n        let tileXY = WorldXYToTileXY(board, worldX, worldY);\r\n\r\n        if (!Contains(board, tileXY.x, tileXY.y)) {\r\n            continue;\r\n        }\r\n\r\n        if (preTileXY &&\r\n            (preTileXY.x === tileXY.x) && (preTileXY.y === tileXY.y)) {\r\n            continue;\r\n        }\r\n\r\n        out.push(tileXY);\r\n        preTileXY = tileXY;\r\n    }\r\n    return out;\r\n}", "export interface Vec2Type {\r\n    x: number,\r\n    y: number\r\n};\r\n\r\nexport interface Vec3Type {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n}", "import { Vec2Type } from '../utils/types/VectorType';\r\nimport { IChessData } from './board/chessdata/IChessData';\r\n\r\nexport type XType = number;\r\nexport type YType = number;\r\nexport type ZType = number | string;\r\nexport type AnyKeyType = XType | YType | ZType;\r\nexport type XYType = {\r\n    x: XType,\r\n    y: YType\r\n}\r\nexport type XYZType = {\r\n    x: XType,\r\n    y: YType,\r\n    z: ZType\r\n}\r\nexport { Vec2Type };\r\nexport interface IChess {\r\n    rexChess?: IChessData;\r\n    x: number,\r\n    y: number,\r\n    destroy?: () => any;\r\n};\r\nexport type ChessSetType = Set<IChess>;\r\nexport type ZMapType = Map<ZType, IChess>;", "import { Vec2Type } from '../Types';\r\nexport { Vec2Type };\r\n\r\nexport interface IGrid {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n\r\n    mode: number;\r\n    directions: number;\r\n    readonly sides: number;\r\n    readonly allDirections: number[];\r\n    readonly halfDirections: number[];\r\n\r\n    _savedOriginX: number;\r\n    _savedOriginY: number;\r\n\r\n    directionBetween(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        round?: boolean\r\n    ): number;\r\n\r\n    directionNormalize(\r\n        direction: number\r\n    ): number;\r\n\r\n    getDistance(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        roughMode?: boolean\r\n    ): number;\r\n\r\n    getGridPoints(\r\n        tileX?: number | Vec2Type,\r\n        tileY?: number,\r\n        out?: Vec2Type[] | true\r\n    ): Vec2Type[];\r\n\r\n    getNeighborTileDirection(\r\n        srcTileXY: Vec2Type,\r\n        neighborTileXY: Vec2Type\r\n    ): number | null;\r\n\r\n    getNeighborTileXY(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    getOppositeDirection(\r\n        tileX: number | Vec2Type,\r\n        tileY: number | undefined | null,\r\n        direction: number\r\n    ): number;\r\n\r\n    getTileXY(\r\n        worldX: number | Vec2Type,\r\n        worldY?: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    getTileXYAtDirection(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        distance: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    getWorldXY(\r\n        tileX: number | Vec2Type,\r\n        tileY?: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    mirror(\r\n        srcTileXY: Vec2Type,\r\n        mode: MirrorMode | MirrorModeString,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    offset(\r\n        srcTileXY: Vec2Type,\r\n        offsetTileX: number,\r\n        offsetTileY: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type;\r\n\r\n    restoreOrigin(): this;\r\n\r\n    ringToTileXYArray(\r\n        centerTileXY: Vec2Type,\r\n        radius: number,\r\n        out?: Vec2Type[]\r\n    ): Vec2Type[];\r\n\r\n    rotate(\r\n        srcTileXY: Vec2Type,\r\n        dir: number,\r\n        out?: Vec2Type | true\r\n    ): Vec2Type\r\n\r\n    saveOrigin(): this;\r\n\r\n    setDirectionMode(\r\n        mode: number\r\n    ): this;\r\n}\r\n\r\nexport enum MirrorMode {\r\n    x = 1,\r\n    horizontal = 1,\r\n    h = 1,\r\n    y = 2,\r\n    vertical = 2,\r\n    v = 2,\r\n    xy = 3,\r\n}\r\n\r\nexport type MirrorModeString = 'x' | 'y' | 'xy' | 'vertical' | 'horizontal' | 'v' | 'h';", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { MirrorMode, MirrorModeString } from '../../grid/IGrid';\r\nimport { Offset } from './Offset';\r\n\r\nexport { MirrorMode, MirrorModeString };\r\n\r\nexport function Mirror(\r\n    board: IBaseBoard,\r\n    tileXY: XYType,\r\n    mode: MirrorMode | MirrorModeString,\r\n    originTileXY: XYType | null = null,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    if (originTileXY !== null) {\r\n        Offset(board, tileXY, -originTileXY.x, -originTileXY.y, out);\r\n    } else {\r\n        out.x = tileXY.x;\r\n        out.y = tileXY.y;\r\n    }\r\n    board.grid.mirror(out, mode, out);\r\n    if (originTileXY !== null) {\r\n        Offset(board, out, originTileXY.x, originTileXY.y, out);\r\n    }\r\n    return out;\r\n};\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { GetAllChess } from './GetAllChess';\r\nimport { RemoveChess } from './RemoveChess';\r\n\r\nexport function RemoveAllChess(\r\n    board: IBaseBoard,\r\n    destroy: boolean = false,\r\n    fromBoardRemove: boolean = false\r\n): void {\r\n\r\n    let chessArray = GetAllChess(board);\r\n    for (let i = 0, cnt = chessArray.length; i < cnt; i++) {\r\n        RemoveChess(board, chessArray[i], undefined, undefined, undefined, destroy, fromBoardRemove);\r\n    }\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType } from '../../Types';\r\nimport { Offset } from './Offset';\r\n\r\nexport function Rotate(\r\n    board: IBaseBoard,\r\n    tileXY: XYType,\r\n    direction: number,\r\n    originTileXY: XYType | null = null,\r\n    out: XYType | true = { x: 0, y: 0 }\r\n): XYType {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    if (originTileXY !== null) {\r\n        Offset(board, tileXY, -originTileXY.x, -originTileXY.y, out);\r\n    } else {\r\n        out.x = tileXY.x;\r\n        out.y = tileXY.y;\r\n    }\r\n    board.grid.rotate(out, direction, out);\r\n    if (originTileXY !== null) {\r\n        Offset(board, out, originTileXY.x, originTileXY.y, out);\r\n    }\r\n    return out;\r\n};\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, ZType, XType, YType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { AddChess } from './AddChess';\r\n\r\nexport function SetTileZ(\r\n    board: IBaseBoard,\r\n    chess: IChess,\r\n    tileZ: ZType\r\n): void {\r\n\r\n    let srcTileXYZ = ChessToTileXYZ(board, chess);\r\n    if (srcTileXYZ === null) {\r\n        return;\r\n    }\r\n\r\n    AddChess(board, chess, srcTileXYZ.x, srcTileXYZ.y, tileZ);\r\n}", "export interface BoundsType {\r\n    left: number,\r\n    right: number,\r\n    top: number,\r\n    bottom: number\r\n}", "export function Clamp(\r\n    value: number,\r\n    min: number,\r\n    max: number\r\n): number {\r\n\r\n    return Math.max(min, Math.min(max, value));\r\n};\r\n", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { BoundsType as ShapeType } from '../../../utils/types/BoundsType';\r\nimport { XYType } from '../../Types';\r\nimport { WorldXYToTileXY } from '../worldxy/WorldXYToTileXY';\r\nimport { TileXYToWorldXY } from '../worldxy/TileXYToWorldXY';\r\nimport { Clamp } from '../../../utils/math/Clamp';\r\n\r\nexport { ShapeType };\r\nexport type ContainsCallbackType = (shape: ShapeType, x: number, y: number) => boolean\r\n\r\nexport function ShapeToTileXYArray(\r\n    board: IBaseBoard,\r\n    shape: ShapeType,\r\n    containsCallback: ContainsCallbackType,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let topLeftTileXY = WorldXYToTileXY(board, shape.left, shape.top, true);\r\n    let left = topLeftTileXY.x - 1,\r\n        top = topLeftTileXY.y - 1;\r\n    let bottomRightTileXY = WorldXYToTileXY(board, shape.right, shape.bottom, true);\r\n    let right = bottomRightTileXY.x + 1,\r\n        bottom = bottomRightTileXY.y + 1;\r\n    if (!board.infinityMode) {\r\n        left = Clamp(left, 0, board.width - 1);\r\n        top = Clamp(top, 0, board.height - 1);\r\n        right = Clamp(right, 0, board.width - 1);\r\n        bottom = Clamp(bottom, 0, board.height - 1);\r\n    }\r\n\r\n    for (let x = left; x <= right; x++) {\r\n        for (let y = top; y <= bottom; y++) {\r\n            let targetWorldXY = TileXYToWorldXY(board, x, y, true);\r\n            if (containsCallback(shape, targetWorldXY.x, targetWorldXY.y)) {\r\n                out.push({ x: x, y: y });\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { IChess, XYZType } from '../../Types';\r\nimport { ChessToTileXYZ } from '../tilexy/ChessToTileXYZ';\r\nimport { RemoveChess } from './RemoveChess';\r\nimport { AddChess } from './AddChess';\r\n\r\n\r\nexport function SwapChess(\r\n    board: IBaseBoard,\r\n    chessA: IChess,\r\n    chessB: IChess,\r\n    align: boolean = true\r\n): void {\r\n\r\n    let tileXYZA = ChessToTileXYZ(board, chessA) as XYZType;\r\n    let tileXYZB = ChessToTileXYZ(board, chessB) as XYZType;\r\n    if ((tileXYZA == null) || (tileXYZB == null)) {\r\n        return;\r\n    }\r\n    RemoveChess(board, chessA);\r\n    RemoveChess(board, chessB);\r\n    AddChess(board, chessA, tileXYZB.x, tileXYZB.y, tileXYZB.z, align);\r\n    AddChess(board, chessB, tileXYZA.x, tileXYZA.y, tileXYZA.z, align);\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { ZType, IChess } from '../../Types';\r\n\r\nexport function TileZToChessArray(\r\n    board: IBaseBoard,\r\n    tileZ: ZType,\r\n    out: IChess[] = []\r\n): IChess[] {\r\n\r\n    let chessSet = board.boardData.ZToChessSet.get(tileZ);\r\n    if (chessSet) {\r\n        for (const chess of chessSet) {\r\n            out.push(chess);\r\n        }\r\n    }\r\n    return out;\r\n}", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { XYType, Vec2Type } from '../../Types';\r\nimport { TileXYToWorldXY } from './TileXYToWorldXY';\r\n\r\nexport function TileXYArrayToWorldXYArray(\r\n    board: IBaseBoard,\r\n    tileXYArray: XYType[],\r\n    out: Vec2Type[] = []\r\n): Vec2Type[] {\r\n\r\n    for (let i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n        let tileXY = tileXYArray[i];\r\n        out.push(TileXYToWorldXY(board, tileXY.x, tileXY.y));\r\n    }\r\n    return out;\r\n};", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { Vec2Type } from '../../Types';\r\nimport { WorldXYToTileXY } from './WorldXYToTileXY';\r\nimport { TileXYToWorldXY } from './TileXYToWorldXY';\r\n\r\nexport function WorldXYSnapToGrid(\r\n    board: IBaseBoard,\r\n    worldX: number,\r\n    worldY: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globWorldXY;\r\n    }\r\n\r\n    WorldXYToTileXY(board, worldX, worldY, out);\r\n    TileXYToWorldXY(board, out.x, out.y, out);\r\n    return out;\r\n};\r\n\r\nlet globWorldXY: Vec2Type = { x: 0, y: 0 };", "import { IBaseBoard } from '../IBaseBoard';\r\nimport { ZType, IChess } from '../../Types';\r\nimport { WorldXYToTileXY } from './WorldXYToTileXY';\r\nimport { TileXYZToChess } from '../tilexy/TileXYZToChess';\r\nimport { TileXYToChessArray } from '../tilexy/TileXYToChessArray';\r\n\r\nexport function WorldXYToChess(\r\n    board: IBaseBoard,\r\n    worldX: number,\r\n    worldY: number,\r\n    tileZ?: ZType,\r\n    out?: IChess[]\r\n): IChess | IChess[] {\r\n\r\n    let tileXY = WorldXYToTileXY(board, worldX, worldY, true);\r\n    if (tileZ !== undefined) {\r\n        return TileXYZToChess(board, tileXY.x, tileXY.y, tileZ)\r\n    } else {\r\n        return TileXYToChessArray(board, tileXY.x, tileXY.y, out);\r\n    }\r\n}", "import { BaseBoard } from './BaseBoard';\r\nimport { XType, YType, ZType, XYType, XYZType, Vec2Type, IChess } from '../Types';\r\nimport { ILogicBoard, IChessData } from './ILogicBoard';\r\n\r\nimport { AddChess } from './chess/AddChess';\r\nimport { AngleBetween } from './worldxy/AngleBetween';\r\nimport { AngleSnapToDirection } from './worldxy/AngleSnapToDirection';\r\nimport { AngleToward } from './worldxy/AngleToward';\r\nimport { AreNeighbors } from './neighbors/AreNeighbors';\r\nimport { ChessToTileXYZ } from './tilexy/ChessToTileXYZ';\r\nimport { Contains } from './tilexy/Contains';\r\nimport { DirectionBetween } from './tilexy/DirectionBetween';\r\nimport { FilledRingToTileXYArray } from './ring/FilledRingToTileXYArray';\r\nimport { Fit } from './transform/Fit';\r\nimport { ForEachTileXY, ForEachTileXYCallback, ForEachTileXYOrder } from './tilexy/ForEachTileXY';\r\nimport { GetAllChess } from './chess/GetAllChess';\r\nimport { GetChessData } from './chessdata/GetChessData';\r\nimport { GetDistance } from './tilexy/GetDistance';\r\nimport { GetEmptyTileXYArray } from './empty/GetEmptyTileXYArray';\r\nimport { GetGridPoints } from './worldxy/GetGridPoints';\r\nimport { GetNeighborChess } from './neighbors/GetNeighborChess';\r\nimport { GetNeighborChessDirection } from './neighbors/GetNeighborChessDirection';\r\nimport { GetNeighborTileDirection } from './neighbors/GetNeighborTileDirection';\r\nimport { GetNeighborTileXY } from './neighbors/GetNeighborTileXY';\r\nimport { GetNeighborTileXYAtAngle } from './neighbors/GetNeighborTileXYAtAngle';\r\nimport { GetOppositeDirection } from './tilexy/GetOppositeDirection';\r\nimport { GetRandomEmptyTileXY } from './empty/GetRandomEmptyTileXY';\r\nimport { GetTileXYAtDirection, DistanceConfig } from './tilexy/GetTileXYAtDirection'\r\nimport { GetWrapTileXY } from './tilexy/GetWrapTileXY';\r\nimport { GridAlign } from './worldxy/GridAlign';\r\nimport { HasBlocker } from './blocker/HasBlocker';\r\nimport { HasChess } from './chess/HasChess';\r\nimport { HasEdgeBlocker } from './blocker/HasEdgeBlocker';\r\nimport { IsAngleInCone } from './worldxy/IsAngleInCone';\r\nimport { IsDirectionInCone } from './tilexy/IsDirectionInCone';\r\nimport { IsOverlappingPoint } from './worldxy/IsOverlappingPoint';\r\nimport { LineToTileXYArray } from './shape/LineToTileXYArray';\r\nimport { Mirror, MirrorMode, MirrorModeString } from './transform/Mirror';\r\nimport { Offset } from './transform/Offset';\r\nimport { RemoveAllChess } from './chess/RemoveAllChess';\r\nimport { RemoveChess } from './chess/RemoveChess';\r\nimport { RingToTileXYArray } from './ring/RingToTileXYArray';\r\nimport { Rotate } from './transform/Rotate';\r\nimport { SetBoardHeight } from './boarddata/SetBoardHeight';\r\nimport { SetBoardWidth } from './boarddata/SetBoardWidth';\r\nimport { SetTileZ } from './chess/SetTileZ';\r\nimport { ShapeToTileXYArray, ShapeType, ContainsCallbackType } from './shape/ShapeToTileXYArray';\r\nimport { SwapChess } from './chess/SwapChess';\r\nimport { TileXYArrayToChessArray } from './tilexy/TileXYArrayToChessArray';\r\nimport { TileXYToChessArray } from './tilexy/TileXYToChessArray';\r\nimport { TileXYZToChess } from './tilexy/TileXYZToChess';\r\nimport { TileZToChessArray } from './tilexy/TileZToChessArray';\r\nimport { TileXYArrayToWorldXYArray } from './worldxy/TileXYArrayToWorldXYArray';\r\nimport { TileXYToWorldXY } from './worldxy/TileXYToWorldXY';\r\nimport { WorldXYSnapToGrid } from './worldxy/WorldXYSnapToGrid';\r\nimport { WorldXYToChess } from './worldxy/WorldXYToChess';\r\nimport { WorldXYToTileXY } from './worldxy/WorldXYToTileXY';\r\n\r\nexport class LogicBoard extends BaseBoard implements ILogicBoard {\r\n\r\n    addChess(\r\n        chess: IChess,\r\n        tileX: XType,\r\n        tileY: YType,\r\n        tileZ?: ZType,\r\n        align: boolean = true\r\n    ): this {\r\n\r\n        AddChess(this, chess, tileX, tileY, tileZ, align);\r\n        return this;\r\n    }\r\n\r\n    angleBetween(\r\n        chessA: IChess | XYType,\r\n        chessB: IChess | XYType\r\n    ): number {\r\n\r\n        return AngleBetween(this, chessA, chessB);\r\n    }\r\n\r\n    angleSnapToDirection(\r\n        tileXY: XYType,\r\n        angle: number\r\n    ): number {\r\n\r\n        return AngleSnapToDirection(this, tileXY, angle);\r\n    }\r\n\r\n    angleToward(\r\n        tileXY: XYType,\r\n        direction: number\r\n    ): number {\r\n\r\n        return AngleToward(this, tileXY, direction);\r\n    }\r\n\r\n    areNeighbors(\r\n        chessA: IChess | XYType,\r\n        chessB: IChess | XYType\r\n    ): boolean {\r\n\r\n        return AreNeighbors(this, chessA, chessB);\r\n    }\r\n\r\n    chessToTileXYZ(\r\n        chess: IChess | XYZType | XYType\r\n    ): XYType | null {\r\n\r\n        return ChessToTileXYZ(this, chess);\r\n    }\r\n\r\n    contains(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        tileZ?: ZType\r\n    ): boolean {\r\n\r\n        return Contains(this, tileX, tileY, tileZ);\r\n    }\r\n\r\n    directionBetween(\r\n        chessA: IChess | XYType,\r\n        chessB: IChess | XYType,\r\n        round: boolean = true\r\n    ): number | null {\r\n\r\n        return DirectionBetween(this, chessA, chessB, round);\r\n    }\r\n\r\n    filledRingToTileXYArray(\r\n        centerTileXY: XYType,\r\n        radius: number,\r\n        nearToFar: boolean = true,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return FilledRingToTileXYArray(this, centerTileXY, radius, nearToFar, out);\r\n    }\r\n\r\n    fit(\r\n        tileXYArray: XYType[]\r\n    ): XYType[] {\r\n\r\n        return Fit(this, tileXYArray);\r\n    }\r\n\r\n    forEachTileXY(\r\n        callback: ForEachTileXYCallback,\r\n        scope?: unknown,\r\n        order: ForEachTileXYOrder = 0\r\n    ): this {\r\n\r\n        ForEachTileXY(this, callback, scope, order);\r\n        return this;\r\n    }\r\n\r\n    getAllChess(\r\n        out: IChess[] = []\r\n    ): IChess[] {\r\n\r\n        return GetAllChess(this, out);\r\n    }\r\n\r\n    getChessData(\r\n        chess: IChess\r\n    ): IChessData {\r\n\r\n        return GetChessData(chess);\r\n    }\r\n\r\n    getDistance(\r\n        tileA: XYType,\r\n        tileB: XYType,\r\n        roughMode: boolean = false\r\n    ): number {\r\n\r\n        return GetDistance(this, tileA, tileB, roughMode);\r\n    }\r\n\r\n    getEmptyTileXYArray(\r\n        tileZ: ZType | ZType[] = 0,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return GetEmptyTileXYArray(this, tileZ, out);\r\n    }\r\n\r\n    getGridPoints(\r\n        tileX?: number | Vec2Type,\r\n        tileY?: number,\r\n        out?: Vec2Type[] | true\r\n    ): Vec2Type[] {\r\n\r\n        return GetGridPoints(this, tileX, tileY, out);\r\n    }\r\n\r\n    getNeighborChess(\r\n        chess: IChess | XYType,\r\n        directions: number | number[] | string | null,\r\n        neighborTileZ?: ZType | null,\r\n        out?: IChess[]\r\n    ): IChess | IChess[] | null {\r\n\r\n        return GetNeighborChess(this, chess, directions, neighborTileZ, out);\r\n    }\r\n\r\n    getNeighborChessDirection(\r\n        chess: IChess | XYType,\r\n        neighborChess: IChess | XYType\r\n    ): number {\r\n\r\n        return GetNeighborChessDirection(this, chess, neighborChess);\r\n    }\r\n\r\n    getNeighborTileDirection(\r\n        srcTileXY: XYType | null,\r\n        neighborTileXY: XYType | null\r\n    ): number | null {\r\n\r\n        return GetNeighborTileDirection(this, srcTileXY, neighborTileXY);\r\n    }\r\n\r\n    getNeighborTileXY(\r\n        srcTileXY: XYType,\r\n        directions: number | number[] | string | null = null,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType | XYType[] | null {\r\n\r\n        return GetNeighborTileXY(this, srcTileXY, directions, out);\r\n    }\r\n\r\n    getNeighborTileXYAtAngle(\r\n        srcTileXY: XYType,\r\n        angle: number,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType | null {\r\n\r\n        return GetNeighborTileXYAtAngle(this, srcTileXY, angle, out);\r\n    }\r\n\r\n    getOppositeDirection(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        direction: number\r\n    ): number {\r\n\r\n        return GetOppositeDirection(this, tileX, tileY, direction);\r\n    }\r\n\r\n    getRandomEmptyTileXY(\r\n        tileZ: ZType = 0,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType | null {\r\n\r\n        return GetRandomEmptyTileXY(this, tileZ, out);\r\n    }\r\n\r\n    getTileXYAtDirection(\r\n        chess: IChess | XYType,\r\n        directions: number | number[] | string | null,\r\n        distance: number | number[] | DistanceConfig,\r\n        out?: XYType | XYType[] | true\r\n    ): XYType | XYType[] | null {\r\n\r\n        return GetTileXYAtDirection(this, chess, directions, distance, out);\r\n    }\r\n\r\n    getWrapTileXY(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType {\r\n\r\n        return GetWrapTileXY(this, tileX, tileY, out)\r\n    }\r\n\r\n    gridAlign(\r\n        chess?: IChess,\r\n        tileX?: XType,\r\n        tileY?: YType\r\n    ): this {\r\n\r\n        GridAlign(this, chess, tileX, tileY);\r\n        return this;\r\n    }\r\n\r\n    hasBlocker(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        tileZ?: ZType\r\n    ): boolean {\r\n\r\n        return HasBlocker(this, tileX, tileY, tileZ);\r\n    }\r\n\r\n    hasChess(\r\n        chess: IChess\r\n    ): boolean {\r\n\r\n        return HasChess(this, chess);\r\n    }\r\n\r\n    hasEdgeBlocker(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        tileZ: ZType | undefined,\r\n        direction: number\r\n    ): boolean {\r\n\r\n        return HasEdgeBlocker(this, tileX, tileY, tileZ, direction);\r\n    }\r\n\r\n    isAngleInCone(\r\n        chessA: IChess | XYType,\r\n        chessB: IChess | XYType,\r\n        face: number,\r\n        cone: number\r\n    ): boolean {\r\n\r\n        return IsAngleInCone(this, chessA, chessB, face, cone);\r\n    }\r\n\r\n    isDirectionInCone(\r\n        chessA: IChess | XYType,\r\n        chessB: IChess | XYType,\r\n        face: number,\r\n        cone: number\r\n    ): boolean {\r\n\r\n        return IsDirectionInCone(this, chessA, chessB, face, cone);\r\n    }\r\n\r\n    isOverlappingPoint(\r\n        worldX: number,\r\n        worldY: number,\r\n        tileZ?: ZType\r\n    ): boolean {\r\n\r\n        return IsOverlappingPoint(this, worldX, worldY, tileZ);\r\n    }\r\n\r\n    lineToTileXYArray(\r\n        startX: number,\r\n        startY: number,\r\n        endX: number,\r\n        endY: number,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return LineToTileXYArray(this, startX, startY, endX, endY, out);\r\n    }\r\n\r\n    mirror(\r\n        tileXY: XYType,\r\n        mode: MirrorMode | MirrorModeString,\r\n        originTileXY: XYType | null = null,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType {\r\n\r\n        return Mirror(this, tileXY, mode, originTileXY, out);\r\n    }\r\n\r\n    offset(\r\n        tileXY: XYType,\r\n        offsetTileX: number,\r\n        offsetTileY: number,\r\n        out?: XYType | true\r\n    ): XYType {\r\n\r\n        return Offset(this, tileXY, offsetTileX, offsetTileY, out);\r\n    }\r\n\r\n    removeAllChess(\r\n        destroy: boolean = false,\r\n        fromBoardRemove: boolean = false\r\n    ): this {\r\n\r\n        RemoveAllChess(this, destroy, fromBoardRemove);\r\n        return this;\r\n    }\r\n\r\n    removeChess(\r\n        chess: IChess | null | undefined,\r\n        tileX?: XType,\r\n        tileY?: YType,\r\n        tileZ?: ZType,\r\n        destroy: boolean = false,\r\n        fromBoardRemove: boolean = false\r\n    ): this {\r\n\r\n        RemoveChess(this, chess, tileX, tileY, tileZ, destroy, fromBoardRemove);\r\n        return this;\r\n    }\r\n\r\n    ringToTileXYArray(\r\n        centerTileXY: XYType,\r\n        radius: number = 1,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return RingToTileXYArray(this, centerTileXY, radius, out);\r\n    }\r\n\r\n    rotate(\r\n        tileXY: XYType,\r\n        direction: number,\r\n        originTileXY: XYType | null = null,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType {\r\n\r\n        return Rotate(this, tileXY, direction, originTileXY, out);\r\n    }\r\n\r\n    setBoardWidth(\r\n        width: number = 0\r\n    ): this {\r\n\r\n        SetBoardWidth(this, width);\r\n        return this\r\n    }\r\n\r\n    setBoardHeight(\r\n        height: number = 0\r\n    ): this {\r\n\r\n        SetBoardHeight(this, height);\r\n        return this;\r\n    }\r\n\r\n    setTileZ(\r\n        chess: IChess,\r\n        tileZ: ZType\r\n    ): this {\r\n\r\n        SetTileZ(this, chess, tileZ);\r\n        return this;\r\n    }\r\n\r\n    shapeToTileXYArray(\r\n        shape: ShapeType,\r\n        containsCallback: ContainsCallbackType,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return ShapeToTileXYArray(this, shape, containsCallback, out);\r\n    }\r\n\r\n    swapChess(\r\n        chessA: IChess,\r\n        chessB: IChess,\r\n        align: boolean = true\r\n    ): this {\r\n\r\n        SwapChess(this, chessA, chessB, align);\r\n        return this;\r\n    }\r\n\r\n    tileXYArrayToChessArray(\r\n        tileXYArray: XYType[],\r\n        tileZ?: ZType,\r\n        out: IChess[] = []\r\n    ): IChess[] {\r\n\r\n        return TileXYArrayToChessArray(this, tileXYArray, tileZ, out);\r\n    }\r\n\r\n    tileXYToChessArray(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        out: IChess[] = []\r\n    ): IChess[] {\r\n\r\n        return TileXYToChessArray(this, tileX, tileY, out);\r\n    }\r\n\r\n    tileXYZToChess(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        tileZ: ZType\r\n    ): IChess | undefined {\r\n\r\n        return TileXYZToChess(this, tileX, tileY, tileZ);\r\n    }\r\n\r\n    tileZToChessArray(\r\n        tileZ: ZType,\r\n        out: IChess[] = []\r\n    ): IChess[] {\r\n\r\n        return TileZToChessArray(this, tileZ, out);\r\n    }\r\n\r\n    tileXYArrayToWorldXYArray(\r\n        tileXYArray: XYType[],\r\n        out: Vec2Type[] = []\r\n    ): Vec2Type[] {\r\n\r\n        return TileXYArrayToWorldXYArray(this, tileXYArray, out);\r\n    }\r\n\r\n    tileXYToWorldXY(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return TileXYToWorldXY(this, tileX, tileY, out);\r\n    }\r\n\r\n    worldXYSnapToGrid(\r\n        worldX: number,\r\n        worldY: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return WorldXYSnapToGrid(this, worldX, worldY, out);\r\n    }\r\n\r\n    worldXYToChess(\r\n        worldX: number,\r\n        worldY: number,\r\n        tileZ?: ZType,\r\n        out?: IChess[]\r\n    ): IChess | IChess[] {\r\n\r\n        return WorldXYToChess(this, worldX, worldY, tileZ, out);\r\n    }\r\n\r\n    worldXYToTileXY(\r\n        worldX: number,\r\n        worldY: number,\r\n        out?: XYType | true\r\n    ): XYType {\r\n\r\n        return WorldXYToTileXY(this, worldX, worldY, out);\r\n    }\r\n}", "import { LogicBoard } from './LogicBoard';\r\n\r\nexport class Board extends LogicBoard {\r\n\r\n}", "import { ChessToTileXYZ } from './ChessToTileXYZ';\r\nimport { Contains } from './Contains';\r\nimport { DirectionBetween } from './DirectionBetween';\r\nimport { ForEachTileXY } from './ForEachTileXY';\r\nimport { GetDistance } from './GetDistance';\r\nimport { GetOppositeDirection } from './GetOppositeDirection';\r\nimport { GetTileXYAtDirection } from './GetTileXYAtDirection';\r\nimport { GetWrapTileXY } from './GetWrapTileXY';\r\nimport { IsDirectionInCone } from './IsDirectionInCone';\r\nimport { TileXYArrayToChessArray } from './TileXYArrayToChessArray';\r\nimport { TileXYToChessArray } from './TileXYToChessArray';\r\nimport { TileXYZToChess } from './TileXYZToChess';\r\nimport { TileZToChessArray } from './TileZToChessArray';\r\n\r\nexport {\r\n    ChessToTileXYZ,\r\n    Contains,\r\n    DirectionBetween,\r\n    ForEachTileXY,\r\n    GetDistance,\r\n    GetOppositeDirection,\r\n    GetTileXYAtDirection,\r\n    GetWrapTileXY,\r\n    IsDirectionInCone,\r\n    TileXYArrayToChessArray,\r\n    TileXYToChessArray,\r\n    TileXYZToChess,\r\n    TileZToChessArray\r\n}\r\n", "import { AngleBetween } from './AngleBetween';\r\nimport { AngleSnapToDirection } from './AngleSnapToDirection';\r\nimport { AngleToward } from './AngleToward';\r\nimport { GetGridPoints } from './GetGridPoints';\r\nimport { GridAlign } from './GridAlign';\r\nimport { IsAngleInCone } from './IsAngleInCone';\r\nimport { IsOverlappingPoint } from './IsOverlappingPoint';\r\nimport { TileXYArrayToWorldXYArray } from './TileXYArrayToWorldXYArray';\r\nimport { TileXYToWorldXY } from './TileXYToWorldXY';\r\nimport { WorldXYSnapToGrid } from './WorldXYSnapToGrid';\r\nimport { WorldXYToChess } from './WorldXYToChess';\r\nimport { WorldXYToTileXY } from './WorldXYToTileXY';\r\n\r\nexport {\r\n    AngleBetween,\r\n    AngleSnapToDirection,\r\n    AngleToward,\r\n    GetGridPoints,\r\n    GridAlign,\r\n    IsAngleInCone,\r\n    IsOverlappingPoint,\r\n    TileXYArrayToWorldXYArray,\r\n    TileXYToWorldXY,\r\n    WorldXYSnapToGrid,\r\n    WorldXYToChess,\r\n    WorldXYToTileXY\r\n}", "import { AddChess } from './AddChess';\r\nimport { GetAllChess } from './GetAllChess';\r\nimport { HasChess } from './HasChess';\r\nimport { RemoveAllChess } from './RemoveAllChess';\r\nimport { RemoveChess } from './RemoveChess';\r\nimport { SetTileZ } from './SetTileZ';\r\nimport { SwapChess } from './SwapChess';\r\n\r\nexport {\r\n    AddChess,\r\n    GetAllChess,\r\n    HasChess,\r\n    RemoveAllChess,\r\n    RemoveChess,\r\n    SetTileZ,\r\n    SwapChess\r\n}", "import { HasBlocker } from './HasBlocker';\r\nimport { HasEdgeBlocker } from './HasEdgeBlocker';\r\n\r\nexport {\r\n    HasBlocker,\r\n    HasEdgeBlocker\r\n}", "import { GetEmptyTileXYArray } from './GetEmptyTileXYArray';\r\nimport { GetRandomEmptyTileXY } from './GetRandomEmptyTileXY';\r\n\r\nexport {\r\n    GetEmptyTileXYArray,\r\n    GetRandomEmptyTileXY\r\n}", "import { AreNeighbors } from './AreNeighbors';\r\nimport { GetNeighborChess } from './GetNeighborChess';\r\nimport { GetNeighborChessDirection } from './GetNeighborChessDirection';\r\nimport { GetNeighborTileDirection } from './GetNeighborTileDirection';\r\nimport { GetNeighborTileXY } from './GetNeighborTileXY';\r\nimport { GetNeighborTileXYAtAngle } from './GetNeighborTileXYAtAngle';\r\n\r\nexport {\r\n    AreNeighbors,\r\n    GetNeighborChess,\r\n    GetNeighborChessDirection,\r\n    GetNeighborTileDirection,\r\n    GetNeighborTileXY,\r\n    GetNeighborTileXYAtAngle\r\n}", "import { Fit } from './Fit';\r\nimport { Mirror } from './Mirror';\r\nimport { Offset } from './Offset';\r\nimport { Rotate } from './Rotate';\r\n\r\nexport {\r\n    Fit,\r\n    Mirror,\r\n    Offset,\r\n    Rotate\r\n}", "import { LineToTileXYArray } from './LineToTileXYArray';\r\nimport { ShapeToTileXYArray } from './ShapeToTileXYArray';\r\n\r\nexport {\r\n    LineToTileXYArray,\r\n    ShapeToTileXYArray\r\n}", "import { FilledRingToTileXYArray } from './FilledRingToTileXYArray';\r\nimport { RingToTileXYArray } from './RingToTileXYArray';\r\n\r\nexport {\r\n    FilledRingToTileXYArray,\r\n    RingToTileXYArray\r\n}", "import { BaseBoard } from './BaseBoard';\r\nimport { LogicBoard } from './LogicBoard';\r\nimport { Board } from './Board';\r\n\r\nimport * as TileXY from './tilexy';\r\nimport * as WorldXY from './worldxy';\r\nimport * as Chess from './chess';\r\nimport * as Blocker from './blocker';\r\nimport * as Empty from './empty';\r\nimport * as Nieghbors from './neighbors';\r\nimport * as Transform from './transform';\r\nimport * as Shape from './shape';\r\nimport * as Ring from './ring';\r\n\r\nexport {\r\n    BaseBoard,\r\n    LogicBoard,\r\n    Board,\r\n\r\n    TileXY,\r\n    WorldXY,\r\n    Chess,\r\n    Blocker,\r\n    Empty,\r\n    Nieghbors,\r\n    Transform,\r\n    Shape,\r\n    Ring\r\n}", "export enum LayoutMode {\r\n    'orthogonal' = 0,\r\n    'isometric' = 1\r\n}\r\n\r\nexport type LayoutModeString = 'orthogonal' | 'isometric';\r\n\r\nexport enum DirMode {\r\n    '4dir' = 4,\r\n    '8dir' = 8\r\n};\r\n\r\nexport type DirModeString = '4dir' | '8dir';\r\n\r\nexport interface IConfig {\r\n    x?: number,\r\n    y?: number,\r\n    cellWidth?: number,\r\n    cellHeight?: number,\r\n    type?: LayoutMode | LayoutModeString,\r\n    dir?: DirMode | DirModeString\r\n}\r\n\r\nexport interface IState {\r\n    x?: number,\r\n    y?: number,\r\n    cellWidth?: number,\r\n    cellHeight?: number,\r\n    type?: LayoutMode | LayoutModeString,\r\n    dir?: DirMode | DirModeString\r\n}\r\n\r\nexport interface IQuadBase {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n\r\n    _halfWidth: number,\r\n    _halfHeight: number,\r\n    mode: LayoutMode,\r\n    directions: DirMode,\r\n};", "import {\r\n    IQuadBase, IConfig, IState,\r\n    LayoutMode, LayoutModeString,\r\n    DirMode, DirModeString\r\n} from './IQuadBase';\r\n\r\nexport class QuadBase implements IQuadBase {\r\n    x: number;\r\n    y: number;\r\n\r\n    _width: number;\r\n    _height: number;\r\n    _halfWidth: number;\r\n    _halfHeight: number;\r\n\r\n    mode: LayoutMode;\r\n    directions: DirMode;\r\n\r\n    constructor({\r\n        x = 0,\r\n        y = 0,\r\n        cellWidth = 0,\r\n        cellHeight = 0,\r\n        type = LayoutMode.orthogonal,\r\n        dir = DirMode['4dir']\r\n    }: IConfig = {}) {\r\n\r\n        this.setOriginPosition(x, y);\r\n        this.setCellSize(cellWidth, cellHeight);\r\n        this.setType(type);\r\n        this.setDirectionMode(dir);\r\n    }\r\n\r\n    fromJSON({\r\n        x = 0,\r\n        y = 0,\r\n        cellWidth = 0,\r\n        cellHeight = 0,\r\n        type = LayoutMode.orthogonal,\r\n        dir = DirMode['4dir']\r\n    }: IState = {}): this {\r\n\r\n        this.setType(type);\r\n        this.setDirectionMode(dir);\r\n        this.setOriginPosition(x, y);\r\n        this.setCellSize(cellWidth, cellHeight);\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON(): IState {\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n            cellWidth: this.cellWidth,\r\n            cellHeight: this.cellHeight,\r\n            type: this.mode,\r\n            dir: this.directions\r\n        }\r\n    }\r\n\r\n    setOriginPosition(x: number = 0, y: number = 0): this {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n        this._halfWidth = value / 2;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n        this._halfHeight = value / 2;\r\n    }\r\n\r\n    setCellSize(width: number = 0, height: number = 0) {\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    get cellWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    set cellWidth(value: number) {\r\n        this.width = value;\r\n    }\r\n\r\n    get cellHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    set cellHeight(value: number) {\r\n        this.height = value;\r\n    }\r\n\r\n    setType(type: LayoutMode | LayoutModeString = LayoutMode.orthogonal): this {\r\n\r\n        if (typeof (type) === 'string') {\r\n            type = LayoutMode[type]\r\n        }\r\n\r\n        this.mode = type;\r\n        return this;\r\n    }\r\n\r\n    setDirectionMode(mode: DirMode | DirModeString = DirMode['4dir']): this {\r\n\r\n        if (typeof (mode) === 'string') {\r\n            mode = DirMode[mode];\r\n        }\r\n\r\n        this.directions = mode;\r\n        return this;\r\n    }\r\n}", "import { IQuadBase, LayoutMode, DirMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { Between as GetAngle } from '../../../utils/math/angle/Between';\r\nimport { RadToDeg } from '../../../utils/math/angle/RadToDeg';\r\n\r\nexport function DirectionBetween(\r\n    quad: IQuadBase,\r\n    tileA: Vec2Type,\r\n    tileB: Vec2Type,\r\n    round: boolean = true\r\n): number {\r\n\r\n    let direction: number;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n        case LayoutMode.isometric:\r\n            if (tileA.y === tileB.y) {\r\n                direction = (tileB.x >= tileA.x) ? 0 : 2;\r\n            } else if (tileA.x === tileB.x) {\r\n                direction = (tileB.y >= tileA.y) ? 1 : 3;\r\n            } else if (quad.directions === DirMode['4dir']) {\r\n                let angle = RadToDeg(GetAngle(tileA.x, tileA.y, tileB.x, tileB.y)); // -180~180\r\n                if (angle < 0) {\r\n                    angle += 360;\r\n                }\r\n                direction = angle / 90;\r\n                if (round) {\r\n                    direction = Math.round(direction);\r\n                }\r\n            } else { // quad.directions === 8\r\n                let dx = tileB.x - tileA.x;\r\n                let dy = tileB.y - tileA.y;\r\n                if (dx === dy) {\r\n                    direction = (dx > 0) ? 4 : 6;\r\n                } else if (dx === -dy) {\r\n                    direction = (dx > 0) ? 7 : 5;\r\n                } else {\r\n                    let angle = RadToDeg(Math.atan2(dy, dx));\r\n                    if (angle < 0) {\r\n                        angle += 360;\r\n                    }\r\n                    let steps = angle / 45;\r\n                    if (round) {\r\n                        steps = Math.round(steps);\r\n                    }\r\n\r\n                    if ((steps >= 0) && (steps < 1)) {\r\n                        direction = steps;  // (steps - 0) + 0\r\n                    } else if ((steps >= 1) && (steps < 2)) {\r\n                        direction = (steps + 3);  // (steps - 1) + 4\r\n                    } else if ((steps >= 2) && (steps < 3)) {\r\n                        direction = (steps - 1);  // (steps - 2) + 1\r\n                    } else if ((steps >= 3) && (steps < 4)) {\r\n                        direction = (steps + 2);  // (steps - 3) + 5\r\n                    } else if ((steps >= 4) && (steps < 5)) {\r\n                        direction = (steps - 2);  // (steps - 4) + 2\r\n                    } else if ((steps >= 5) && (steps < 6)) {\r\n                        direction = (steps + 1);  // (steps - 5) + 6\r\n                    } else if ((steps >= 6) && (steps < 7)) {\r\n                        direction = (steps - 3);  // (steps - 6) + 3\r\n                    } else {  // if ((steps >= 7) && (steps < 8))\r\n                        direction = steps;  // (steps - 7) + 7\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    if (direction === quad.directions) {\r\n        direction = 0;\r\n    }\r\n    return direction;\r\n}", "import { IGrid } from '../IGrid';\r\nimport { Wrap } from '../../../utils/math/Wrap';\r\n\r\nexport function DirectionNormalize(\r\n    grid: IGrid,\r\n    direction: number\r\n): number {\r\n\r\n    return Wrap(direction, 0, grid.directions);\r\n}", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetDistance(\r\n    quad: IQuadBase,\r\n    tileA: Vec2Type,\r\n    tileB: Vec2Type,\r\n    roughMode: boolean = false\r\n): number {\r\n\r\n    let dx = tileB.x - tileA.x;\r\n    let dy = tileB.y - tileA.y;\r\n    let dist: number;\r\n    if (roughMode) {\r\n        dist = Math.abs(dx) + Math.abs(dy);\r\n    } else {\r\n        dist = Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return dist;\r\n}", "import { Vec2Type } from '../IGrid';\r\n\r\nexport function FillPositionArray(\r\n    length: number,\r\n    out: Vec2Type[] = []\r\n): Vec2Type[] {\r\n\r\n    if (out.length === length) {\r\n        // Do nothing\r\n    } else if (out.length < length) {\r\n        for (let i = out.length; i < length; i++) {\r\n            out.push({ x: 0, y: 0 });\r\n        }\r\n    } else { // out.length < length\r\n        out.length = length;\r\n    }\r\n\r\n    return out;\r\n}", "import { IQuadBase, LayoutMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetWorldXY(\r\n    quad: IQuadBase,\r\n    tileX: number | Vec2Type,\r\n    tileY: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (tileX) === 'object') {\r\n        tileY = tileX.y;\r\n        tileX = tileX.x;\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globWorldXY;\r\n    }\r\n\r\n    let worldX, worldY;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n            worldX = tileX * quad.width;\r\n            worldY = tileY * quad.height;\r\n            break;\r\n        case LayoutMode.isometric:\r\n            worldX = (tileX - tileY) * quad._halfWidth;\r\n            worldY = (tileX + tileY) * quad._halfHeight;\r\n            break;\r\n    }\r\n    worldX += quad.x;\r\n    worldY += quad.y;\r\n    out.x = worldX;\r\n    out.y = worldY;\r\n    return out;\r\n\r\n};\r\n\r\nlet globWorldXY: Vec2Type = { x: 0, y: 0 };", "import { IQuadBase, LayoutMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { FillPositionArray } from '../utils/FillPositionArray';\r\nimport { GetWorldXY } from './GetWorldXY';\r\n\r\nexport function GetGridPoints(\r\n    quad: IQuadBase,\r\n    tileX: number | Vec2Type = 0,\r\n    tileY: number = 0,\r\n    out: Vec2Type[] | true = []\r\n): Vec2Type[] {\r\n\r\n    if (typeof (tileX) === 'object') {\r\n        let tileXY = tileX;\r\n        tileY = tileXY.y;\r\n        tileX = tileXY.x;\r\n    }\r\n    if (out === true) {\r\n        out = globPoints;\r\n    }\r\n\r\n    FillPositionArray(4, out);\r\n\r\n    let x: number,\r\n        y: number;\r\n    ({ x, y } = GetWorldXY(quad, tileX, tileY))\r\n\r\n    let halfW = quad._halfWidth;\r\n    let halfH = quad._halfHeight;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n            // top-right\r\n            out[0].x = x + halfW;\r\n            out[0].y = y - halfH;\r\n            // bottom-right\r\n            out[1].x = x + halfW;\r\n            out[1].y = y + halfH;\r\n            // bottom-left\r\n            out[2].x = x - halfW;\r\n            out[2].y = y + halfH;\r\n            // top-left\r\n            out[3].x = x - halfW;\r\n            out[3].y = y - halfH;\r\n            break;\r\n        case LayoutMode.isometric:\r\n            // 0\r\n            out[0].x = x + halfW;\r\n            out[0].y = y;\r\n            // 90\r\n            out[1].x = x;\r\n            out[1].y = y + halfH;\r\n            // 180\r\n            out[2].x = x - halfW;\r\n            out[2].y = y;\r\n            // 270\r\n            out[3].x = x;\r\n            out[3].y = y - halfH;\r\n            break;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nlet globPoints: Vec2Type[] = []", "// orthogonal or isometric\r\nexport type DirectionToDeltaXYType = [number, number][];\r\n\r\nconst OrthogonalMap: DirectionToDeltaXYType = [\r\n    [1, 0],\r\n    [0, 1],\r\n    [-1, 0],\r\n    [0, -1],\r\n    [1, 1],\r\n    [-1, 1],\r\n    [-1, -1],\r\n    [1, -1]\r\n];\r\nconst IsometricMap: DirectionToDeltaXYType = OrthogonalMap;\r\n\r\nexport {\r\n    OrthogonalMap,\r\n    IsometricMap\r\n};", "import {\r\n    OrthogonalMap as OrthogonalMapIn,\r\n    IsometricMap as IsometricMapIn,\r\n    DirectionToDeltaXYType\r\n} from './DirectionToDeltaXY';\r\n\r\nexport type DeltaXYToDirectionType = {\r\n    [x: number]: {\r\n        [y: number]: number\r\n    }\r\n}\r\n\r\nfunction ReverseDirMap(\r\n    dirMap: DirectionToDeltaXYType\r\n): DeltaXYToDirectionType {\r\n\r\n    let out: DeltaXYToDirectionType = {},\r\n        entry: [number, number],\r\n        x: number,\r\n        y: number;\r\n    for (let dir in dirMap) {\r\n        entry = dirMap[dir]; // [x, y]\r\n        x = entry[0];\r\n        y = entry[1];\r\n        if (!out.hasOwnProperty(x)) {\r\n            out[x] = {}\r\n        }\r\n        out[x][y] = parseInt(dir);\r\n    }\r\n    return out;\r\n}\r\n\r\nconst OrthogonalMapOut = ReverseDirMap(OrthogonalMapIn);\r\nconst IsometricMapOut = ReverseDirMap(IsometricMapIn);\r\n\r\nexport {\r\n    OrthogonalMapOut as OrthogonalMap,\r\n    IsometricMapOut as IsometricMap\r\n};", "import { IQuadBase, LayoutMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport {\r\n    OrthogonalMap,\r\n    IsometricMap,\r\n    DeltaXYToDirectionType\r\n} from './DeltaTileXYToDirection';\r\n\r\nexport function GetNeighborTileDirection(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    neighborTileXY: Vec2Type\r\n): number | null {\r\n\r\n    let deltaTileXYToDirMap: DeltaXYToDirectionType;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n            deltaTileXYToDirMap = OrthogonalMap;\r\n            break;\r\n        case LayoutMode.isometric:\r\n            deltaTileXYToDirMap = IsometricMap;\r\n            break;\r\n    }\r\n\r\n    let deltaTileX: number = neighborTileXY.x - srcTileXY.x;\r\n    let deltaTileY: number = neighborTileXY.y - srcTileXY.y;\r\n    if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\r\n        let xEntry = deltaTileXYToDirMap[deltaTileX]\r\n        if (xEntry.hasOwnProperty(deltaTileY)) {\r\n            return xEntry[deltaTileY];\r\n        }\r\n    }\r\n    return null;\r\n}", "import { IQuadBase, LayoutMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { OrthogonalMap, IsometricMap } from './DirectionToDeltaXY';\r\n\r\nexport function GetTileXYAtDirection(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    direction: number,\r\n    distance: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    let deltaTileX: number,\r\n        deltaTileY: number;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n            deltaTileX = OrthogonalMap[direction][0];\r\n            deltaTileY = OrthogonalMap[direction][1];\r\n            break;\r\n        case LayoutMode.isometric:\r\n            deltaTileX = IsometricMap[direction][0];\r\n            deltaTileY = IsometricMap[direction][1];\r\n            break;\r\n    }\r\n\r\n    if (distance === 1) { // Neighbor\r\n        out.x = srcTileXY.x + deltaTileX;\r\n        out.y = srcTileXY.y + deltaTileY;\r\n    } else {\r\n        out.x = srcTileXY.x + (distance * deltaTileX);\r\n        out.y = srcTileXY.y + (distance * deltaTileY);\r\n    }\r\n    return out;\r\n\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { GetTileXYAtDirection } from './GetTileXYAtDirection';\r\n\r\nexport function GetNeighborTileXY(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    direction: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    return GetTileXYAtDirection(quad, srcTileXY, direction, 1, out);\r\n}", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetOppositeDirection(\r\n    quad: IQuadBase,\r\n    tileX: number | Vec2Type,\r\n    tileY: number | undefined | null,\r\n    direction: number\r\n): number {\r\n\r\n    return oppositeDirectionMap[direction];\r\n}\r\n\r\nconst oppositeDirectionMap = {\r\n    0: 2,  // Left\r\n    1: 3,  // Down\r\n    2: 0,  // Right\r\n    3: 1,  // Up\r\n    4: 6,  // Left-down\r\n    5: 7,  // Down-right\r\n    6: 4,  // Right-up\r\n    7: 5   // Up-left\r\n}", "import { IQuadBase, LayoutMode } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetTileXY(\r\n    quad: IQuadBase,\r\n    worldX: number | Vec2Type,\r\n    worldY?: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (worldX) === 'object') {\r\n        worldY = worldX.y;\r\n        worldX = worldX.x;\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    worldX -= quad.x;\r\n    worldY -= quad.y;\r\n    let tmpx = worldX / quad.width;\r\n    let tmpy = worldY / quad.height;\r\n    switch (quad.mode) {\r\n        case LayoutMode.orthogonal:\r\n            out.x = Math.round(tmpx);\r\n            out.y = Math.round(tmpy);\r\n            break;\r\n        case LayoutMode.isometric:\r\n            out.x = Math.round(+tmpx + tmpy);\r\n            out.y = Math.round(-tmpx + tmpy);\r\n            break;\r\n    }\r\n    return out;\r\n};\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type, MirrorMode, MirrorModeString } from '../IGrid';\r\n\r\nexport function Mirror(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    mode: MirrorMode | MirrorModeString,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (mode) === 'string') {\r\n        mode = MirrorMode[mode];\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    out.x = (mode & 1) ? -srcTileXY.x : srcTileXY.x;\r\n    out.y = (mode & 2) ? -srcTileXY.y : srcTileXY.y;\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function Offset(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    offsetTileX: number,\r\n    offsetTileY: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    let newTileX = srcTileXY.x + offsetTileX;\r\n    let newTileY = srcTileXY.y + offsetTileY;\r\n    out.x = newTileX;\r\n    out.y = newTileY;\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { Offset } from './Offset';\r\n\r\nexport function RingToTileXYArray(\r\n    quad: IQuadBase,\r\n    centerTileXY: Vec2Type,\r\n    radius: number,\r\n    out: Vec2Type[] = []\r\n): Vec2Type[] {\r\n\r\n    let i: number, j: number;\r\n    // Top-right to bottom-right\r\n    i = radius;\r\n    for (j = -radius; j <= radius; j++) {\r\n        out.push(Offset(quad, centerTileXY, i, j));\r\n    }\r\n    // Bottom-right to bottom-left\r\n    j = radius;\r\n    for (i = radius - 1; i >= -radius; i--) {\r\n        out.push(Offset(quad, centerTileXY, i, j));\r\n    }\r\n    // Bottom-left to top-left\r\n    i = -radius;\r\n    for (j = radius - 1; j >= -radius; j--) {\r\n        out.push(Offset(quad, centerTileXY, i, j));\r\n    }\r\n    // Top-left to top-right\r\n    j = -radius;\r\n    for (i = -radius + 1; i <= radius - 1; i++) {\r\n        out.push(Offset(quad, centerTileXY, i, j));\r\n    }\r\n\r\n    return out;\r\n}", "import { IQuadBase } from './IQuadBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { Wrap } from '../../../utils/math/Wrap';\r\n\r\nexport function Rotate(\r\n    quad: IQuadBase,\r\n    srcTileXY: Vec2Type,\r\n    dir: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    dir = Wrap(dir, 0, 3);\r\n    let newTileX: number,\r\n        newTileY: number;\r\n    switch (dir) {\r\n        case 1:\r\n            newTileX = -srcTileXY.y;\r\n            newTileY = srcTileXY.x;\r\n            break;\r\n        case 2:\r\n            newTileX = -srcTileXY.x;\r\n            newTileY = -srcTileXY.y;\r\n            break;\r\n        case 3:\r\n            newTileX = srcTileXY.y;\r\n            newTileY = -srcTileXY.x;\r\n            break;\r\n        default:\r\n            newTileX = srcTileXY.x;\r\n            newTileY = srcTileXY.y;\r\n            break;\r\n    }\r\n    out.x = newTileX;\r\n    out.y = newTileY;\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IGrid } from '../IGrid';\r\n\r\nexport function SaveOrigin(\r\n    grid: IGrid\r\n): void {\r\n    grid._savedOriginX = grid.x;\r\n    grid._savedOriginY = grid.y;\r\n}\r\n\r\nexport function RestoreOrigin(\r\n    grid: IGrid\r\n): void {\r\n    grid.x = grid._savedOriginX;\r\n    grid.y = grid._savedOriginY;\r\n}", "import { IGrid, Vec2Type } from '../IGrid';\r\nimport { QuadBase } from './QuadBase';\r\n\r\nimport { DirectionBetween } from './DirectionBetween';\r\nimport { DirectionNormalize } from '../utils/DirectionNormalize';\r\nimport { GetDistance } from './GetDistance';\r\nimport { GetGridPoints } from './GetGridPoints';\r\nimport { GetNeighborTileDirection } from './GetNeighborTileDirection';\r\nimport { GetNeighborTileXY } from './GetNeighborTileXY';\r\nimport { GetOppositeDirection } from './GetOppositeDirection';\r\nimport { GetTileXY } from './GetTileXY';\r\nimport { GetTileXYAtDirection } from './GetTileXYAtDirection';\r\nimport { GetWorldXY } from './GetWorldXY';\r\nimport { MirrorMode, MirrorModeString } from '../IGrid';\r\nimport { Mirror } from './Mirror';\r\nimport { Offset } from './Offset';\r\nimport { RingToTileXYArray } from './RingToTileXYArray';\r\nimport { Rotate } from './Rotate';\r\nimport { SaveOrigin, RestoreOrigin } from '../utils/SaveOrigin';\r\n\r\n\r\nexport class Quad extends QuadBase implements IGrid {\r\n\r\n    _savedOriginX: number;\r\n    _savedOriginY: number;\r\n\r\n    get sides() {\r\n        return 4;\r\n    }\r\n\r\n    // Direction of neighbors\r\n    get allDirections() {\r\n        return (this.directions === 4) ? ALLDIR4 : ALLDIR8;\r\n    }\r\n\r\n    // Board-match\r\n    get halfDirections() {\r\n        return (this.directions === 4) ? HALFDIR4 : HALFDIR8;\r\n    }\r\n\r\n    directionBetween(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        round: boolean = true\r\n    ): number {\r\n\r\n        return DirectionBetween(this, tileA, tileB, round);\r\n    }\r\n\r\n    directionNormalize(\r\n        direction: number\r\n    ): number {\r\n\r\n        return DirectionNormalize(this, direction);\r\n    }\r\n\r\n    getDistance(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        roughMode: boolean = false\r\n    ): number {\r\n\r\n        return GetDistance(this, tileA, tileB, roughMode);\r\n    }\r\n\r\n    getGridPoints(\r\n        tileX: number | Vec2Type = 0,\r\n        tileY: number = 0,\r\n        out: Vec2Type[] | true = []\r\n    ): Vec2Type[] {\r\n\r\n        return GetGridPoints(this, tileX, tileY, out);\r\n    }\r\n\r\n    getNeighborTileDirection(\r\n        srcTileXY: Vec2Type,\r\n        neighborTileXY: Vec2Type\r\n    ): number | null {\r\n\r\n        return GetNeighborTileDirection(this, srcTileXY, neighborTileXY);\r\n    }\r\n\r\n    getNeighborTileXY(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetNeighborTileXY(this, srcTileXY, direction, out);\r\n    }\r\n\r\n    getOppositeDirection(\r\n        tileX: number | Vec2Type,\r\n        tileY: number | undefined | null,\r\n        direction: number\r\n    ): number {\r\n\r\n        return GetOppositeDirection(this, tileX, tileY, direction);\r\n    }\r\n\r\n    getTileXY(\r\n        worldX: number | Vec2Type,\r\n        worldY?: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetTileXY(this, worldX, worldY, out);\r\n    }\r\n\r\n    getTileXYAtDirection(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        distance: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetTileXYAtDirection(this, srcTileXY, direction, distance, out);\r\n    }\r\n\r\n    getWorldXY(\r\n        tileX: number | Vec2Type,\r\n        tileY?: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetWorldXY(this, tileX, tileY, out);\r\n    }\r\n\r\n    mirror(\r\n        srcTileXY: Vec2Type,\r\n        mode: MirrorMode | MirrorModeString,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Mirror(this, srcTileXY, mode, out);\r\n    }\r\n\r\n    offset(\r\n        srcTileXY: Vec2Type,\r\n        offsetTileX: number,\r\n        offsetTileY: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Offset(this, srcTileXY, offsetTileX, offsetTileY, out);\r\n    }\r\n\r\n    ringToTileXYArray(\r\n        centerTileXY: Vec2Type,\r\n        radius: number,\r\n        out: Vec2Type[] = []\r\n    ): Vec2Type[] {\r\n\r\n        return RingToTileXYArray(this, centerTileXY, radius, out);\r\n    }\r\n\r\n    rotate(srcTileXY: Vec2Type,\r\n        dir: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Rotate(this, srcTileXY, dir, out);\r\n    }\r\n\r\n    restoreOrigin(): this {\r\n\r\n        RestoreOrigin(this);\r\n        return this\r\n    }\r\n\r\n    saveOrigin(): this {\r\n\r\n        SaveOrigin(this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ALLDIR4 = [0, 1, 2, 3];\r\nconst ALLDIR8 = [0, 1, 2, 3, 4, 5, 6, 7];\r\nconst HALFDIR4 = [0, 1];\r\nconst HALFDIR8 = [0, 1, 4, 5];", "export enum LayoutMode {\r\n    ODD_R = 0,\r\n    EVEN_R = 1,\r\n    ODD_Q = 2,\r\n    EVEN_Q = 3\r\n}\r\n\r\nexport type LayoutModeString = 'ODD_R' | 'EVEN_R' | 'ODD_Q' | 'EVEN_Q'\r\n\r\nexport enum StaggerAxis {\r\n    y = 0,\r\n    flat = 0,\r\n    x = 1,\r\n    pointy = 1\r\n}\r\n\r\nexport type StaggerAxisString = 'y' | 'x' | 'flat' | 'pointy';\r\n\r\nexport enum StaggerIndex {\r\n    even = 0,\r\n    odd = 1\r\n}\r\n\r\nexport type StaggerIndexString = 'even' | 'odd';\r\n\r\nexport interface IState {\r\n    x?: number,\r\n    y?: number,\r\n\r\n    radius?: number,\r\n    cellWidth?: number,\r\n    cellHeight?: number,\r\n\r\n    staggerAxis?: StaggerAxis | StaggerAxisString,\r\n    staggerIndex?: StaggerIndex | StaggerIndexString\r\n}\r\n\r\nexport interface IConfig {\r\n    x?: number,\r\n    y?: number,\r\n\r\n    radius?: number | undefined,\r\n    cellWidth?: number,\r\n    cellHeight?: number,\r\n\r\n    staggerAxis?: StaggerAxis | StaggerAxisString,\r\n    staggerIndex?: StaggerIndex | StaggerIndexString\r\n}\r\n\r\nexport interface IHexagonBase {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n\r\n    _halfWidth: number,\r\n    _halfHeight: number,\r\n    radius: number,\r\n    mode: LayoutMode,\r\n    directions: number,\r\n    staggerAxis: StaggerAxis\r\n};", "import {\r\n    IHexagonBase, IConfig, IState,\r\n    StaggerAxis, StaggerAxisString, StaggerIndex, StaggerIndexString, LayoutMode\r\n} from './IHexagonBase';\r\n\r\nexport class HexagonBase implements IHexagonBase {\r\n    x: number;\r\n    y: number;\r\n\r\n    _width: number;\r\n    _height: number;\r\n    _halfWidth: number;\r\n    _halfHeight: number;\r\n    radius: number;\r\n\r\n    mode: LayoutMode;\r\n    staggerAxis: StaggerAxis;\r\n    staggerIndex: StaggerIndex;\r\n    directions: number;\r\n\r\n    constructor({\r\n        x = 0,\r\n        y = 0,\r\n        radius = undefined,\r\n        cellWidth = 0,\r\n        cellHeight = 0,\r\n        staggerAxis = StaggerAxis.x,\r\n        staggerIndex = StaggerIndex.odd\r\n    }: IConfig = {}) {\r\n\r\n        this.setType(staggerAxis, staggerIndex);\r\n        this.setDirectionMode();\r\n\r\n        this.setOriginPosition(x, y);\r\n\r\n        if (radius !== undefined) {\r\n            this.setRadius(radius);\r\n        } else {\r\n            this.setCellSize(cellWidth, cellHeight);\r\n        }\r\n    }\r\n\r\n    fromJSON({\r\n        x = 0,\r\n        y = 0,\r\n        radius = undefined,\r\n        cellWidth = 0,\r\n        cellHeight = 0,\r\n        staggerAxis = StaggerAxis.x,\r\n        staggerIndex = StaggerIndex.odd\r\n    }: IState = {}): this {\r\n\r\n        this.setType(staggerAxis, staggerIndex);\r\n        this.setDirectionMode();\r\n\r\n        this.setOriginPosition(x, y);\r\n        if (radius !== undefined) {\r\n            this.setRadius(radius);\r\n        } else {\r\n            this.setCellSize(cellWidth, cellHeight);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON(): IState {\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n\r\n            radius: this.radius,\r\n            cellWidth: this.cellWidth,\r\n            cellHeight: this.cellHeight,\r\n            staggerAxis: this.staggerAxis,\r\n            staggerIndex: this.staggerIndex\r\n        }\r\n    }\r\n\r\n    setOriginPosition(x: number, y: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n        this._halfWidth = value / 2;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value;\r\n        this._halfHeight = value / 2;\r\n    }\r\n\r\n    setCellSize(width: number = 0, height: number = 0): this {\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.radius = undefined;\r\n        return this;\r\n    }\r\n\r\n    get cellWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    set cellWidth(value: number) {\r\n        this.width = value;\r\n    }\r\n\r\n    get cellHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    set cellHeight(value: number) {\r\n        this.height = value;\r\n    }\r\n\r\n    setRadius(radius: number = 0): this {\r\n\r\n        let cellWidth: number,\r\n            cellHeight: number;\r\n        if (this.staggerAxis === StaggerAxis.y) {\r\n            cellWidth = 2 * radius;\r\n            cellHeight = SQRT3 * radius;\r\n        } else {\r\n            cellWidth = SQRT3 * radius;\r\n            cellHeight = 2 * radius;\r\n        }\r\n        this.setCellSize(cellWidth, cellHeight);\r\n        this.radius = radius;\r\n        return this;\r\n    }\r\n\r\n    setDirectionMode(): this {\r\n        this.directions = 6;\r\n        return this;\r\n    }\r\n\r\n    setType(\r\n        staggerAxis: StaggerAxis | StaggerAxisString = 1,\r\n        staggerIndex: StaggerIndex | StaggerIndexString = 1\r\n    ): this {\r\n\r\n        if (typeof (staggerAxis) === 'string') {\r\n            staggerAxis = StaggerAxis[staggerAxis]\r\n        }\r\n        if (typeof (staggerIndex) === 'string') {\r\n            staggerIndex = StaggerIndex[staggerIndex]\r\n        }\r\n\r\n        this.staggerAxis = staggerAxis;\r\n        this.staggerIndex = staggerIndex;\r\n        if (staggerAxis === StaggerAxis.y) { // flat\r\n            this.mode = (staggerIndex === StaggerIndex.even) ? LayoutMode.EVEN_Q : LayoutMode.ODD_Q;\r\n        } else { // pointy\r\n            this.mode = (staggerIndex === StaggerIndex.even) ? LayoutMode.EVEN_R : LayoutMode.ODD_R;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst SQRT3 = Math.sqrt(3);", "import { LayoutMode } from './IHexagonBase';\r\n\r\nexport type CubeType = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n}\r\n\r\nexport type ColRowType = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport type QRType = {\r\n    q: number,\r\n    r: number\r\n}\r\n\r\nexport function cr2cube(\r\n    mode: LayoutMode,\r\n    col: number,\r\n    row: number,\r\n    out: CubeType | true = { x: 0, y: 0, z: 0 }\r\n): CubeType {\r\n\r\n    if (out === true) {\r\n        out = globCube;\r\n    }\r\n\r\n    switch (mode) {\r\n        case LayoutMode.ODD_R:\r\n            out.x = col - (row - (row & 1)) / 2;\r\n            out.z = row;\r\n            break;\r\n\r\n        case LayoutMode.EVEN_R:\r\n            out.x = col - (row + (row & 1)) / 2;\r\n            out.z = row;\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n            out.x = col;\r\n            out.z = row - (col - (col & 1)) / 2;\r\n            break;\r\n        case LayoutMode.EVEN_Q:\r\n            out.x = col;\r\n            out.z = row - (col + (col & 1)) / 2;\r\n            break;\r\n    }\r\n    out.y = -out.x - out.z;\r\n    return out;\r\n}\r\n\r\nexport function roundcube(\r\n    x: number | CubeType,\r\n    y?: number,\r\n    z?: number,\r\n    out: CubeType | true = { x: 0, y: 0, z: 0 }\r\n): CubeType {\r\n\r\n    if (typeof (x) !== 'number') {\r\n        out = x;\r\n        x = out.x;\r\n        y = out.y;\r\n        z = out.z;\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globCube;\r\n    }\r\n\r\n    let rx = Math.round(x);\r\n    let ry = Math.round(y);\r\n    let rz = Math.round(z);\r\n\r\n    let dx = Math.abs(rx - x);\r\n    let dy = Math.abs(ry - y);\r\n    let dz = Math.abs(rz - z);\r\n\r\n    if ((dx > dy) && (dx > dz)) {\r\n        rx = -ry - rz;\r\n    } else if (dy > dz) {\r\n        ry = -rx - rz;\r\n    } else {\r\n        rz = -rx - ry;\r\n    }\r\n    out.x = rx;\r\n    out.y = ry;\r\n    out.z = rz;\r\n    return out;\r\n}\r\n\r\nexport function cube2cr(\r\n    mode: LayoutMode,\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    out: ColRowType | true = { x: 0, y: 0 }\r\n): ColRowType {\r\n\r\n    if (out === true) {\r\n        out = globCR;\r\n    }\r\n\r\n    switch (mode) {\r\n        case LayoutMode.ODD_R:\r\n            out.x = x + (z - (z & 1)) / 2;\r\n            out.y = z;\r\n            break;\r\n        case LayoutMode.EVEN_R:\r\n            out.x = x + (z + (z & 1)) / 2;\r\n            out.y = z;\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n            out.x = x;\r\n            out.y = z + (x - (x & 1)) / 2;\r\n            break;\r\n        case LayoutMode.EVEN_Q:\r\n            out.x = x;\r\n            out.y = z + (x + (x & 1)) / 2;\r\n            break;\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function qr2cube(\r\n    q: number,\r\n    r: number,\r\n    out: CubeType | true = { x: 0, y: 0, z: 0 }\r\n): CubeType {\r\n\r\n    if (out === true) {\r\n        out = globCube;\r\n    }\r\n    out.x = q;\r\n    out.y = -q - r;\r\n    out.z = r;\r\n    return out;\r\n}\r\n\r\nexport function cube2qr(\r\n    x: number,\r\n    y: number,\r\n    z: number,\r\n    out: QRType | true = { q: 0, r: 0 }\r\n): QRType {\r\n\r\n    if (out === true) {\r\n        out = globQR;\r\n    }\r\n\r\n    out.q = x;\r\n    out.r = z;\r\n    return out;\r\n}\r\n\r\nlet globCube: CubeType = { x: 0, y: 0, z: 0 };\r\nlet globCR: ColRowType = { x: 0, y: 0 };\r\nlet globQR: QRType = { q: 0, r: 0 };", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { cr2cube, CubeType } from './CubeTransfer';\r\n\r\nexport function DirectionBetween(\r\n    hexagon: IHexagonBase,\r\n    tileA: Vec2Type,\r\n    tileB: Vec2Type,\r\n    round: boolean = true\r\n): number {\r\n\r\n    let direction: number;\r\n    cr2cube(hexagon.mode, tileA.x, tileA.y, globCubeA);\r\n    cr2cube(hexagon.mode, tileB.x, tileB.y, globCubeB);\r\n    let dx = globCubeB.x - globCubeA.x;\r\n    let dy = globCubeB.y - globCubeA.y;\r\n    let dz = globCubeB.z - globCubeA.z;\r\n    if (dz === 0) {\r\n        direction = (dx > 0) ? 0 : 3;\r\n    } else if (dx === 0) {\r\n        direction = (dz > 0) ? 1 : 4;\r\n    } else if (dy === 0) {\r\n        direction = (dz > 0) ? 2 : 5;\r\n    } else if ((dx > 0) && (dy < 0) && (dz > 0)) { // 0~1\r\n        direction = 0 + (dz / (-dy));\r\n    } else if ((dx < 0) && (dy < 0) && (dz > 0)) { // 1~2\r\n        direction = 1 + ((-dy) / dz);\r\n    } else if ((dx < 0) && (dy > 0) && (dz > 0)) { // 2~3\r\n        direction = 2 + (dy / (-dx));\r\n    } else if ((dx < 0) && (dy > 0) && (dz < 0)) { // 3~4\r\n        direction = 3 + ((-dz) / dy);\r\n    } else if ((dx > 0) && (dy > 0) && (dz < 0)) { // 4~5\r\n        direction = 4 + (dx / (-dz));\r\n    } else { // ((dx > 0) && (dy < 0) && (dz < 0)) // 5~0\r\n        direction = 5 + ((-dy) / dx);\r\n    }\r\n\r\n    if (round) {\r\n        direction = Math.round(direction);\r\n    }\r\n    return direction;\r\n}\r\n\r\nlet globCubeA: CubeType = { x: 0, y: 0, z: 0 };\r\nlet globCubeB: CubeType = { x: 0, y: 0, z: 0 };", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { cr2cube, CubeType } from './CubeTransfer';\r\n\r\nexport function GetDistance(\r\n    hexagon: IHexagonBase,\r\n    tileA: Vec2Type,\r\n    tileB: Vec2Type,\r\n    roughMode: boolean = false\r\n): number {\r\n\r\n    cr2cube(hexagon.mode, tileA.x, tileA.y, globCubeA);\r\n    cr2cube(hexagon.mode, tileB.x, tileB.y, globCubeB);\r\n    let dx = globCubeB.x - globCubeA.x;\r\n    let dy = globCubeB.y - globCubeA.y;\r\n    let dz = globCubeB.z - globCubeA.z;\r\n    return (Math.abs(dx) + Math.abs(dy) + Math.abs(dz)) / 2;\r\n}\r\n\r\nlet globCubeA: CubeType = { x: 0, y: 0, z: 0 };\r\nlet globCubeB: CubeType = { x: 0, y: 0, z: 0 };\r\n\r\nexport default GetDistance;", "import { IHexagonBase, LayoutMode } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetWorldXY(\r\n    hexagon: IHexagonBase,\r\n    tileX: number | Vec2Type,\r\n    tileY: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (tileX) === 'object') {\r\n        tileY = tileX.y;\r\n        tileX = tileX.x;\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globWorldXY;\r\n    }\r\n\r\n    let worldX = (tileX * hexagon.width);\r\n    let worldY = (tileY * hexagon.height);\r\n    switch (hexagon.mode) {\r\n        case LayoutMode.ODD_R:\r\n            if (tileY & 1) {\r\n                worldX += hexagon._halfWidth;\r\n            }\r\n            worldY *= 0.75;\r\n            break;\r\n\r\n        case LayoutMode.EVEN_R:\r\n            if (tileY & 1) {\r\n                worldX -= hexagon._halfWidth;\r\n            }\r\n            worldY *= 0.75;\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n            worldX *= 0.75;\r\n            if (tileX & 1) {\r\n                worldY += hexagon._halfHeight;\r\n            }\r\n            break;\r\n\r\n        case LayoutMode.EVEN_Q:\r\n            worldX *= 0.75;\r\n            if (tileX & 1) {\r\n                worldY -= hexagon._halfHeight;\r\n            }\r\n            break;\r\n    }\r\n    worldX += hexagon.x;\r\n    worldY += hexagon.y;\r\n    out.x = worldX;\r\n    out.y = worldY;\r\n    return out;\r\n}\r\n\r\nlet globWorldXY: Vec2Type = { x: 0, y: 0 };", "const DEG_TO_RAD = Math.PI / 180;\r\n\r\nexport function DegToRad(degrees: number): number {\r\n\r\n    return degrees * DEG_TO_RAD;\r\n};\r\n", "import { IHexagonBase, StaggerAxis } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { FillPositionArray } from '../utils/FillPositionArray';\r\nimport { GetWorldXY } from './GetWorldXY';\r\nimport { DegToRad } from '../../../utils/math/angle/DegToRad';\r\n\r\nexport function GetGridPoints(\r\n    hexagon: IHexagonBase,\r\n    tileX: number | Vec2Type = 0,\r\n    tileY: number = 0,\r\n    out: Vec2Type[] | true = []\r\n): Vec2Type[] {\r\n\r\n    if (typeof (tileX) === 'object') {\r\n        let tileXY = tileX;\r\n        tileY = tileXY.y;\r\n        tileX = tileXY.x;\r\n    }\r\n    if (out === true) {\r\n        out = globPoints;\r\n    }\r\n\r\n    FillPositionArray(6, out);\r\n\r\n    let x: number,\r\n        y: number;\r\n    ({ x, y } = GetWorldXY(hexagon, tileX, tileY))\r\n\r\n    if (hexagon.radius !== undefined) {\r\n        let radius = hexagon.radius;\r\n        let angleOffset = (hexagon.staggerAxis === StaggerAxis.flat) ? 0 : -30;\r\n        for (let i = 0; i < 6; i++) {\r\n            let angleDeg = (60 * i) + angleOffset;\r\n            let angleRad = DegToRad(angleDeg);\r\n            out[i].x = x + radius * Math.cos(angleRad);\r\n            out[i].y = y + radius * Math.sin(angleRad);\r\n        }\r\n\r\n    } else {\r\n        let halfW = hexagon._halfWidth;\r\n        let quarterW = halfW / 2;\r\n        let halfH = hexagon._halfHeight;\r\n        let quarterH = halfH / 2;\r\n        if (hexagon.staggerAxis === StaggerAxis.flat) {\r\n            out[0].x = x + halfW;\r\n            out[0].y = y;\r\n\r\n            out[1].x = x + quarterW;\r\n            out[1].y = y + halfH;\r\n\r\n            out[2].x = x - quarterW;\r\n            out[2].y = y + halfH;\r\n\r\n            out[3].x = x - halfW;\r\n            out[3].y = y;\r\n\r\n            out[4].x = x - quarterW;\r\n            out[4].y = y - halfH;\r\n\r\n            out[5].x = x + quarterW;\r\n            out[5].y = y - halfH;\r\n        } else { // StaggerAxis.pointy\r\n            out[0].x = x + halfW;\r\n            out[0].y = y - quarterH;\r\n\r\n            out[1].x = x + halfW;\r\n            out[1].y = y + quarterH;\r\n\r\n            out[2].x = x;\r\n            out[2].y = y + halfH;\r\n\r\n            out[3].x = x - halfW;\r\n            out[3].y = y + quarterH;\r\n\r\n            out[4].x = x - halfW;\r\n            out[4].y = y - quarterH;\r\n\r\n            out[5].x = x;\r\n            out[5].y = y - halfH;\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nlet globPoints: Vec2Type[] = []", "type DeltaXYType = [number, number];\r\nexport type DirectionToDeltaXYEntryType = DeltaXYType[];\r\ntype ParityToDeltaXYType = DirectionToDeltaXYEntryType[];\r\ntype DirectionToDeltaTileXYType = ParityToDeltaXYType[];\r\n\r\nconst ODD_R: ParityToDeltaXYType = [\r\n    [\r\n        [+1, 0],\r\n        [0, +1],\r\n        [-1, +1],\r\n        [-1, 0],\r\n        [-1, -1],\r\n        [0, -1]\r\n    ],\r\n    [\r\n        [+1, 0],\r\n        [+1, +1],\r\n        [0, +1],\r\n        [-1, 0],\r\n        [0, -1],\r\n        [+1, -1]\r\n    ]\r\n];\r\nconst EVEN_R: ParityToDeltaXYType = [\r\n    [\r\n        [+1, 0],\r\n        [+1, +1],\r\n        [0, +1],\r\n        [-1, 0],\r\n        [0, -1],\r\n        [+1, -1]\r\n    ],\r\n    [\r\n        [+1, 0],\r\n        [0, +1],\r\n        [-1, +1],\r\n        [-1, 0],\r\n        [-1, -1],\r\n        [0, -1]\r\n    ]\r\n];\r\nconst ODD_Q: ParityToDeltaXYType = [\r\n    [\r\n        [+1, 0],\r\n        [0, +1],\r\n        [-1, 0],\r\n        [-1, -1],\r\n        [0, -1],\r\n        [+1, -1]\r\n    ],\r\n    [\r\n        [+1, +1],\r\n        [0, +1],\r\n        [-1, +1],\r\n        [-1, 0],\r\n        [0, -1],\r\n        [+1, 0]\r\n    ]\r\n];\r\nconst EVEN_Q: ParityToDeltaXYType = [\r\n    [\r\n        [+1, +1],\r\n        [0, +1],\r\n        [-1, +1],\r\n        [-1, 0],\r\n        [0, -1],\r\n        [+1, 0]\r\n    ],\r\n    [\r\n        [+1, 0],\r\n        [0, +1],\r\n        [-1, 0],\r\n        [-1, -1],\r\n        [0, -1],\r\n        [+1, -1]\r\n    ]\r\n];\r\n\r\nexport const DirectionToDeltaTileXY: DirectionToDeltaTileXYType = [\r\n    ODD_R,\r\n    EVEN_R,\r\n    ODD_Q,\r\n    EVEN_Q\r\n];\r\n// DirectionToDeltaTileXYType[mode][parity][dir]: [x/y]", "import {\r\n    DirectionToDeltaTileXY,\r\n    DirectionToDeltaXYEntryType\r\n} from './DirectionToDeltaTileXY';\r\n\r\ntype DeltaXYToDirectionEntryType = {\r\n    [x: number]: {\r\n        [y: number]: number\r\n    }\r\n}\r\n\r\nfunction ReverseDirMap(\r\n    dirMap: DirectionToDeltaXYEntryType\r\n): DeltaXYToDirectionEntryType {\r\n\r\n    let out: DeltaXYToDirectionEntryType = {},\r\n        x: number, y: number;\r\n    for (let dir in dirMap) {\r\n        ([x, y] = dirMap[dir]);\r\n        if (!out.hasOwnProperty(x)) {\r\n            out[x] = {}\r\n        }\r\n        out[x][y] = parseInt(dir);\r\n    }\r\n    return out;\r\n}\r\n\r\ntype ParityToDirectionType = DeltaXYToDirectionEntryType[];\r\nexport type DeltaTileXYToDirectionType = ParityToDirectionType[];\r\nexport const DeltaTileXYToDirection: DeltaTileXYToDirectionType = [\r\n    [\r\n        ReverseDirMap(DirectionToDeltaTileXY[0][0]),\r\n        ReverseDirMap(DirectionToDeltaTileXY[0][1])\r\n    ],\r\n    [\r\n        ReverseDirMap(DirectionToDeltaTileXY[1][0]),\r\n        ReverseDirMap(DirectionToDeltaTileXY[1][1])\r\n    ],\r\n    [\r\n        ReverseDirMap(DirectionToDeltaTileXY[2][0]),\r\n        ReverseDirMap(DirectionToDeltaTileXY[2][1])\r\n    ],\r\n    [\r\n        ReverseDirMap(DirectionToDeltaTileXY[3][0]),\r\n        ReverseDirMap(DirectionToDeltaTileXY[3][1])\r\n    ]\r\n];\r\n// DeltaTileXYToDirection[mode][parity][x][y]: dir", "import { LayoutMode } from './IHexagonBase'\r\n\r\nexport function GetParity(\r\n    mode: LayoutMode,\r\n    tileX: number,\r\n    tileY: number\r\n): number {\r\n\r\n    let parity;\r\n    switch (mode) {\r\n        case LayoutMode.ODD_R:\r\n        case LayoutMode.EVEN_R:\r\n            parity = tileY & 1;\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n        case LayoutMode.EVEN_Q:\r\n            parity = tileX & 1;\r\n            break;\r\n    }\r\n    return parity;\r\n}", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { DeltaTileXYToDirection } from './DeltaTileXYToDirection';\r\nimport { GetParity } from './GetParity';\r\n\r\nexport function GetNeighborTileDirection(\r\n    hexagon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    neighborTileXY: Vec2Type\r\n): number | null {\r\n\r\n    let mode = hexagon.mode;\r\n    let parity = GetParity(mode, srcTileXY.x, srcTileXY.y);\r\n    let deltaTileXYToDirMap = DeltaTileXYToDirection[mode][parity];\r\n\r\n    let deltaTileX = neighborTileXY.x - srcTileXY.x;\r\n    let deltaTileY = neighborTileXY.y - srcTileXY.y;\r\n    if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\r\n        let xEntry = deltaTileXYToDirMap[deltaTileX]\r\n        if (xEntry.hasOwnProperty(deltaTileY)) {\r\n            return xEntry[deltaTileY];\r\n        }\r\n    }\r\n    return null;\r\n}", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { DirectionToDeltaTileXY } from './DirectionToDeltaTileXY';\r\nimport { GetParity } from './GetParity';\r\nimport { cr2cube, cube2cr } from './CubeTransfer';\r\n\r\nexport function GetTileXYAtDirection(\r\n    hexragon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    direction: number,\r\n    distance: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    let mode = hexragon.mode;\r\n    let srcTileX = srcTileXY.x,\r\n        srcTileY = srcTileXY.y;\r\n\r\n    if (distance === 1) { // Neighbor\r\n        let parity = GetParity(mode, srcTileX, srcTileY);\r\n        out.x = srcTileX + DirectionToDeltaTileXY[mode][parity][direction][0];\r\n        out.y = srcTileY + DirectionToDeltaTileXY[mode][parity][direction][1];\r\n    } else if (distance === 0) {\r\n        out.x = srcTileX;\r\n        out.y = srcTileY;\r\n    } else {\r\n        let cubeXYZ = cr2cube(mode, srcTileX, srcTileY, true);\r\n        let newCubeX: number,\r\n            newCubeY: number,\r\n            newCubeZ: number;\r\n\r\n        switch (direction) {\r\n            case 1:\r\n                newCubeX = cubeXYZ.x;\r\n                newCubeY = cubeXYZ.y - distance;\r\n                newCubeZ = cubeXYZ.z + distance;\r\n                break;\r\n            case 2:\r\n                newCubeX = cubeXYZ.x - distance;\r\n                newCubeY = cubeXYZ.y;\r\n                newCubeZ = cubeXYZ.z + distance;\r\n                break;\r\n            case 3:\r\n                newCubeX = cubeXYZ.x - distance;\r\n                newCubeY = cubeXYZ.y + distance;\r\n                newCubeZ = cubeXYZ.z;\r\n                break;\r\n            case 4:\r\n                newCubeX = cubeXYZ.x;\r\n                newCubeY = cubeXYZ.y + distance;\r\n                newCubeZ = cubeXYZ.z - distance;\r\n                break;\r\n            case 5:\r\n                newCubeX = cubeXYZ.x + distance;\r\n                newCubeY = cubeXYZ.y;\r\n                newCubeZ = cubeXYZ.z - distance;\r\n                break;\r\n            default:\r\n                newCubeX = cubeXYZ.x + distance;\r\n                newCubeY = cubeXYZ.y - distance;\r\n                newCubeZ = cubeXYZ.z;\r\n                break;\r\n        }\r\n        cube2cr(mode, newCubeX, newCubeY, newCubeZ, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { GetTileXYAtDirection } from './GetTileXYAtDirection';\r\n\r\nexport function GetNeighborTileXY(\r\n    hexragon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    direction: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    return GetTileXYAtDirection(hexragon, srcTileXY, direction, 1, out);\r\n};", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function GetOppositeDirection(\r\n    hexagon: IHexagonBase,\r\n    tileX: number | Vec2Type,\r\n    tileY: number | undefined | null,\r\n    direction\r\n): number {\r\n\r\n    return (direction + 3) % 6;\r\n};", "import { IHexagonBase, LayoutMode } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { qr2cube, roundcube, cube2cr, CubeType } from './CubeTransfer';\r\n\r\nconst C_4div3 = (4 / 3);\r\nconst C_2div3 = (2 / 3);\r\n\r\nexport function GetTileXY(\r\n    hexagon: IHexagonBase,\r\n    worldX: number | Vec2Type,\r\n    worldY?: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (worldX) === 'object') {\r\n        worldY = worldX.y;\r\n        worldX = worldX.x;\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    worldX -= hexagon.x;\r\n    worldY -= hexagon.y;\r\n    let q: number,\r\n        r: number;\r\n\r\n    switch (hexagon.mode) {\r\n        case LayoutMode.ODD_R:\r\n        case LayoutMode.EVEN_R:\r\n            r = (worldY * C_4div3) / hexagon.height;\r\n            q = (worldX / hexagon.width) - C_2div3 * (worldY / hexagon.height);\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n        case LayoutMode.EVEN_Q:\r\n            r = (worldY / hexagon.height) - C_2div3 * (worldX / hexagon.width);\r\n            q = (worldX * C_4div3) / hexagon.width;\r\n            break;\r\n    }\r\n\r\n    let cube = qr2cube(q, r, globCube);\r\n    roundcube(cube);\r\n    cube2cr(hexagon.mode, cube.x, cube.y, cube.z, out);\r\n    return out;\r\n}\r\n\r\nlet globCube: CubeType = { x: 0, y: 0, z: 0 };\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };\r\n", "import { IHexagonBase, LayoutMode } from './IHexagonBase';\r\nimport {\r\n    Vec2Type,\r\n    MirrorMode, MirrorModeString\r\n} from '../IGrid';\r\nimport { cr2cube, cube2cr } from './CubeTransfer';\r\n\r\nexport function Mirror(\r\n    hexagon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    mode: MirrorMode | MirrorModeString,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (typeof (mode) === 'string') {\r\n        mode = MirrorMode[mode];\r\n    }\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    let cubeXYZ = cr2cube(hexagon.mode, srcTileXY.x, srcTileXY.y, true);\r\n    let isRMode = (hexagon.mode === LayoutMode.ODD_R) || (hexagon.mode === LayoutMode.EVEN_R);\r\n    let newCubeX: number,\r\n        newCubeY: number,\r\n        newCubeZ: number;\r\n\r\n    if (mode & 1) { // Mirror x\r\n        if (isRMode) {\r\n            newCubeX = cubeXYZ.y;\r\n            newCubeY = cubeXYZ.x;\r\n            newCubeZ = cubeXYZ.z;\r\n        } else {\r\n            newCubeX = -cubeXYZ.x;\r\n            newCubeY = -cubeXYZ.z;\r\n            newCubeZ = -cubeXYZ.y;\r\n        }\r\n        cubeXYZ.x = newCubeX;\r\n        cubeXYZ.y = newCubeY;\r\n        cubeXYZ.z = newCubeZ;\r\n    }\r\n    if (mode & 2) { // Mirror y\r\n        if (isRMode) {\r\n            newCubeX = -cubeXYZ.y;\r\n            newCubeY = -cubeXYZ.x;\r\n            newCubeZ = -cubeXYZ.z;\r\n        } else {\r\n            newCubeX = cubeXYZ.x;\r\n            newCubeY = cubeXYZ.z;\r\n            newCubeZ = cubeXYZ.y;\r\n        }\r\n    }\r\n    cube2cr(hexagon.mode, newCubeX, newCubeY, newCubeZ, out);\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };\r\n\r\nexport default Mirror;", "import { IHexagonBase, LayoutMode } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\n\r\nexport function Offset(\r\n    hexagon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    offsetX: number,\r\n    offsetY: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    let newX = srcTileXY.x + offsetX;\r\n    let newY = srcTileXY.y + offsetY;\r\n    switch (hexagon.mode) {\r\n        case LayoutMode.ODD_R:\r\n            if ((offsetY & 1) !== 0) {\r\n                if ((newY & 1) === 0) {\r\n                    newX += 1;\r\n                }\r\n            }\r\n            break;\r\n\r\n        case LayoutMode.EVEN_R:\r\n            if ((offsetY & 1) !== 0) {\r\n                if ((newY & 1) === 0) {\r\n                    newX -= 1;\r\n                }\r\n            }\r\n            break;\r\n\r\n        case LayoutMode.ODD_Q:\r\n            if ((offsetX & 1) !== 0) {\r\n                if ((newX & 1) == 0) {\r\n                    newY += 1;\r\n                }\r\n            }\r\n            break;\r\n        case LayoutMode.EVEN_Q:\r\n            if ((offsetX & 1) !== 0) {\r\n                if ((newX & 1) == 0) {\r\n                    newY -= 1;\r\n                }\r\n            }\r\n            break;\r\n    }\r\n    out.x = newX;\r\n    out.y = newY;\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { cr2cube, cube2cr } from './CubeTransfer';\r\n\r\nexport function RingToTileXYArray(\r\n    hexagon: IHexagonBase,\r\n    centerTileXY: Vec2Type,\r\n    radius: number,\r\n    out: Vec2Type[] = []\r\n): Vec2Type[] {\r\n\r\n    let centerCube = cr2cube(hexagon.mode, centerTileXY.x, centerTileXY.y, true);\r\n    let cx = centerCube.x,\r\n        cy = centerCube.y,\r\n        cz = centerCube.z;\r\n    let i: number,\r\n        j: number,\r\n        k: number;\r\n\r\n    k = radius;\r\n    for (i = 0; i >= -radius; i--) {\r\n        j = -i - k;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n\r\n    i = -radius;\r\n    for (j = 1; j <= radius; j++) {\r\n        k = -i - j;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n\r\n    j = radius;\r\n    for (k = -1; k >= -radius; k--) {\r\n        i = -j - k;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n\r\n    k = -radius;\r\n    for (i = 1; i <= radius; i++) {\r\n        j = -i - k;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n\r\n    i = radius;\r\n    for (j = -1; j >= -radius; j--) {\r\n        k = -i - j;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n\r\n    j = -radius;\r\n    for (k = 1; k <= radius - 1; k++) {\r\n        i = -j - k;\r\n        out.push(cube2cr(hexagon.mode, cx + i, cy + j, cz + k));\r\n    }\r\n    return out;\r\n}", "import { IHexagonBase } from './IHexagonBase';\r\nimport { Vec2Type } from '../IGrid';\r\nimport { cr2cube, cube2cr } from './CubeTransfer';\r\n\r\nimport { Wrap } from '../../../utils/math/Wrap';\r\n\r\nexport function Rotate(\r\n    hexagon: IHexagonBase,\r\n    srcTileXY: Vec2Type,\r\n    dir: number,\r\n    out: Vec2Type | true = { x: 0, y: 0 }\r\n): Vec2Type {\r\n\r\n    if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n\r\n    dir = Wrap(dir, 0, 5);\r\n    let cubeXYZ = cr2cube(hexagon.mode, srcTileXY.x, srcTileXY.y, true);\r\n    let newCubeX: number,\r\n        newCubeY: number,\r\n        newCubeZ: number;\r\n\r\n    switch (dir) {\r\n        case 1:\r\n            newCubeX = -cubeXYZ.z;\r\n            newCubeY = -cubeXYZ.x;\r\n            newCubeZ = -cubeXYZ.y;\r\n            break;\r\n        case 2:\r\n            newCubeX = cubeXYZ.y;\r\n            newCubeY = cubeXYZ.z;\r\n            newCubeZ = cubeXYZ.x;\r\n            break;\r\n        case 3:\r\n            newCubeX = -cubeXYZ.x;\r\n            newCubeY = -cubeXYZ.y;\r\n            newCubeZ = -cubeXYZ.z;\r\n            break;\r\n        case 4:\r\n            newCubeX = cubeXYZ.z;\r\n            newCubeY = cubeXYZ.x;\r\n            newCubeZ = cubeXYZ.y;\r\n            break;\r\n        case 5:\r\n            newCubeX = -cubeXYZ.y;\r\n            newCubeY = -cubeXYZ.z;\r\n            newCubeZ = -cubeXYZ.x;\r\n            break;\r\n        default:\r\n            newCubeX = cubeXYZ.x;\r\n            newCubeY = cubeXYZ.y;\r\n            newCubeZ = cubeXYZ.z;\r\n            break;\r\n    }\r\n\r\n    cube2cr(hexagon.mode, newCubeX, newCubeY, newCubeZ, out);\r\n    return out;\r\n}\r\n\r\nlet globTileXY: Vec2Type = { x: 0, y: 0 };", "import { IGrid, Vec2Type } from '../IGrid';\r\nimport { HexagonBase } from './HexagonBase';\r\n\r\nimport { DirectionBetween } from './DirectionBetween';\r\nimport { DirectionNormalize } from '../utils/DirectionNormalize';\r\nimport { GetDistance } from './GetDistance';\r\nimport { GetGridPoints } from './GetGridPoints';\r\nimport { GetNeighborTileDirection } from './GetNeighborTileDirection';\r\nimport { GetNeighborTileXY } from './GetNeighborTileXY';\r\nimport { GetOppositeDirection } from './GetOppositeDirection';\r\nimport { GetTileXY } from './GetTileXY';\r\nimport { GetTileXYAtDirection } from './GetTileXYAtDirection';\r\nimport { GetWorldXY } from './GetWorldXY';\r\nimport { MirrorMode, MirrorModeString } from '../IGrid';\r\nimport { Mirror } from './Mirror';\r\nimport { Offset } from './Offset';\r\nimport { RingToTileXYArray } from './RingToTileXYArray';\r\nimport { Rotate } from './Rotate';\r\nimport { SaveOrigin, RestoreOrigin } from '../utils/SaveOrigin';\r\n\r\nexport class Hexagon extends HexagonBase implements IGrid {\r\n\r\n    _savedOriginX: number;\r\n    _savedOriginY: number;\r\n\r\n    get sides() {\r\n        return 6;\r\n    }\r\n\r\n    // Direction of neighbors\r\n    get allDirections() {\r\n        return ALLDIR;\r\n    }\r\n\r\n    // Board-match\r\n    get halfDirections() {\r\n        return HALFDIR;\r\n    }\r\n\r\n    directionBetween(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        round: boolean = true\r\n    ): number {\r\n\r\n        return DirectionBetween(this, tileA, tileB, round);\r\n    }\r\n\r\n    directionNormalize(\r\n        direction: number\r\n    ): number {\r\n\r\n        return DirectionNormalize(this, direction);\r\n    }\r\n\r\n    getDistance(\r\n        tileA: Vec2Type,\r\n        tileB: Vec2Type,\r\n        roughMode: boolean = false\r\n    ): number {\r\n\r\n        return GetDistance(this, tileA, tileB, roughMode);\r\n    }\r\n\r\n    getGridPoints(\r\n        tileX: number | Vec2Type = 0,\r\n        tileY: number = 0,\r\n        out: Vec2Type[] | true = []\r\n    ): Vec2Type[] {\r\n\r\n        return GetGridPoints(this, tileX, tileY, out);\r\n    }\r\n\r\n    getNeighborTileDirection(\r\n        srcTileXY: Vec2Type,\r\n        neighborTileXY: Vec2Type\r\n    ): number | null {\r\n\r\n        return GetNeighborTileDirection(this, srcTileXY, neighborTileXY);\r\n    }\r\n\r\n    getNeighborTileXY(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetNeighborTileXY(this, srcTileXY, direction, out);\r\n    }\r\n\r\n    getOppositeDirection(\r\n        tileX: number | Vec2Type,\r\n        tileY: number | undefined | null,\r\n        direction: number\r\n    ): number {\r\n\r\n        return GetOppositeDirection(this, tileX, tileY, direction);\r\n    }\r\n\r\n    getTileXY(\r\n        worldX: number | Vec2Type,\r\n        worldY?: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetTileXY(this, worldX, worldY, out);\r\n    }\r\n\r\n    getTileXYAtDirection(\r\n        srcTileXY: Vec2Type,\r\n        direction: number,\r\n        distance: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetTileXYAtDirection(this, srcTileXY, direction, distance, out);\r\n    }\r\n\r\n    getWorldXY(\r\n        tileX: number | Vec2Type,\r\n        tileY?: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return GetWorldXY(this, tileX, tileY, out);\r\n    }\r\n\r\n    mirror(\r\n        srcTileXY: Vec2Type,\r\n        mode: MirrorMode | MirrorModeString,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Mirror(this, srcTileXY, mode, out);\r\n    }\r\n\r\n    offset(\r\n        srcTileXY: Vec2Type,\r\n        offsetTileX: number,\r\n        offsetTileY: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Offset(this, srcTileXY, offsetTileX, offsetTileY, out);\r\n    }\r\n\r\n    ringToTileXYArray(\r\n        centerTileXY: Vec2Type,\r\n        radius: number,\r\n        out: Vec2Type[] = []\r\n    ): Vec2Type[] {\r\n\r\n        return RingToTileXYArray(this, centerTileXY, radius, out);\r\n    }\r\n\r\n    rotate(srcTileXY: Vec2Type,\r\n        dir: number,\r\n        out: Vec2Type | true = { x: 0, y: 0 }\r\n    ): Vec2Type {\r\n\r\n        return Rotate(this, srcTileXY, dir, out);\r\n    }\r\n\r\n    restoreOrigin(): this {\r\n\r\n        RestoreOrigin(this);\r\n        return this\r\n    }\r\n\r\n    saveOrigin(): this {\r\n\r\n        SaveOrigin(this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ALLDIR = [0, 1, 2, 3, 4, 5];\r\nconst HALFDIR = [0, 1, 2];", "import { Quad } from './quad/Quad';\r\nimport { Hexagon } from './hexagon/Hexagon';\r\n\r\nexport {\r\n    Quad,\r\n    Hexagon\r\n};", "export enum PathMode {\r\n    'random' = 0,\r\n    'diagonal' = 1,\r\n    'straight' = 2,\r\n    'line' = 3,\r\n    'astar' = 10,\r\n    'astar-random' = 11,\r\n    'astar-line' = 12\r\n}\r\n\r\nexport type PathModeString = 'random' | 'diagonal' | 'straight' | 'line' |\r\n    'astar' | 'astar-line' | 'astar-random';\r\n\r\nexport function IsAStarMode(pathMode: PathMode) {\r\n    return (pathMode === PathMode.astar) ||\r\n        (pathMode === PathMode['astar-line']) ||\r\n        (pathMode === PathMode['astar-random']);\r\n}", "import { INodeBase } from '../INodeBase';\r\nexport type CreateNodeCallbackType = () => INodeBase;", "export type CostValueType = number | null;", "export const BLOCKER = null;\r\nexport const INFINITY = undefined;", "import { PathMode, PathModeString } from './types/PathMode';\r\nexport { PathMode, PathModeString };\r\n\r\nimport { CreateNodeCallbackType } from './types/CreateNodeCallbackType';\r\nexport { CreateNodeCallbackType };\r\n\r\nimport { INodeBase } from './INodeBase';\r\n\r\nimport { CostValueType } from './types/CostValueType';\r\nexport { CostValueType };\r\nimport { BLOCKER, INFINITY } from './Const'\r\nexport { BLOCKER, INFINITY };\r\n\r\nimport { INodeManager } from './INodeManager';\r\n\r\nexport interface IAStar {\r\n    pathMode: PathMode;\r\n    nodeManager: INodeManager;\r\n\r\n    destroy(): void;\r\n\r\n    setPathMode(\r\n        mode: PathMode | PathModeString\r\n    ): this;\r\n\r\n    setWeight(\r\n        weight: number\r\n    ): this;\r\n\r\n    search(\r\n        startNodeKey: any,\r\n        endNodeKey: any,\r\n        movingPoints?: number\r\n    ): this;\r\n\r\n    getAllNodes(): Map<any, INodeBase>;\r\n\r\n    getNode(key: any): INodeBase;\r\n\r\n    getClosestNode(): INodeBase;\r\n\r\n    getNodePath(\r\n        startNodeKey: any,\r\n        endNodeKey: any\r\n    ): INodeBase[];\r\n}", "import { XYZType } from '../Types';\r\nimport { IBaseBoard } from '../board/IBaseBoard';\r\nimport {\r\n    IAStar,\r\n    PathMode, PathModeString,\r\n    CostValueType, BLOCKER\r\n} from '../../utils/astar/IAStar';\r\n\r\nexport { PathMode, PathModeString };\r\nexport { CostValueType, BLOCKER };\r\nexport type CostNodeType = {\r\n    x: number,\r\n    y: number,\r\n    cost: number\r\n};\r\nexport type GetCostCallbackType = (currNode: CostNodeType, prevNode: CostNodeType, pathFinder: IPathFinder) => CostValueType;\r\n\r\nexport type SearchResultType = {\r\n    x: number,\r\n    y: number,\r\n    cost: number\r\n}[];\r\n\r\nexport interface IConfig {\r\n    board?: IBaseBoard;\r\n\r\n    cost?: number;\r\n    costCallback?: GetCostCallbackType;\r\n    costCallbackScope?: unknown;\r\n\r\n    occupiedTest?: boolean;\r\n    blockerTest?: boolean;\r\n    edgeBlockerTest?: boolean;\r\n\r\n    pathMode?: PathMode | PathModeString;\r\n\r\n    cacheCost?: boolean;\r\n\r\n    weight?: number;\r\n\r\n    shuffleNeighbors?: boolean;\r\n\r\n}\r\n\r\nexport interface IPathFinder {\r\n    board: IBaseBoard;\r\n    astar: IAStar;\r\n\r\n    constCost: number;\r\n    costCallback: GetCostCallbackType | null;\r\n    costCallbackScope: unknown;\r\n    pathMode: PathMode;\r\n    occupiedTest: boolean;\r\n    blockerTest: boolean;\r\n    edgeBlockerTest: boolean;\r\n\r\n    startTileXYZ: XYZType;\r\n    cacheCost: boolean;\r\n    weight: number;\r\n    shuffleNeighbors: boolean;\r\n\r\n    BLOCKER: CostValueType;\r\n\r\n    getCost(\r\n        currNode: CostNodeType,\r\n        prevNode: CostNodeType\r\n    ): CostValueType;\r\n}", "import { CreateNodeCallbackType } from './types/CreateNodeCallbackType';\r\nimport { INodeBase } from './INodeBase';\r\nimport { Stack } from '../../utils/struct/Stack';\r\n\r\nexport class NodeManager {\r\n    createNodeCallback: CreateNodeCallbackType;\r\n    weight: number;\r\n    nodePool: Stack;\r\n    nodes: Map<any, INodeBase>;\r\n    sn: number;\r\n    closestNode: INodeBase | null;\r\n\r\n    constructor(\r\n        createNodeCallback: CreateNodeCallbackType\r\n    ) {\r\n        this.createNodeCallback = createNodeCallback;\r\n        this.nodePool = new Stack();\r\n        this.nodes = new Map();\r\n        this.sn = 0;\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.freeAllNodes();\r\n        this.nodePool.destroy();\r\n    }\r\n\r\n    getNode(\r\n        key: any,\r\n        createNode: boolean = false\r\n    ): INodeBase | null {\r\n\r\n        if (!this.nodes.has(key)) {\r\n            if (!createNode) {\r\n                return null;\r\n            }\r\n\r\n            let node: INodeBase = this.nodePool.pop();\r\n            if (node === null) {\r\n                node = this.createNodeCallback();\r\n                node.manager = this;\r\n            }\r\n            node.sn = this.sn;\r\n            node.reset(key);\r\n            this.nodes.set(key, node);\r\n        }\r\n        this.sn++;\r\n        let node = this.nodes.get(key);\r\n        node.sn = this.sn;\r\n        return node;\r\n    }\r\n\r\n    freeAllNodes(): this {\r\n\r\n        let pool = this.nodePool;\r\n        for (const [key, node] of this.nodes) {\r\n            node.shutdown();\r\n            pool.push(node);\r\n        }\r\n        this.nodes.clear();\r\n        this.sn = 0;\r\n        return this;\r\n    }\r\n\r\n    getAllNodes(): Map<any, INodeBase> {\r\n\r\n        return this.nodes;\r\n    }\r\n}", "export class BinaryHeap {\r\n    content: object[];\r\n    scoreFunction: (node: object) => number;\r\n\r\n    constructor(scoreFunction) {\r\n        this.content = [];\r\n        this.scoreFunction = scoreFunction;\r\n    }\r\n\r\n    clear(): void {\r\n        this.content.length = 0;\r\n    }\r\n\r\n    push(element: object): void {\r\n        // Add the new element to the end of the array.\r\n        this.content.push(element);\r\n\r\n        // Allow it to sink down.\r\n        this.sinkDown(this.content.length - 1);\r\n    }\r\n\r\n    pop(): object {\r\n        // Store the first element so we can return it later.\r\n        let result = this.content[0];\r\n        // Get the element at the end of the array.\r\n        let end = this.content.pop();\r\n        // If there are any elements left, put the end element at the\r\n        // start, and let it bubble up.\r\n        if (this.content.length > 0) {\r\n            this.content[0] = end;\r\n            this.bubbleUp(0);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    remove(node: object) {\r\n\r\n        let i = this.content.indexOf(node);\r\n\r\n        // When it is found, the process seen in 'pop' is repeated\r\n        // to fill up the hole.\r\n        let end = this.content.pop();\r\n\r\n        if (i !== this.content.length - 1) {\r\n            this.content[i] = end;\r\n\r\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\r\n                this.sinkDown(i);\r\n            } else {\r\n                this.bubbleUp(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    get size(): number {\r\n        return this.content.length;\r\n    }\r\n\r\n    rescoreElement(node: object) {\r\n\r\n        this.sinkDown(this.content.indexOf(node));\r\n    }\r\n\r\n    sinkDown(n: number): void {\r\n\r\n        // Fetch the element that has to be sunk.\r\n        let element = this.content[n];\r\n\r\n        // When at 0, an element can not sink any further.\r\n        while (n > 0) {\r\n\r\n            // Compute the parent element's index, and fetch it.\r\n            let parentN = ((n + 1) >> 1) - 1,\r\n                parent = this.content[parentN];\r\n            // Swap the elements if the parent is greater.\r\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n                this.content[parentN] = element;\r\n                this.content[n] = parent;\r\n                // Update 'n' to continue at the new position.\r\n                n = parentN;\r\n            }\r\n            // Found a parent that is less, no need to sink any further.\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    bubbleUp(n: number): void {\r\n\r\n        // Look up the target element and its score.\r\n        let length = this.content.length,\r\n            element: object = this.content[n],\r\n            elemScore: number = this.scoreFunction(element);\r\n\r\n        while (true) {\r\n            // Compute the indices of the child elements.\r\n            let child2N = (n + 1) << 1,\r\n                child1N = child2N - 1;\r\n            // This is used to store the new position of the element, if any.\r\n            let swap: number = null,\r\n                child1Score: number;\r\n            // If the first child exists (is inside the array)...\r\n            if (child1N < length) {\r\n                // Look it up and compute its score.\r\n                let child1 = this.content[child1N];\r\n                child1Score = this.scoreFunction(child1);\r\n\r\n                // If the score is less than our element's, we need to swap.\r\n                if (child1Score < elemScore) {\r\n                    swap = child1N;\r\n                }\r\n            }\r\n\r\n            // Do the same checks for the other child.\r\n            if (child2N < length) {\r\n                let child2 = this.content[child2N],\r\n                    child2Score = this.scoreFunction(child2);\r\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\r\n                    swap = child2N;\r\n                }\r\n            }\r\n\r\n            // If the element needs to be moved, swap it, and continue.\r\n            if (swap !== null) {\r\n                this.content[n] = this.content[swap];\r\n                this.content[swap] = element;\r\n                n = swap;\r\n            }\r\n            // Otherwise, we are done.\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}", "/* \r\n\r\njavascript-astar 0.3.0\r\nhttp://github.com/bgrins/javascript-astar\r\nFreely distributable under the MIT License.\r\nImplements the astar search algorithm in javascript using a Binary Heap.\r\nIncludes Binary Heap (with modifications) from Marijn Haverbeke.\r\nhttp://eloquentjavascript.net/appendix2.html\r\n\r\n*/\r\n\r\nimport { IAStar } from './IAstar';\r\nimport { PathMode, IsAStarMode } from './types/PathMode';\r\nimport { CostValueType } from './types/CostValueType';\r\nimport { BLOCKER, INFINITY } from './Const';\r\nimport { INodeBase } from './INodeBase';\r\nimport { BinaryHeap } from '../struct/BinaryHeap';\r\n\r\nlet gOpenHeap = new BinaryHeap((node: INodeBase) => node.f);\r\n\r\nexport function Search(\r\n    astar: IAStar,\r\n    startNodeKey: any,\r\n    endNodeKey: any,\r\n    movingPoints?: number\r\n): void {\r\n\r\n    const isPathSearch = (endNodeKey !== null);\r\n    const isAStartMode = IsAStarMode(astar.pathMode);\r\n    const isShortestPathMode = isPathSearch && (!isAStartMode);\r\n    const astarMode = (isPathSearch && isAStartMode) ? astar.pathMode : null;\r\n\r\n    let nodeManager = astar.nodeManager;\r\n    nodeManager.freeAllNodes();\r\n\r\n    let startNode = nodeManager.getNode(startNodeKey, true);\r\n    let endNode = (isPathSearch) ? nodeManager.getNode(endNodeKey, true) : null;\r\n    startNode.h = startNode.heuristic(endNode, astarMode);\r\n\r\n    let closestNode: INodeBase = null;\r\n    if (isPathSearch) {\r\n        closestNode = startNode;\r\n        closestNode.closerH = closestNode.h || closestNode.heuristic(endNode, PathMode.astar);\r\n    }\r\n\r\n    gOpenHeap.push(startNode);\r\n    while (gOpenHeap.size > 0) {\r\n        // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\r\n        let currNode = gOpenHeap.pop() as INodeBase;\r\n        // console.log(currNode.key);\r\n\r\n        // End case -- result has been found, return the traced path.\r\n        if (isPathSearch && (currNode === endNode)) {\r\n            closestNode = endNode;\r\n            break;\r\n        }\r\n\r\n        // Normal case -- move currNode from open to closed, process each of its next-nodes.\r\n        currNode.closed = true;\r\n\r\n        // Find all next-nodes for the current node.\r\n        let nextNodes: INodeBase[] = currNode.getNextNodes();\r\n        let nextNode: INodeBase,\r\n            nextNodeCost: CostValueType;\r\n        for (let i = 0, cnt = nextNodes.length; i < cnt; ++i) {\r\n            nextNode = nextNodes[i];\r\n            nextNodeCost = nextNode.getCost(currNode);\r\n            if (nextNode.closed || (nextNodeCost === BLOCKER)) {\r\n                // Not a valid node to process, skip to next-node.\r\n                continue;\r\n            }\r\n\r\n            // The g score is the shortest distance from start to current node.\r\n            // We need to check if the path we have arrived at this next-node is the shortest one we have seen yet.\r\n            let gScore = currNode.g + nextNodeCost,\r\n                beenVisited = nextNode.visited;\r\n\r\n            if ((movingPoints !== INFINITY) && (gScore > movingPoints)) {\r\n                continue;\r\n            }\r\n\r\n            if ((!beenVisited) || (gScore < nextNode.g)) {\r\n\r\n                // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\r\n                nextNode.visited = true;\r\n                nextNode.prevNodes.length = 0;\r\n                nextNode.prevNodes.push(currNode);\r\n                if (nextNode.h === undefined) {\r\n                    nextNode.h = nextNode.heuristic(endNode, astarMode, startNode);\r\n                }\r\n                nextNode.g = gScore;\r\n                nextNode.f = nextNode.g + nextNode.h;\r\n\r\n                // Nearest node\r\n                if (isPathSearch) {\r\n                    // If the next node is closer than the current closestNode or if it's equally close but has\r\n                    // a cheaper path than the current closest node then it becomes the closest node\r\n                    if (nextNode.closerH === undefined) {\r\n                        nextNode.closerH = nextNode.h || nextNode.heuristic(endNode, PathMode.astar);\r\n                    }\r\n                    if ((nextNode.closerH < closestNode.closerH) ||\r\n                        ((nextNode.closerH === closestNode.closerH) && (nextNode.g < closestNode.g))) {\r\n                        closestNode = nextNode;\r\n                    }\r\n                }\r\n                // Nearest node\r\n\r\n                if (!beenVisited) {\r\n                    // Pushing to heap will put it in proper place based on the 'f' value.\r\n                    gOpenHeap.push(nextNode);\r\n                } else {\r\n                    // Already seen the node, but since it has been rescored we need to reorder it in the heap\r\n                    gOpenHeap.rescoreElement(nextNode);\r\n                }\r\n            } else if (isShortestPathMode && (gScore == nextNode.g)) {\r\n\r\n                nextNode.prevNodes.push(currNode);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    nodeManager.closestNode = closestNode;\r\n    gOpenHeap.clear();\r\n}", "import { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\n\r\nexport const GetAStarNodePath: GetNodePathCallbackType = function (\r\n    startNode,\r\n    endNode,\r\n    out = []\r\n) {\r\n\r\n    let currNode = endNode;\r\n    while (currNode.prevNodes.length > 0) {\r\n        out.push(currNode);\r\n        currNode = currNode.prevNodes[0];\r\n    }\r\n\r\n    return out.reverse();\r\n}", "import { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\nimport { GetRandomItem } from '../../array/GetRandom';\r\n\r\nexport const GetRandomNodePath: GetNodePathCallbackType = function (\r\n    startNode,\r\n    endNode,\r\n    out = []\r\n) {\r\n\r\n    let currNode = endNode;\r\n    while (currNode.prevNodes.length > 0) {\r\n        out.push(currNode);\r\n        if (currNode.prevNodes.length === 1) {\r\n            currNode = currNode.prevNodes[0];\r\n        } else {\r\n            currNode = GetRandomItem(currNode.prevNodes);\r\n        }\r\n    }\r\n\r\n    return out.reverse();\r\n}", "import { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\n\r\nexport const GetLineNodePath: GetNodePathCallbackType = function (\r\n    startNode,\r\n    endNode,\r\n    out = []\r\n) {\r\n\r\n    let currNode = endNode;\r\n    let targetAngle = endNode.angleTo(startNode);\r\n    while (currNode.prevNodes.length > 0) {\r\n        out.push(currNode);\r\n        if (currNode.prevNodes.length === 1) {\r\n            currNode = currNode.prevNodes[0];\r\n        } else {\r\n            let minDeltaAngle = Infinity;\r\n            for (let i = 1, cnt = currNode.prevNodes.length; i < cnt; i++) {\r\n                let prevNode = currNode.prevNodes[i];\r\n                let deltaAngle = Math.abs(endNode.angleTo(prevNode) - targetAngle);\r\n                if (deltaAngle < minDeltaAngle) {\r\n                    minDeltaAngle = deltaAngle;\r\n                    currNode = prevNode;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return out.reverse();\r\n}", "import { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\nimport { INodeBase } from '../INodeBase';\r\n\r\nexport const GetDiagonalPath: GetNodePathCallbackType = function (\r\n    startNode,\r\n    endNode,\r\n    out = []\r\n) {\r\n\r\n    let currNode = endNode;\r\n    let currLogicDir: number;\r\n    while (currNode.prevNodes.length > 0) {\r\n        out.push(currNode);\r\n        if ((currNode.prevNodes.length === 1) || (currLogicDir === undefined)) {\r\n            let prevNode = currNode.prevNodes[0];\r\n            currLogicDir = prevNode.logicDirTo(currNode);\r\n            currNode = prevNode;\r\n        } else {\r\n            let prevNode: INodeBase;\r\n            let prevLogicDir: number;\r\n            for (let i = 0, cnt = currNode.prevNodes.length; i < cnt; i++) {\r\n                prevNode = currNode.prevNodes[i];\r\n                prevLogicDir = prevNode.logicDirTo(currNode);\r\n                if (prevLogicDir !== currLogicDir) {\r\n                    break;\r\n                }\r\n            }\r\n            currLogicDir = prevLogicDir;\r\n            currNode = prevNode;\r\n        }\r\n    }\r\n\r\n    return out.reverse();\r\n}", "import { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\nimport { INodeBase } from '../INodeBase';\r\n\r\nexport const GetStraightNodePath: GetNodePathCallbackType = function (\r\n    startNode,\r\n    endNode,\r\n    out = []\r\n) {\r\n\r\n    let currNode = endNode;\r\n    let currLogicDir: number;\r\n    while (currNode.prevNodes.length > 0) {\r\n        out.push(currNode);\r\n        if ((currNode.prevNodes.length === 1) || (currLogicDir === undefined)) {\r\n            let prevNode = currNode.prevNodes[0];\r\n            currLogicDir = prevNode.logicDirTo(currNode);\r\n            currNode = prevNode;\r\n        } else {\r\n            let prevNode: INodeBase;\r\n            let prevLogicDir: number;\r\n            for (let i = 0, cnt = currNode.prevNodes.length; i < cnt; i++) {\r\n                prevNode = currNode.prevNodes[i];\r\n                prevLogicDir = prevNode.logicDirTo(currNode);\r\n                if (prevLogicDir === currLogicDir) {\r\n                    break;\r\n                }\r\n            }\r\n            currLogicDir = prevLogicDir;\r\n            currNode = prevNode;\r\n        }\r\n    }\r\n\r\n    return out.reverse();\r\n}", "import { IAStar } from '../IAStar';\r\nimport { INodeBase } from '../INodeBase';\r\nimport { PathMode } from '../types/PathMode';\r\nimport { GetNodePathCallbackType } from './GetNodePathCallbackType';\r\nimport { GetAStarNodePath } from './GetAStarNodePath';\r\nimport { GetRandomNodePath } from './GetRandomNodePath';\r\nimport { GetLineNodePath } from './GetLineNodePath';\r\nimport { GetDiagonalPath } from './GetDiagonalPath';\r\nimport { GetStraightNodePath } from './GetStraightNodePath';\r\n\r\nexport function GetNodePath(\r\n    astar: IAStar,\r\n    startNodeKey: any,\r\n    endNodeKey: any\r\n): INodeBase[] {\r\n\r\n    let nodeManager = astar.nodeManager;\r\n    let endNode = nodeManager.getNode(endNodeKey);\r\n    let path: INodeBase[] = [];\r\n    if (endNode === null) {\r\n        return path;\r\n    }\r\n\r\n    let startNode = nodeManager.getNode(startNodeKey);\r\n    return GetNodePathCallbacks[astar.pathMode](startNode, endNode, path);\r\n}\r\n\r\nlet GetNodePathCallbacks: { [mode: number]: GetNodePathCallbackType } = {};\r\nGetNodePathCallbacks[PathMode.astar] = GetAStarNodePath;\r\nGetNodePathCallbacks[PathMode['astar-line']] = GetAStarNodePath;\r\nGetNodePathCallbacks[PathMode['astar-random']] = GetAStarNodePath;\r\nGetNodePathCallbacks[PathMode.random] = GetRandomNodePath;\r\nGetNodePathCallbacks[PathMode.line] = GetLineNodePath;\r\nGetNodePathCallbacks[PathMode.diagonal] = GetDiagonalPath;\r\nGetNodePathCallbacks[PathMode.straight] = GetStraightNodePath;", "import {\r\n    PathMode, PathModeString,\r\n    CreateNodeCallbackType\r\n} from './IAStar';\r\n\r\nimport { INodeBase } from './INodeBase';\r\nimport { INodeManager } from './INodeManager';\r\nimport { NodeManager } from './NodeManager';\r\nimport { Search } from './Search';\r\nimport { GetNodePath } from './getnodepath/GetNodePath';\r\n\r\nexport class AStar {\r\n    pathMode: PathMode;\r\n    nodeManager: INodeManager;\r\n\r\n    constructor(\r\n        createNodeCallback: CreateNodeCallbackType\r\n    ) {\r\n\r\n        this.nodeManager = new NodeManager(createNodeCallback);\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.nodeManager.destroy();\r\n    }\r\n\r\n    setPathMode(\r\n        mode: PathMode | PathModeString\r\n    ): this {\r\n\r\n        if (typeof (mode) === 'string') {\r\n            mode = PathMode[mode];\r\n        }\r\n        this.pathMode = mode;\r\n        return this;\r\n    }\r\n\r\n    setWeight(\r\n        weight: number\r\n    ): this {\r\n\r\n        this.nodeManager.weight = weight;\r\n        return this;\r\n    }\r\n\r\n    search(\r\n        startNodeKey: any,\r\n        endNodeKey: any,\r\n        movingPoints?: number\r\n    ): this {\r\n\r\n        Search(this, startNodeKey, endNodeKey, movingPoints);\r\n        return this;\r\n    }\r\n\r\n    getAllNodes(): Map<any, INodeBase> {\r\n\r\n        return this.nodeManager.getAllNodes();\r\n    }\r\n\r\n    getNode(key: any): INodeBase {\r\n\r\n        return this.nodeManager.getNode(key);\r\n    }\r\n\r\n    getClosestNode(): INodeBase | null {\r\n\r\n        return this.nodeManager.closestNode;\r\n    }\r\n\r\n    getNodePath(\r\n        startNodeKey: any,\r\n        endNodeKey: any\r\n    ): INodeBase[] {\r\n\r\n        return GetNodePath(this, startNodeKey, endNodeKey);\r\n    }\r\n}", "import { PathMode } from './types/PathMode';\r\nimport { CostValueType } from './types/CostValueType';\r\nimport { BLOCKER } from './Const';\r\nimport { INodeBase } from './INodeBase';\r\nimport { INodeManager } from './INodeManager';\r\n\r\nexport abstract class NodeBase {\r\n    manager: INodeManager;\r\n\r\n    f: number;\r\n    g: number;\r\n    h: number;\r\n    closerH: number;\r\n\r\n    visited: boolean;\r\n    closed: boolean;\r\n\r\n    prevNodes: INodeBase[];\r\n    key: any; // string, number or an object\r\n    sn: number; // For sorting by created order\r\n\r\n    constructor() {\r\n\r\n        this.prevNodes = [];\r\n    }\r\n\r\n    shutdown(): void {\r\n        this.key = undefined;\r\n        this.prevNodes.length = 0;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.shutdown();\r\n    }\r\n\r\n    // Override\r\n    reset(key: any): void {\r\n        this.key = key;\r\n        this.f = 0;\r\n        this.g = 0; // path cost\r\n        this.h = undefined;\r\n        this.closerH = undefined;\r\n        this.visited = false;\r\n        this.closed = false;\r\n    }\r\n\r\n    heuristic(\r\n        endNode: INodeBase,\r\n        astarMode: PathMode | null,\r\n        baseNode?: INodeBase,\r\n    ): number {\r\n\r\n        if (astarMode === null) {\r\n            return 0;\r\n        }\r\n\r\n        let h: number;\r\n        let dist = this.distanceTo(endNode) * this.manager.weight;\r\n\r\n        switch (astarMode) {\r\n            case PathMode.astar:\r\n                h = dist;\r\n                break;\r\n            case PathMode['astar-line']:\r\n                if (baseNode !== undefined) {\r\n                    let deltaAngle = endNode.angleTo(baseNode) - this.angleTo(baseNode);\r\n                    h = dist + Math.abs(deltaAngle);\r\n                } else {\r\n                    h = dist;\r\n                }\r\n            case PathMode['astar-random']:\r\n                h = dist + Math.random();\r\n                break;\r\n            default:\r\n                h = dist;\r\n                break;\r\n        }\r\n        return h;\r\n    }\r\n\r\n    // Override\r\n    getNextNodes(): INodeBase[] {\r\n\r\n        return [];\r\n    }\r\n\r\n    // Override\r\n    getCost(\r\n        preNode: INodeBase\r\n    ): CostValueType {\r\n\r\n        return BLOCKER;\r\n    }\r\n\r\n    // Override\r\n    distanceTo(\r\n        node: INodeBase\r\n    ): number {\r\n\r\n        return 0;\r\n    }\r\n\r\n    // Override\r\n    angleTo(\r\n        node: INodeBase\r\n    ): number {\r\n\r\n        return 0;\r\n    }\r\n\r\n    // Override\r\n    logicDirTo(\r\n        node: INodeBase\r\n    ): number {\r\n\r\n        return 0;\r\n    }\r\n\r\n    getNode(\r\n        key: any,\r\n        createNode: boolean = false\r\n    ): INodeBase {\r\n\r\n        return this.manager.getNode(key, createNode);\r\n    }\r\n}", "export function Shuffle<T>(\r\n    array: T[]\r\n): T[] {\r\n\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n\r\n    return array;\r\n};\r\n", "import { IAStarNode } from './IAStarNode';\r\nimport { PathMode, CostValueType } from '../../../utils/astar/IAstar';\r\nimport { NodeBase } from '../../../utils/astar/NodeBase';\r\nimport { IPathFinder } from '../IPathFinder';\r\nimport { Shuffle } from '../../../utils/array/Shuffle';\r\nimport { XYZType } from '../../Types';\r\nimport { XYToKey, KeyToXY } from '../../utils/StringKey';\r\nimport { Between as AngleBetween } from '../../../utils/math/angle/Between';\r\nimport { Nieghbors, TileXY, WorldXY } from '../../board';\r\n\r\nexport class AStarNode extends NodeBase {\r\n    pathFinder: IPathFinder;\r\n    isTileXYZ = true;\r\n\r\n    x: number;\r\n    y: number;\r\n    cost: number;\r\n    _px: number; // For worldX\r\n    _py: number; // For worldY\r\n\r\n    constructor(pathFinder: IPathFinder) {\r\n\r\n        super();\r\n        this.pathFinder = pathFinder;\r\n    }\r\n\r\n    reset(\r\n        key: string\r\n    ) {\r\n\r\n        super.reset(key);\r\n\r\n        this.key = key;\r\n        KeyToXY(key, this);\r\n        this._px = undefined;\r\n        this._py = undefined;\r\n        this.cost = undefined; // cost cache\r\n    }\r\n\r\n    getNextNodes(\r\n\r\n    ): IAStarNode[] {\r\n\r\n        let neighborsTileXY = Nieghbors.GetNeighborTileXY(this.board, this) as XYZType[];\r\n        if (this.pathFinder.shuffleNeighbors) {\r\n            Shuffle(neighborsTileXY);\r\n        }\r\n\r\n        let neighborNodes = [];\r\n        neighborsTileXY.forEach((tileXY) => {\r\n            let node = this.getNode(XYToKey(tileXY.x, tileXY.y), true);\r\n            neighborNodes.push(node);\r\n        })\r\n        return neighborNodes;\r\n    }\r\n\r\n    getCost(\r\n        preNode: IAStarNode\r\n    ): CostValueType {\r\n\r\n        if (this.pathFinder.cacheCost) {\r\n            if (this.cost === undefined) {\r\n                this.cost = this.pathFinder.getCost(this, preNode);\r\n            }\r\n        } else {\r\n            this.cost = this.pathFinder.getCost(this, preNode);\r\n        }\r\n        return this.cost;\r\n    }\r\n\r\n    distanceTo(\r\n        node: IAStarNode\r\n    ): number {\r\n\r\n        return TileXY.GetDistance(this.board, this, node, true);\r\n    }\r\n\r\n    angleTo(\r\n        node: IAStarNode\r\n    ): number {\r\n\r\n        return AngleBetween(this.worldX, this.wroldY, node.worldX, node.worldX);\r\n    }\r\n\r\n    logicDirTo(\r\n        node: IAStarNode\r\n    ): number {\r\n\r\n        return Nieghbors.GetNeighborTileDirection(this.board, this, node);\r\n    }\r\n\r\n    get board() {\r\n\r\n        return this.pathFinder.board;\r\n    }\r\n\r\n    get worldX() {\r\n        if (this._px === undefined) {\r\n            let worldXY = WorldXY.TileXYToWorldXY(this.board, this.x, this.y, true);\r\n            this._px = worldXY.x;\r\n            this._py = worldXY.y;\r\n        }\r\n        return this._px;\r\n    }\r\n\r\n    get wroldY() {\r\n        if (this._py === undefined) {\r\n            let worldXY = WorldXY.TileXYToWorldXY(this.board, this.x, this.y, true);\r\n            this._px = worldXY.x;\r\n            this._py = worldXY.y;\r\n        }\r\n        return this._py;\r\n    }\r\n}", "import { IPathFinder } from '../IPathFinder';\r\nimport { IAStar } from '../../../utils/astar/IAStar';\r\nimport { AStar } from '../../../utils/astar/AStar';\r\nimport { AStarNode } from './AStarNode';\r\n\r\nexport function CreateAStar(\r\n    pathFinder: IPathFinder\r\n): IAStar {\r\n\r\n    let CreateNodeCallback = function () {\r\n        return new AStarNode(pathFinder);\r\n    }\r\n    return new AStar(CreateNodeCallback);\r\n}", "import {\r\n    IPathFinder,\r\n    CostNodeType, CostValueType, BLOCKER\r\n} from './IPathFinder';\r\nimport { TileXY, Blocker } from '../board';\r\n\r\nexport function GetCost(\r\n    pathFinder: IPathFinder,\r\n    currNode: CostNodeType,\r\n    prevNode: CostNodeType\r\n): CostValueType {\r\n\r\n    let board = pathFinder.board;\r\n    // Occupied test\r\n    if (pathFinder.occupiedTest) {\r\n        if (TileXY.Contains(board, currNode.x, currNode.y, pathFinder.startTileXYZ.z)) {\r\n            return BLOCKER;\r\n        }\r\n    }\r\n    // Blocker test\r\n    if (pathFinder.blockerTest) {\r\n        if (Blocker.HasBlocker(board, currNode.x, currNode.y)) {\r\n            return BLOCKER;\r\n        }\r\n    }\r\n    // Edge-blocker test\r\n    if (pathFinder.edgeBlockerTest) {\r\n        // TODO\r\n    }\r\n\r\n    let callback = pathFinder.costCallback;\r\n    if (callback) {\r\n        let scope = pathFinder.costCallbackScope;\r\n        let cost: CostValueType;\r\n        if (scope) {\r\n            cost = callback.call(scope, currNode, prevNode, pathFinder);\r\n        } else {\r\n            cost = callback(currNode, prevNode, pathFinder);\r\n        }\r\n        if (cost === undefined) {\r\n            cost = BLOCKER;\r\n        }\r\n        return cost;\r\n    } else {\r\n        return pathFinder.constCost;\r\n    }\r\n}", "import { XYType } from '../Types';\r\n\r\nexport function CopyTileXY(\r\n    src: XYType,\r\n    out: XYType = { x: 0, y: 0 }): XYType {\r\n\r\n    out.x = src.x;\r\n    out.y = src.y;\r\n    return out;\r\n}", "import { XYZType } from '../Types';\r\n\r\nexport function CopyTileXYZ(\r\n    src: XYZType,\r\n    out: XYZType = { x: 0, y: 0, z: 0 }): XYZType {\r\n\r\n    out.x = src.x;\r\n    out.y = src.y;\r\n    out.z = src.z;\r\n    return out;\r\n}", "export function IsChess(obj) {\r\n    if (typeof (obj) === 'object') {\r\n        return obj.hasOwnProperty('rexChess');\r\n    } else {\r\n        return false;\r\n    }\r\n}", "import { CopyTileXY } from './CopyTileXY';\r\nimport { CopyTileXYZ } from './CopyTileXYZ';\r\nimport { IsChess } from './IsChess';\r\nimport { IsTileXYZ } from './IsTileXYZ';\r\n\r\nexport {\r\n    CopyTileXY,\r\n    CopyTileXYZ,\r\n    IsChess,\r\n    IsTileXYZ\r\n}", "import { IPathFinder, SearchResultType } from './IPathFinder';\r\nimport { IChess, XYZType } from '../Types';\r\nimport { IsChess, IsTileXYZ } from '../utils';\r\nimport { XYToKey } from '../utils/StringKey';\r\nimport { IAStarNode } from './astar/IAStarNode';\r\nimport { Chess, TileXY } from '../board';\r\nimport { CopyTileXYZ } from '../utils/CopyTileXYZ';\r\n\r\nexport function FindArea(\r\n    pathFinder: IPathFinder,\r\n    startChess: IChess | XYZType,\r\n    movingPoints?: number | undefined,\r\n    out: SearchResultType = []\r\n): SearchResultType {\r\n\r\n    // Negative moving points\r\n    if ((movingPoints !== undefined) && (movingPoints <= 0)) {\r\n        return out;\r\n    }\r\n    if (IsChess(startChess)) {\r\n        pathFinder.board = (startChess as IChess).rexChess.board;\r\n    } else if (!IsTileXYZ(startChess)) { // Not a chess, neither tileXYZ\r\n        return out;\r\n    }\r\n\r\n    let board = pathFinder.board;\r\n    let astar = pathFinder.astar;\r\n    let startTileXYZ = TileXY.ChessToTileXYZ(board, startChess) as XYZType,\r\n        startTileX = startTileXYZ.x,\r\n        startTileY = startTileXYZ.y;\r\n    CopyTileXYZ(startTileXYZ, pathFinder.startTileXYZ);\r\n    let startNodeKey = XYToKey(startTileX, startTileY);\r\n    astar.search(startNodeKey, null, movingPoints);\r\n\r\n    let nodesMap = astar.getAllNodes() as Map<string, IAStarNode>,\r\n        nodesList: IAStarNode[] = [];\r\n    for (const [key, node] of nodesMap) {\r\n        // Not include start node\r\n        if ((node.x === startTileX) && (node.y === startTileY)) {\r\n            continue;\r\n        }\r\n\r\n        if (!node.closed) {\r\n            continue;\r\n        }\r\n        nodesList.push(node);\r\n    }\r\n    // Sort by sn (creating order)\r\n    nodesList.sort(function (nodeA, nodeB) {\r\n        let snA = nodeA.sn;\r\n        let snB = nodeB.sn;\r\n        return (snA > snB) ? 1 :\r\n            (snA < snB) ? -1 :\r\n                0;\r\n    });\r\n    nodesList.forEach(function (node) {\r\n        out.push({\r\n            x: node.x,\r\n            y: node.y,\r\n            cost: node.g\r\n        });\r\n    })\r\n    return out;\r\n}", "import {\r\n    IPathFinder,\r\n    SearchResultType\r\n} from './IPathFinder';\r\nimport { XYType, IChess } from '../Types';\r\nimport { XYToKey } from '../utils/StringKey';\r\nimport { IAStarNode } from './astar/IAStarNode';\r\nimport { TileXY } from '../board';\r\n\r\nexport function GetPath(\r\n    pathFinder: IPathFinder,\r\n    endChess: IChess | XYType,\r\n    out: SearchResultType = []\r\n): SearchResultType {\r\n\r\n    let board = pathFinder.board;\r\n    let endTileXY: XYType = TileXY.ChessToTileXYZ(board, endChess);\r\n    let startTileXYZ = pathFinder.startTileXYZ;\r\n    let nodesList = pathFinder.astar\r\n        .setPathMode(pathFinder.pathMode)\r\n        .getNodePath(\r\n            XYToKey(startTileXYZ.x, startTileXYZ.y),\r\n            XYToKey(endTileXY.x, endTileXY.y)\r\n        ) as IAStarNode[];\r\n    nodesList.forEach(function (node) {\r\n        out.push({\r\n            x: node.x,\r\n            y: node.y,\r\n            cost: node.g\r\n        });\r\n    })\r\n    return out;\r\n}", "import {\r\n    IPathFinder,\r\n    SearchResultType\r\n} from './IPathFinder';\r\nimport { IChess, XYZType, XYType } from '../Types';\r\nimport { IsChess, IsTileXYZ } from '../utils';\r\nimport { XYToKey } from '../utils/StringKey';\r\nimport { IAStarNode } from './astar/IAStarNode';\r\nimport { GetPath } from './GetPath'\r\nimport { TileXY } from '../board';\r\nimport { CopyTileXYZ } from '../utils/CopyTileXYZ';\r\n\r\nexport function FindPath(\r\n    pathFinder: IPathFinder,\r\n    startChess: IChess,\r\n    endChess: IChess | XYType,\r\n    movingPoints?: number,\r\n    isClosest: boolean = true,\r\n    out: SearchResultType = []\r\n): SearchResultType {\r\n\r\n    // Negative moving points\r\n    if ((movingPoints !== undefined) && (movingPoints <= 0)) {\r\n        return out;\r\n    }\r\n    if (IsChess(startChess)) {\r\n        pathFinder.board = (startChess as IChess).rexChess.board;\r\n    } else if (!IsTileXYZ(startChess)) { // Not a chess, neither tileXYZ\r\n        return out;\r\n    }\r\n\r\n    let board = pathFinder.board;\r\n    let astar = pathFinder.astar;\r\n    let startTileXYZ = TileXY.ChessToTileXYZ(board, startChess) as XYZType;\r\n    let endTileXY = TileXY.ChessToTileXYZ(board, endChess) as XYType;\r\n    CopyTileXYZ(startTileXYZ, pathFinder.startTileXYZ);\r\n    let startNodeKey = XYToKey(startTileXYZ.x, startTileXYZ.y),\r\n        endNodeKey = XYToKey(endTileXY.x, endTileXY.y);\r\n\r\n    astar\r\n        .setPathMode(pathFinder.pathMode)\r\n        .setWeight(pathFinder.weight)\r\n        .search(startNodeKey, endNodeKey, movingPoints);\r\n\r\n    let endNode = ((isClosest) ? astar.getClosestNode() : astar.getNode(endNodeKey)) as IAStarNode;\r\n    if (endNode === null) {\r\n        return out;\r\n    }\r\n\r\n    return GetPath(pathFinder, (endNode as XYType), out);\r\n}\r\nexport default FindPath;", "import { IPathFinder, CostValueType } from './IPathFinder';\r\nimport { XType, YType } from '../Types';\r\nimport { XYToKey } from '../utils/StringKey';\r\nimport { IAStarNode } from './astar/IAStarNode';\r\n\r\nexport function TileXYToCost(\r\n    pathFinder: IPathFinder,\r\n    tileX: XType,\r\n    tileY: YType,\r\n    pathCost: boolean = true\r\n): CostValueType {\r\n\r\n    let node = pathFinder.astar.getNode(XYToKey(tileX, tileY)) as IAStarNode;\r\n    if (node === null) {\r\n        return null;\r\n    }\r\n    return (pathCost) ? node.g : node.cost;\r\n}", "import {\r\n    IPathFinder, IConfig,\r\n    PathMode, PathModeString,\r\n    GetCostCallbackType, CostNodeType, CostValueType, BLOCKER,\r\n    SearchResultType\r\n} from './IPathFinder';\r\nimport { IBaseBoard } from '../board/IBaseBoard';\r\nimport { IChess, XYZType, XYType, XType, YType } from '../Types';\r\nimport { IAStar } from '../../utils/astar/IAStar';\r\nimport { CreateAStar } from './astar/CreateAStar';\r\nimport { GetCost } from './GetCost';\r\nimport { FindArea } from './FindArea';\r\nimport { FindPath } from './FindPath';\r\nimport { GetPath } from './GetPath';\r\nimport { TileXYToCost } from './TileXYToCost';\r\n\r\nexport class PathFinder implements IPathFinder {\r\n    board: IBaseBoard;\r\n    astar: IAStar;\r\n\r\n    constCost: number;\r\n    costCallback: GetCostCallbackType | null;\r\n    costCallbackScope: unknown;\r\n    pathMode: PathMode;\r\n    occupiedTest: boolean;\r\n    blockerTest: boolean;\r\n    edgeBlockerTest: boolean;\r\n\r\n    startTileXYZ: XYZType = { x: 0, y: 0, z: 0 };\r\n    cacheCost: boolean;\r\n    weight: number;\r\n    shuffleNeighbors: boolean;\r\n\r\n    constructor({\r\n        board = undefined,\r\n\r\n        cost = 1,\r\n        costCallback = undefined,\r\n        costCallbackScope = undefined,\r\n\r\n        occupiedTest = false,\r\n        blockerTest = false,\r\n        edgeBlockerTest = false,\r\n\r\n        pathMode = PathMode['astar'],\r\n\r\n        cacheCost = true,\r\n\r\n        weight = 10,\r\n\r\n        shuffleNeighbors = false\r\n    }: IConfig = {}) {\r\n\r\n        this.setBoard(board);\r\n\r\n        if (costCallback) {\r\n            this.setCostFunction(costCallback, costCallbackScope);\r\n        } else {\r\n            this.setConstCost(cost);\r\n        }\r\n\r\n        this.setPathMode(pathMode);\r\n        this.setOccupiedTest(occupiedTest);\r\n        this.setBlockerTest(blockerTest);\r\n        this.setEdgeBlockerTest(edgeBlockerTest);\r\n\r\n        this.setCacheCostMode(cacheCost);\r\n        this.setWeight(weight);\r\n        this.setShuffleNeighborsMode(shuffleNeighbors);\r\n\r\n        this.astar = CreateAStar(this);\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.board = null;\r\n        this.astar.destroy();\r\n    }\r\n\r\n    setBoard(\r\n        board?: IBaseBoard\r\n    ): this {\r\n\r\n        this.board = board;\r\n        return this;\r\n    }\r\n\r\n    setConstCost(\r\n        cost?: number\r\n    ): this {\r\n\r\n        this.constCost = cost;\r\n\r\n        if (cost !== undefined) {\r\n            this.setCostFunction();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setCostFunction(\r\n        callback?: GetCostCallbackType,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        this.costCallback = callback;\r\n        this.costCallbackScope = scope;\r\n\r\n        if (callback) {\r\n            this.setConstCost();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setPathMode(\r\n        mode: PathMode | PathModeString\r\n    ): this {\r\n\r\n        if (typeof (mode) === 'string') {\r\n            mode = PathMode[mode];\r\n        }\r\n        this.pathMode = mode;\r\n        return this;\r\n    }\r\n\r\n    setOccupiedTest(\r\n        enable: boolean = true\r\n    ): this {\r\n\r\n        this.occupiedTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setBlockerTest(\r\n        enable: boolean = true\r\n    ): this {\r\n\r\n        this.blockerTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setEdgeBlockerTest(\r\n        enable: boolean = true\r\n    ): this {\r\n\r\n        this.edgeBlockerTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setCacheCostMode(\r\n        enable: boolean = true\r\n    ): this {\r\n\r\n        this.cacheCost = enable;\r\n        return this;\r\n    }\r\n\r\n    setWeight(\r\n        value: number\r\n    ): this {\r\n\r\n        this.weight = value;\r\n        return this;\r\n    }\r\n\r\n    setShuffleNeighborsMode(\r\n        enable: boolean = true\r\n    ): this {\r\n\r\n        this.shuffleNeighbors = enable;\r\n        return this;\r\n    }\r\n\r\n    getCost(\r\n        currNode: CostNodeType,\r\n        prevNode: CostNodeType\r\n    ): CostValueType {\r\n\r\n        return GetCost(this, currNode, prevNode);\r\n    }\r\n\r\n    findArea(\r\n        startChess: IChess,\r\n        movingPoints?: number,\r\n        out: SearchResultType = []\r\n    ): SearchResultType {\r\n\r\n        return FindArea(this, startChess, movingPoints, out);\r\n    }\r\n\r\n    get BLOCKER(): CostValueType {\r\n        return BLOCKER;\r\n    }\r\n\r\n    findPath(\r\n        startChess: IChess,\r\n        endChess: IChess | XYType,\r\n        movingPoints?: number,\r\n        isClosest: boolean = true,\r\n        out: SearchResultType = []\r\n    ): SearchResultType {\r\n\r\n        return FindPath(this, startChess, endChess, movingPoints, isClosest, out);\r\n    }\r\n\r\n    getPath(\r\n        endChess: IChess | XYZType | XYType,\r\n        out: SearchResultType = []\r\n    ): SearchResultType {\r\n\r\n        return GetPath(this, endChess, out);\r\n    }\r\n\r\n    tileXYToCost(\r\n        tileX: XType,\r\n        tileY: YType,\r\n        pathCost: boolean = true\r\n    ): CostValueType {\r\n\r\n        return TileXYToCost(this, tileX, tileY, pathCost);\r\n    }\r\n}", "import { PathFinder } from './PathFinder';\r\n\r\nexport { PathFinder };", "import {\r\n    IMatch,\r\n    SymbolType,\r\n    MatchResult\r\n} from './IMatch';\r\nimport { XYType } from '../Types';\r\nimport { Nieghbors } from '../board'\r\n\r\nexport function MatchAtDir(\r\n    match: IMatch,\r\n    pattern: number | SymbolType[],\r\n    startTileX: number,\r\n    startTileY: number,\r\n    direction: number\r\n): MatchResult | false {\r\n\r\n    let matchNMode = typeof (pattern) === 'number';\r\n    let patternLength: number,\r\n        currSymbol: SymbolType | null;\r\n    if (matchNMode) {\r\n        patternLength = pattern as number;\r\n        currSymbol = null;\r\n    } else {\r\n        patternLength = (pattern as SymbolType[]).length;\r\n    }\r\n\r\n    let symbol: SymbolType,\r\n        wildcard = match.wildcard;\r\n    let curTileXY: XYType;\r\n    let board = match.board;\r\n    let matchedTileXY: XYType[] = [];\r\n    for (let i = 0; i < patternLength; i++) {\r\n        if (curTileXY === undefined) {\r\n            curTileXY = {\r\n                x: startTileX,\r\n                y: startTileY\r\n            };\r\n        } else {\r\n            // Get next tileXY \r\n            curTileXY = Nieghbors.GetNeighborTileXY(board, curTileXY, direction, curTileXY) as XYType;\r\n            if (curTileXY === null) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        symbol = match.getSymbol(curTileXY.x, curTileXY.y);\r\n        if (symbol == null) {\r\n            return false;\r\n        }\r\n        if (symbol !== wildcard) {\r\n            if (matchNMode) { // Match N mode\r\n                if (currSymbol === null) {\r\n                    currSymbol = symbol;\r\n                } else if (currSymbol !== symbol) {\r\n                    return false;\r\n                }\r\n            } else if (pattern[i] !== symbol) { // Pattern list mode\r\n                return false;\r\n            }\r\n        }\r\n\r\n        matchedTileXY.push({\r\n            x: curTileXY.x,\r\n            y: curTileXY.y\r\n        });\r\n    }\r\n\r\n    return {\r\n        tileXY: matchedTileXY,\r\n        direction: direction,\r\n        pattern: pattern\r\n    };\r\n};", "import {\r\n    IMatch,\r\n    SymbolType,\r\n    MatchResult,\r\n    MatchCallbackType\r\n} from './IMatch';\r\nimport { MatchAtDir } from './MatchAtDir';\r\n\r\nexport function MatchAll(\r\n    match: IMatch,\r\n    pattern: number | SymbolType[],\r\n    callback?: MatchCallbackType,\r\n    scope?: unknown,\r\n    getFirst: boolean = false\r\n): MatchResult | void {\r\n\r\n    let board = match.board,\r\n        grid = board.grid;\r\n    let directions = grid.halfDirections,\r\n        dir: number,\r\n        dirMask = match.dirMask;\r\n    let width = board.width,\r\n        height = board.height;\r\n    let result: MatchResult | false;\r\n    for (let i = 0, cnt = directions.length; i < cnt; i++) {\r\n        dir = directions[i];\r\n        if (dirMask[dir] === false) {\r\n            continue;\r\n        }\r\n\r\n        for (let tileY = 0; tileY < height; tileY++) {\r\n            for (let tileX = 0; tileX < width; tileX++) {\r\n                result = MatchAtDir(match, pattern, tileX, tileY, dir);\r\n                if (result === false) {\r\n                    continue;\r\n                }\r\n\r\n                if (callback) {\r\n                    if (scope) {\r\n                        callback.call(scope, result, board);\r\n                    } else {\r\n                        callback(result, board);\r\n                    }\r\n                }\r\n                if (getFirst) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function MatchAny(\r\n    match: IMatch,\r\n    pattern: number | SymbolType[],\r\n): MatchResult | false {\r\n\r\n    let result = MatchAll(match, pattern, null, null, true);\r\n    return (result) ? result : false;\r\n}", "import { IMatch, SymbolType } from './IMatch';\r\nimport { XYType } from '../Types';\r\nimport { Nieghbors } from '../board';\r\n\r\nexport function Group(\r\n    match: IMatch,\r\n    startTileX: number,\r\n    startTileY: number,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let board = match.board;\r\n    let wildcard = match.wildcard;\r\n    let targetSymbol = match.getSymbol(startTileX, startTileY);\r\n    if ((targetSymbol == null) || (targetSymbol === wildcard)) {\r\n        return out;\r\n    }\r\n\r\n    let curTileXY: XYType,\r\n        symbol: SymbolType;\r\n    globalQueue.push(startTileX, startTileY);\r\n    while (globalQueue.length) {\r\n        curTileXY = globalQueue.pop();\r\n        symbol = match.getSymbol(curTileXY.x, curTileXY.y);\r\n        if ((symbol === targetSymbol) || (symbol === wildcard)) {\r\n            out.push(curTileXY);\r\n            globalQueue.push(Nieghbors.GetNeighborTileXY(board, curTileXY));\r\n        }\r\n    }\r\n\r\n    globalQueue.clear();\r\n    return out;\r\n}\r\n\r\nclass Queue {\r\n    data: XYType[] = [];\r\n    visited: Set<string> = new Set();\r\n\r\n    push(\r\n        x: number | XYType | XYType[],\r\n        y?: number\r\n    ): this {\r\n\r\n        if (Array.isArray(x)) { // XYType[]\r\n            let xyArray = x;\r\n            for (let i = 0, cnt = xyArray.length; i < cnt; i++) {\r\n                this.push(xyArray[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        if (typeof (x) === 'object') { // XYType\r\n            let xy = x;\r\n            x = xy.x;\r\n            y = xy.y;\r\n        }\r\n        let key = `${x},${y}`;\r\n        if (this.visited.has(key)) {\r\n            return this;\r\n        }\r\n\r\n        this.data.push({ x: x, y: y });\r\n        this.visited.add(key);\r\n        return this;\r\n    }\r\n\r\n    pop(): XYType {\r\n        return this.data.pop();\r\n    }\r\n\r\n    get length(): number {\r\n        return this.data.length;\r\n    }\r\n\r\n    clear(): this {\r\n        this.data.length = 0;\r\n        this.visited.clear();\r\n        return this;\r\n    }\r\n}\r\n\r\nlet globalQueue = new Queue();", "import {\r\n    IMatch, IConfig,\r\n    IBaseBoard, SymbolType, DirMaskType,\r\n    GetSymbolCallback, MatchCallbackType, ForEachSymbolCallback, MatchResult\r\n} from './IMatch';\r\nimport { XYType } from '../Types';\r\nimport { MatchAll, MatchAny } from './MatchBoard';\r\nimport { MatchAtDir } from './MatchAtDir';\r\nimport { Group } from './Group';\r\nimport { TileXY } from '../board'\r\n\r\nexport class Match implements IMatch {\r\n    board: IBaseBoard;\r\n    wildcard: SymbolType;\r\n    symbols: SymbolType[];\r\n    dirMask: DirMaskType;\r\n\r\n    constructor({\r\n        board,\r\n        wildcard,\r\n        dirMask\r\n    }: IConfig = {}) {\r\n\r\n        this.symbols = []; // tileX+(tileY*board.width)\r\n        this.dirMask = {};\r\n\r\n        this.setBoard(board);\r\n        this.setWildcard(wildcard);\r\n        if (dirMask !== undefined) {\r\n            this.setDirMask(dirMask);\r\n        }\r\n\r\n        this.boot();\r\n    }\r\n\r\n    boot() { }\r\n\r\n    destroy() {\r\n        this.board = undefined;\r\n        this.symbols = undefined;\r\n        this.dirMask = undefined;\r\n    }\r\n\r\n    setBoard(\r\n        board: IBaseBoard\r\n    ): this {\r\n\r\n        this.board = board;\r\n        if (board) {\r\n            this.clearSymbols();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setDirMask(\r\n        dir: number | DirMaskType,\r\n        value: boolean = false\r\n    ): this {\r\n\r\n        if (typeof (dir) === 'object') {\r\n            let dirMask: DirMaskType = dir;\r\n            for (let _dir in dirMask) {\r\n                this.dirMask[_dir] = dirMask[_dir];\r\n            }\r\n        } else {\r\n            this.dirMask[dir] = value;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setDirectionMode(\r\n        mode: number\r\n    ): this {\r\n\r\n        this.board.grid.setDirectionMode(mode);\r\n        return this;\r\n    }\r\n\r\n    clearSymbols(): this {\r\n\r\n        this.refreshSymbols(null);\r\n        return this;\r\n    }\r\n\r\n    setSymbol(\r\n        tileX: number,\r\n        tileY: number,\r\n        symbol: SymbolType\r\n    ) {\r\n\r\n        if (!TileXY.Contains(this.board, tileX, tileY)) {\r\n            return this;\r\n        }\r\n\r\n        this.symbols[this.tileXYToKey(tileX, tileY)] = symbol;\r\n        return this;\r\n    }\r\n\r\n    getSymbol(\r\n        tileX: number,\r\n        tileY: number\r\n    ): SymbolType {\r\n\r\n        return this.symbols[this.tileXYToKey(tileX, tileY)];\r\n    }\r\n\r\n    forEach(\r\n        callback: ForEachSymbolCallback,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        let board = this.board;\r\n        let tileXY: XYType,\r\n            symbol: SymbolType;\r\n        for (let i = 0, cnt = this.symbols.length; i < cnt; i++) {\r\n            symbol = this.symbols[i];\r\n            tileXY = this.keyToTileXY(i, true);\r\n            if (scope) {\r\n                callback.call(scope, symbol, tileXY, board);\r\n            } else {\r\n                callback(symbol, tileXY, board);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    refreshSymbols(\r\n        callback: SymbolType | GetSymbolCallback,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        let board = this.board;\r\n        let width = board.width,\r\n            height = board.height;\r\n        this.symbols.length = width * height;\r\n\r\n        let symbol: SymbolType,\r\n            tileXY: XYType;\r\n        if (typeof (callback) === 'function') {\r\n            // Get symbol by callback\r\n            for (let i = 0, cnt = this.symbols.length; i < cnt; i++) {\r\n                tileXY = this.keyToTileXY(i, true);\r\n                if (scope) {\r\n                    symbol = callback.call(scope, tileXY, board);\r\n                } else {\r\n                    symbol = callback(tileXY, board);\r\n                }\r\n                this.symbols[i] = symbol;\r\n            }\r\n\r\n        } else {\r\n            // Fill a given symbol\r\n            symbol = callback;\r\n            for (let i = 0, cnt = this.symbols.length; i < cnt; i++) {\r\n                this.symbols[i] = symbol;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setWildcard(\r\n        wildcard: SymbolType\r\n    ): this {\r\n\r\n        this.wildcard = wildcard;\r\n        return this;\r\n    }\r\n\r\n    tileXYToKey(\r\n        tileX: number,\r\n        tileY: number\r\n    ): number {\r\n\r\n        return tileX + (tileY * this.board.width);\r\n    }\r\n\r\n    keyToTileXY(\r\n        key: number,\r\n        out: XYType | true = { x: 0, y: 0 }\r\n    ): XYType {\r\n\r\n        if (out === true) {\r\n            out = globTileXY;\r\n        }\r\n        let width = this.board.width;\r\n        out.x = key % width;\r\n        out.y = Math.floor(key / width);\r\n        return out;\r\n    }\r\n\r\n    group(\r\n        startTileX: number,\r\n        startTileY: number,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        return Group(this, startTileX, startTileY, out);\r\n    }\r\n\r\n    match(pattern: number | SymbolType[],\r\n        callback?: MatchCallbackType,\r\n        scope?: unknown,\r\n        getFirst: boolean = false\r\n    ): this {\r\n\r\n        MatchAll(this, pattern, callback, scope, getFirst);\r\n        return this;\r\n    }\r\n\r\n    matchAny(\r\n        pattern: number | SymbolType[],\r\n    ): MatchResult | false {\r\n\r\n        return MatchAny(this, pattern);\r\n    }\r\n\r\n    matchAtDir(\r\n        pattern: number | SymbolType[],\r\n        startTileX: number,\r\n        startTileY: number,\r\n        direction: number\r\n    ): MatchResult | false {\r\n\r\n        return MatchAtDir(this, pattern, startTileX, startTileY, direction);\r\n    }\r\n\r\n}\r\n\r\nlet globTileXY: XYType = { x: 0, y: 0 };", "import { Match } from './Match';\r\n\r\nexport { Match };", "import { XYType, XYZType, IChess } from '../Types';\r\nimport { IBaseBoard } from '../board/IBaseBoard';\r\n\r\nexport const BLOCKER = null;\r\nexport type CostValueType = number | null;\r\nexport type PreTestCallbackType = (lineTileXYArray: XYType[], visiblePoints: number, fov: IFieldOfView) => boolean;\r\nexport type GetCostCallbackType = (currTileXY: XYType, fov: IFieldOfView, lineTileXYArray: XYType[]) => CostValueType;\r\n\r\nexport enum ConeType {\r\n    direction = 0,\r\n    angle = 1\r\n};\r\n\r\nexport type ConeTypeString = 'direction' | 'angle';\r\n\r\nexport interface IConfig {\r\n    chess?: IChess;\r\n\r\n    occupiedTest?: boolean;\r\n    blockerTest?: boolean;\r\n    edgeBlockerTest?: boolean;\r\n    costCallback?: GetCostCallbackType,\r\n    costCallbackScope?: unknown;\r\n    cost?: number;\r\n\r\n    face?: number;\r\n    coneMode?: ConeType | ConeTypeString;\r\n    cone?: number;\r\n};\r\n\r\nexport interface IFieldOfView {\r\n    occupiedTest: boolean;\r\n    blockerTest: boolean;\r\n    edgeBlockerTest: boolean;\r\n    costCallback: GetCostCallbackType,\r\n    costCallbackScope: unknown;\r\n    constCost: number;\r\n\r\n    chess: IChess;\r\n    board: IBaseBoard;\r\n    startTileXYZ: XYZType;\r\n    face: number;\r\n    faceAngle: number;\r\n    coneMode: ConeType;\r\n    cone: number | undefined;\r\n    coneRad: number;\r\n\r\n    costCache: Map<string, CostValueType>;\r\n}", "import { IFieldOfView, ConeType } from './IFieldOfView';\r\nimport { XYType } from '../Types';\r\nimport { TileXY, WorldXY } from '../board';\r\n\r\nexport function IsInCone(\r\n    fov: IFieldOfView,\r\n    targetTileXY: XYType\r\n): boolean {\r\n\r\n    if (fov.cone === undefined) {\r\n        return true;\r\n    }\r\n\r\n    if (fov.coneMode === ConeType.direction) { // Direction\r\n        return TileXY.IsDirectionInCone(fov.board, fov.startTileXYZ, targetTileXY, fov.face, fov.cone);\r\n    } else { // Angle\r\n        return WorldXY.IsAngleInCone(fov.board, fov.startTileXYZ, targetTileXY, fov.faceAngle, fov.coneRad);\r\n    }\r\n}", "import { IFieldOfView, CostValueType, BLOCKER } from './IFieldOfView';\r\nimport { TileXY, Blocker } from '../board';\r\nimport { XYType } from '../Types';\r\nimport { XYToKey } from '../utils/StringKey';\r\n\r\nexport function GetCost(\r\n    fov: IFieldOfView,\r\n    tileXY: XYType,\r\n    lineTileXYArray: XYType[]\r\n): CostValueType {\r\n\r\n    let cost: CostValueType;\r\n    let key = XYToKey(tileXY.x, tileXY.y);\r\n    let costCahce = fov.costCache;\r\n\r\n    if (costCahce.has(key)) {\r\n        cost = costCahce.get(key);\r\n        // console.log(`GetCost: ${key} in costCahe`);\r\n    } else {\r\n        let board = fov.board;\r\n        let tileX = tileXY.x,\r\n            tileY = tileXY.y,\r\n            tileZ = fov.startTileXYZ.z;\r\n\r\n        if (fov.occupiedTest &&  // Occupied test\r\n            TileXY.Contains(board, tileX, tileY, tileZ)\r\n        ) {\r\n\r\n            cost = BLOCKER;\r\n        } else if (fov.blockerTest &&  // Blocker test\r\n            Blocker.HasBlocker(board, tileX, tileY)) {\r\n\r\n            cost = BLOCKER;\r\n        } else if (fov.edgeBlockerTest && // Edge-blocker test\r\n            false) {\r\n            // TODO\r\n            cost = BLOCKER;\r\n        } else {\r\n            let callback = fov.costCallback;\r\n            if (callback) {\r\n                let scope = fov.costCallbackScope;\r\n                if (scope) {\r\n                    cost = callback.call(scope, tileXY, fov, lineTileXYArray);\r\n                } else {\r\n                    cost = callback(tileXY, fov, lineTileXYArray);\r\n                }\r\n                if (cost === undefined) {\r\n                    cost = BLOCKER;\r\n                }\r\n            } else {\r\n                cost = fov.constCost;\r\n            }\r\n        }\r\n\r\n        costCahce.set(key, cost);\r\n    }\r\n\r\n    return cost;\r\n}", "import {\r\n    IFieldOfView,\r\n    BLOCKER\r\n} from './IFieldOfView';\r\nimport { XYType } from '../Types';\r\nimport { GetCost } from './GetCost';\r\n\r\nexport function IsPathVisible(\r\n    fov: IFieldOfView,\r\n    tileXYArray: XYType[],\r\n    visiblePoints?: number\r\n): boolean {\r\n\r\n    let behindBlocker = false;\r\n    for (let i = 1, cnt = tileXYArray.length; i < cnt; i++) {\r\n        let tileXY = tileXYArray[i];\r\n        if (behindBlocker) {\r\n            return false;\r\n        }\r\n\r\n        let cost = GetCost(fov, tileXY, tileXYArray);\r\n        if (cost === BLOCKER) {\r\n            behindBlocker = true;\r\n            continue;\r\n        }\r\n\r\n        if (visiblePoints !== undefined) {\r\n            visiblePoints -= cost;\r\n            if (visiblePoints < 0) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}", "import { IFieldOfView } from './IFieldOfView';\r\nimport { IChess, XYZType, XYType } from '../Types';\r\nimport { TileXY, WorldXY, Shape } from '../board';\r\nimport { IsInCone } from './IsInCone';\r\nimport { IsPathVisible } from './IsPathVisible';\r\nimport { Between as AngleBetween } from '../../utils/math/angle/Between';\r\n\r\nconst LINEOFFSET = 0.001;\r\n\r\nexport function IsInLOS(\r\n    fov: IFieldOfView,\r\n    chess: IChess | XYZType,\r\n    visiblePoints?: number,\r\n    originTileXY: XYType = fov.startTileXYZ\r\n): boolean {\r\n\r\n    if ((visiblePoints !== undefined) && (visiblePoints <= 0)) {\r\n        return false;\r\n    }\r\n\r\n    let board = fov.board;\r\n    let targetTileXYZ = TileXY.ChessToTileXYZ(board, chess);\r\n    if (!IsInCone(fov, targetTileXYZ)) {\r\n        return false;\r\n    }\r\n\r\n    //if (this.debugLog) {\r\n    //    console.log('Visible test from (' + originTileXY.x + ',' + originTileXY.y + ') to (' + targetTileXYZ.x + ',' + targetTileXYZ.y + ')');\r\n    //}\r\n\r\n    let startTileXY = WorldXY.TileXYToWorldXY(board, originTileXY.x, originTileXY.y, true);\r\n    let startX = startTileXY.x,\r\n        startY = startTileXY.y;\r\n    let endTileXY = WorldXY.TileXYToWorldXY(board, targetTileXYZ.x, targetTileXYZ.y, true);\r\n    let endX = endTileXY.x,\r\n        endY = endTileXY.y;\r\n    let lineAngle = AngleBetween(startX, startY, endX, endY);\r\n    // Shift a small distance\r\n    lineAngle += (Math.PI / 2);\r\n    let offsetX = LINEOFFSET * Math.cos(lineAngle);\r\n    let offsetY = LINEOFFSET * Math.sin(lineAngle);\r\n    let line0TileXYArray = Shape.LineToTileXYArray(board,\r\n        (startX + offsetX),\r\n        (startY + offsetY),\r\n        (endX + offsetX),\r\n        (endY + offsetY));\r\n\r\n    // if (this.debugLog) {\r\n    //     console.log('Line 0: ' + JSON.stringify(line0TileXYArray));\r\n    // }\r\n\r\n    let isVisivle = IsPathVisible(fov, line0TileXYArray, visiblePoints);\r\n    if (isVisivle) {\r\n\r\n        // drawLine(\r\n        //     this.debugGraphics,\r\n        //     this.debugVisibleLineColor,\r\n        //     startX, startY, endX, endY\r\n        // );\r\n        return true;\r\n    }\r\n\r\n    // Shift a small distance\r\n    lineAngle += Math.PI;\r\n    offsetX = LINEOFFSET * Math.cos(lineAngle);\r\n    offsetY = LINEOFFSET * Math.sin(lineAngle);\r\n    let line1TileXYArray = Shape.LineToTileXYArray(board,\r\n        (startX + offsetX),\r\n        (startY + offsetY),\r\n        (endX + offsetX),\r\n        (endY + offsetY)\r\n    );\r\n\r\n    // if (this.debugLog) {\r\n    //     console.log('Line 1: ' + JSON.stringify(line1TileXYArray));\r\n    // }\r\n\r\n    // No need do visible checking if path is the same as previous one\r\n    let isEqual = (line0TileXYArray.length === line1TileXYArray.length);\r\n    if (isEqual) {\r\n        for (let i = 0, cnt = line0TileXYArray.length; i < cnt; i++) {\r\n            let tileXY0 = line0TileXYArray[i],\r\n                tileXY1 = line1TileXYArray[i];\r\n            isEqual = (tileXY0.x === tileXY1.x) && (tileXY0.y === tileXY1.y);\r\n            if (!isEqual) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!isEqual) {\r\n        isVisivle = IsPathVisible(fov, line1TileXYArray, visiblePoints);\r\n    }\r\n\r\n    // drawLine(\r\n    //     this.debugGraphics,\r\n    //     ((isVisivle) ? this.debugVisibleLineColor : this.debugInvisibleLineColor),\r\n    //     startX, startY, endX, endY\r\n    // );\r\n\r\n    return isVisivle;\r\n}\r\n\r\n// function drawLine(graphics, color, startX, startY, endX, endY) {\r\n//     if (graphics && (color !== undefined)) {\r\n//         graphics.lineStyle(1, color, 1).lineBetween(startX, startY, endX, endY);\r\n//     }\r\n// }", "import { IFieldOfView } from './IFieldOfView';\r\nimport { IChess, XYType } from '../Types';\r\nimport { IsInLOS } from './IsInLOS';\r\n\r\nexport function LOS(\r\n    fov: IFieldOfView,\r\n    chessArray: IChess[] | XYType[],\r\n    visiblePoints?: number,\r\n    inverse: boolean = false,\r\n    originTileXY: XYType = fov.startTileXYZ,\r\n    out: IChess[] | XYType[] = []\r\n): IChess[] | XYType[] {\r\n\r\n    chessArray.forEach(function (chess) {\r\n        if (IsInLOS(fov, chess, visiblePoints, originTileXY) !== inverse) {\r\n            out.push(chess);\r\n        }\r\n    })\r\n    return out;\r\n}", "import { IFieldOfView } from './IFieldOfView';\r\nimport { XYType } from '../Types';\r\nimport { Ring } from '../board';\r\nimport { IsInLOS } from './IsInLOS';\r\n\r\nexport function FindFOV(\r\n    fov: IFieldOfView,\r\n    visiblePoints?: number,\r\n    originTileXY: XYType = fov.startTileXYZ,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let board = fov.board;\r\n    let isAnyVisible: boolean,\r\n        radius = 1,\r\n        ringTileXYArray: XYType[] = [],\r\n        targetTileXY: XYType;\r\n    do {\r\n        isAnyVisible = false;\r\n        ringTileXYArray.length = 0;\r\n        Ring.RingToTileXYArray(board, originTileXY, radius, ringTileXYArray);\r\n        for (let i = 0, cnt = ringTileXYArray.length; i < cnt; i++) {\r\n            targetTileXY = ringTileXYArray[i];\r\n            if (IsInLOS(fov, targetTileXY, visiblePoints, originTileXY)) {\r\n                isAnyVisible = true;\r\n                out.push(targetTileXY);\r\n            }\r\n        }\r\n        radius++;\r\n    } while (isAnyVisible)\r\n\r\n    return out;\r\n}", "import {\r\n    IFieldOfView,\r\n    IConfig,\r\n    PreTestCallbackType, GetCostCallbackType,\r\n    ConeType, ConeTypeString,\r\n    CostValueType, BLOCKER\r\n} from './IFieldOfView';\r\nimport { IChess, XYZType, XYType } from '../Types';\r\nimport { IBaseBoard } from '../board/IBaseBoard';\r\nimport { WorldXY } from '../board'\r\nimport { DegToRad } from '../../utils/math/angle/DegToRad';\r\nimport { Normalize as AngleNormalize } from '../../utils/math/angle/Normalize';\r\nimport { IsInLOS } from './IsInLOS';\r\nimport { LOS } from './LOS';\r\nimport { FindFOV } from './FindFOV';\r\n\r\n\r\nexport class FieldOfView implements IFieldOfView {\r\n    occupiedTest: boolean;\r\n    blockerTest: boolean;\r\n    edgeBlockerTest: boolean;\r\n    costCallback: GetCostCallbackType;\r\n    costCallbackScope: unknown;\r\n    constCost: number;\r\n\r\n    chess: IChess;\r\n    _face: number;\r\n    faceAngle: number;\r\n    coneMode: ConeType;\r\n    _cone: number | undefined;\r\n    coneRad: number;\r\n\r\n    costCache: Map<string, CostValueType>;\r\n\r\n    constructor({\r\n        occupiedTest = false,\r\n        blockerTest = false,\r\n        edgeBlockerTest = false,\r\n\r\n        costCallback = undefined,\r\n        costCallbackScope = undefined,\r\n        cost = 1,\r\n\r\n        chess = undefined,\r\n        face = 0,\r\n        coneMode = ConeType.direction,\r\n        cone = undefined\r\n    }: IConfig = {}) {\r\n\r\n        this.setOccupiedTest(occupiedTest);\r\n        this.setBlockerTest(blockerTest);\r\n        this.setEdgeBlockerTest(edgeBlockerTest);\r\n        if (costCallback) {\r\n            this.setCostFunction(costCallback, costCallbackScope);\r\n        } else {\r\n            this.setConstCost(cost);\r\n        }\r\n\r\n        this.setChess(chess);\r\n        this.setFace(face);\r\n        this.setConeMode(coneMode);\r\n        this.setCone(cone);\r\n\r\n        this.costCache = new Map();\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    setChess(\r\n        chess?: IChess\r\n    ): this {\r\n\r\n        if (chess === undefined) {\r\n            this.chess = null;\r\n        } else {\r\n            this.chess = chess;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get face(): number {\r\n        return this._face;\r\n    }\r\n\r\n    set face(direction: number) {\r\n        if (this.board === null) {\r\n            return;\r\n        }\r\n\r\n        direction = this.board.grid.directionNormalize(direction);\r\n        this._face = direction;\r\n        if (this.coneMode === 0) { // Direction\r\n            // Do nothing\r\n        } else { // Angle\r\n            var angle = WorldXY.AngleToward(this.board, this.startTileXYZ, direction); // -PI~PI\r\n            this.faceAngle = AngleNormalize(angle); // 0~2PI\r\n        }\r\n    }\r\n\r\n    setFace(\r\n        direction: number\r\n    ): this {\r\n\r\n        this.face = direction;\r\n        return this;\r\n    }\r\n\r\n    get cone(): number {\r\n        return this._cone;\r\n    }\r\n\r\n    set cone(value: number) {\r\n        this._cone = value;\r\n\r\n        if (value !== undefined) {\r\n            if (this.coneMode === 0) { // Direction\r\n            } else { // Angle\r\n                this.coneRad = DegToRad(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    setConeMode(\r\n        mode: ConeType | ConeTypeString\r\n    ): this {\r\n\r\n        if (typeof (mode) === 'string') {\r\n            mode = ConeType[mode];\r\n        }\r\n        this.coneMode = mode;\r\n        return this;\r\n    }\r\n\r\n    setCone(\r\n        value?: number\r\n    ): this {\r\n\r\n        this.cone = value;\r\n        return this;\r\n    }\r\n\r\n    setOccupiedTest(\r\n        enable = true\r\n    ): this {\r\n\r\n        this.occupiedTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setBlockerTest(\r\n        enable = true\r\n    ): this {\r\n\r\n        this.blockerTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setEdgeBlockerTest(\r\n        enable = true\r\n    ): this {\r\n\r\n        this.edgeBlockerTest = enable;\r\n        return this;\r\n    }\r\n\r\n    setCostFunction(\r\n        callback?: GetCostCallbackType,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        this.costCallback = callback;\r\n        this.costCallbackScope = scope;\r\n\r\n        if (callback) {\r\n            this.setConstCost();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setConstCost(\r\n        cost?: number\r\n    ): this {\r\n\r\n        this.constCost = cost;\r\n\r\n        if (cost !== undefined) {\r\n            this.setCostFunction();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // setDebugGraphics(graphics) {\r\n    //     this.debugGraphics = graphics;\r\n    //     return this;\r\n    // }\r\n\r\n    // setDebugLineColor(visibleLineColor, invisibleLineColor) {\r\n    //     this.debugVisibleLineColor = visibleLineColor;\r\n    //     this.debugInvisibleLineColor = invisibleLineColor;\r\n    //     return this;\r\n    // }\r\n\r\n    // setDebugLog(enabled) {\r\n    //     if (enabled === undefined) {\r\n    //         enabled = true;\r\n    //     }\r\n    //     this.debugLog = enabled;\r\n    //     return this;\r\n    // }\r\n\r\n    // clearDebugGraphics() {\r\n    //     if (this.debugGraphics) {\r\n    //         this.debugGraphics.clear();\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    isInLos(\r\n        chess: IChess | XYZType,\r\n        visiblePoints?: number | undefined,\r\n        originTileXY: XYType = this.startTileXYZ\r\n    ): boolean {\r\n\r\n        let result = IsInLOS(this, chess, visiblePoints, originTileXY);\r\n        this.costCache.clear();\r\n        return result;\r\n    }\r\n\r\n    los(\r\n        chessArray: IChess[] | XYType[],\r\n        visiblePoints: number | undefined,\r\n        inverse: boolean = false,\r\n        originTileXY: XYType = this.startTileXYZ,\r\n        out?: IChess[] | XYType[]\r\n    ): IChess[] | XYType[] {\r\n\r\n        let result = LOS(this, chessArray, visiblePoints, inverse, originTileXY, out);\r\n        this.costCache.clear();\r\n        return result;\r\n    }\r\n\r\n    findFOV(\r\n        visiblePoints?: number,\r\n        originTileXY: XYType = this.startTileXYZ,\r\n        out: XYType[] = []\r\n    ): XYType[] {\r\n\r\n        let result = FindFOV(this, visiblePoints, originTileXY, out);\r\n        this.costCache.clear();\r\n        return result;\r\n    }\r\n\r\n    get board(): IBaseBoard {\r\n\r\n        return (this.chess && this.chess.rexChess) ? this.chess.rexChess.board : null;\r\n    }\r\n\r\n    get startTileXYZ(): XYZType {\r\n\r\n        return (this.chess && this.chess.rexChess) ? this.chess.rexChess.tileXYZ : null;\r\n    }\r\n\r\n    get BLOCKER() {\r\n        return BLOCKER;\r\n    }\r\n}", "import { FieldOfView } from './FieldOfView';\r\n\r\nexport {\r\n    FieldOfView\r\n}", "import { IBaseBoard } from '../board/IBaseBoard';\r\nimport { XYType } from '../Types';\r\nimport { cube2cr } from '../grid/hexagon/CubeTransfer';\r\n\r\nexport function GetHexagonMap(\r\n    board: IBaseBoard,\r\n    radius: number,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let mode = board.grid.mode;\r\n    let r1: number,\r\n        r2: number;\r\n    for (let q = -radius; q <= radius; q++) {\r\n        r1 = Math.max(-radius, -q - radius);\r\n        r2 = Math.min(radius, -q + radius);\r\n        for (let r = r1; r <= r2; r++) {\r\n            out.push(cube2cr(mode, q, r, -q - r));\r\n        }\r\n    }\r\n\r\n    return out;\r\n}", "import { IBaseBoard } from '../board/IBaseBoard';\r\nimport { XYType } from '../Types';\r\nimport { cube2cr } from '../grid/hexagon/CubeTransfer';\r\n\r\nexport function GetTriangleMap(\r\n    board: IBaseBoard,\r\n    type: number,\r\n    height: number,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let mode = board.grid.mode;\r\n    let rStart: number,\r\n        rEnd: number;\r\n    for (let q = 0; q <= height; q++) {\r\n        if (type === 1) {\r\n            rStart = height - q;\r\n            rEnd = height;\r\n        } else {\r\n            rStart = 0;\r\n            rEnd = height - q;\r\n        }\r\n\r\n        for (let r = rStart; r <= rEnd; r++) {\r\n            out.push(cube2cr(mode, q, r, -q - r));\r\n        }\r\n    }\r\n\r\n    return out;\r\n}", "import { IBaseBoard } from '../board/IBaseBoard';\r\nimport { XYType } from '../Types';\r\nimport { cube2cr } from '../grid/hexagon/CubeTransfer';\r\n\r\nexport function GetParallelogramMap(\r\n    board: IBaseBoard,\r\n    type: number,\r\n    width: number,\r\n    height: number,\r\n    out: XYType[] = []\r\n): XYType[] {\r\n\r\n    let mode = board.grid.mode;\r\n    switch (type) {\r\n        case 1:\r\n            for (let s = 0; s <= width; s++) {\r\n                for (let q = 0; q <= height; q++) {\r\n                    out.push(cube2cr(mode, q, -q - s, s));\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n            for (let r = 0; r <= width; r++) {\r\n                for (let s = 0; s <= height; s++) {\r\n                    out.push(cube2cr(mode, -r - s, r, s));\r\n                }\r\n            }\r\n            break;\r\n        default: // case 0\r\n            for (let q = 0; q <= width; q++) {\r\n                for (let r = 0; r <= height; r++) {\r\n                    out.push(cube2cr(mode, q, r, -q - r));\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    return out;\r\n}", "import { GetHexagonMap } from './GetHexagonMap';\r\nimport { GetTriangleMap } from './GetTriangleMap';\r\nimport { GetParallelogramMap } from './GetParallelogramMap';\r\n\r\nexport {\r\n    GetHexagonMap,\r\n    GetTriangleMap,\r\n    GetParallelogramMap,\r\n};", "// Boards\r\nimport { BaseBoard, LogicBoard, Board } from './board';\r\n\r\n// Grids\r\nimport {\r\n    Quad as QuadGrid,\r\n    Hexagon as HexagonGrid\r\n} from './grid';\r\n\r\n// Path finder\r\nimport { PathFinder } from './pathfinder';\r\n\r\n// Match\r\nimport { Match } from './match';\r\n\r\n// Field of view\r\nimport { FieldOfView } from './fieldofview';\r\n\r\n// HexagonMap\r\nimport * as HexagonMap from './hexagonmap';\r\n\r\nexport {\r\n    // Board\r\n    BaseBoard, LogicBoard, Board,\r\n\r\n    // Grids\r\n    QuadGrid, HexagonGrid,\r\n\r\n    // Path finder\r\n    PathFinder,\r\n\r\n    // Match\r\n    Match,\r\n\r\n    // Field of view\r\n    FieldOfView,\r\n\r\n    // HexagonMap\r\n    HexagonMap\r\n}", "import '../../renderer/BindingQueue.js';\nimport '../Frame.js';\nimport { Texture } from '../Texture.js';\nimport { CreateCanvas } from '../CreateCanvas.js';\n\nfunction CanvasTexture(width = 32, height = 32) {\r\n    const ctx = CreateCanvas(width, height);\r\n    return new Texture(ctx.canvas);\r\n}\n\nexport { CanvasTexture };\n", "function BatchTexturedQuad(sprite, renderer) {\r\n    const texture = sprite.texture;\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n    const binding = texture.binding;\r\n    if (shader.count === buffer.batchSize) {\r\n        renderer.flush();\r\n    }\r\n    const data = sprite.vertexData;\r\n    renderer.textures.request(texture);\r\n    const textureIndex = binding.index;\r\n    data[4] = textureIndex;\r\n    data[10] = textureIndex;\r\n    data[16] = textureIndex;\r\n    data[22] = textureIndex;\r\n    const offset = shader.count * buffer.quadElementSize;\r\n    buffer.vertexViewF32.set(data, offset);\r\n    const color = sprite.vertexColor;\r\n    const U32 = buffer.vertexViewU32;\r\n    U32[offset + 5] = color[0];\r\n    U32[offset + 11] = color[2];\r\n    U32[offset + 17] = color[3];\r\n    U32[offset + 23] = color[1];\r\n    shader.count++;\r\n}\n\nexport { BatchTexturedQuad };\n", "import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport { GameObject } from '../GameObject.js';\n\nclass Container extends GameObject {\r\n    constructor(x = 0, y = 0) {\r\n        super(x, y);\r\n        this._alpha = 1;\r\n        this.type = 'Container';\r\n    }\r\n    setSize(width, height = width) {\r\n        this.transform.updateExtent(width, height);\r\n        return this;\r\n    }\r\n    setPosition(x, y) {\r\n        this.transform.position.set(x, y);\r\n        return this;\r\n    }\r\n    setOrigin(x, y = x) {\r\n        this.transform.origin.set(x, y);\r\n        return this;\r\n    }\r\n    setSkew(x, y = x) {\r\n        this.transform.skew.set(x, y);\r\n        return this;\r\n    }\r\n    setScale(x, y = x) {\r\n        this.transform.scale.set(x, y);\r\n        return this;\r\n    }\r\n    setRotation(value) {\r\n        this.transform.rotation = value;\r\n        return this;\r\n    }\r\n    set width(value) {\r\n        this.transform.updateExtent(value);\r\n    }\r\n    get width() {\r\n        return this.transform.extent.width;\r\n    }\r\n    set height(value) {\r\n        this.transform.updateExtent(undefined, value);\r\n    }\r\n    get height() {\r\n        return this.transform.extent.height;\r\n    }\r\n    set x(value) {\r\n        this.transform.position.x = value;\r\n    }\r\n    get x() {\r\n        return this.transform.position.x;\r\n    }\r\n    set y(value) {\r\n        this.transform.position.y = value;\r\n    }\r\n    get y() {\r\n        return this.transform.position.y;\r\n    }\r\n    set originX(value) {\r\n        this.transform.origin.x = value;\r\n    }\r\n    get originX() {\r\n        return this.transform.origin.x;\r\n    }\r\n    set originY(value) {\r\n        this.transform.origin.y = value;\r\n    }\r\n    get originY() {\r\n        return this.transform.origin.y;\r\n    }\r\n    set skewX(value) {\r\n        this.transform.skew.x = value;\r\n    }\r\n    get skewX() {\r\n        return this.transform.skew.x;\r\n    }\r\n    set skewY(value) {\r\n        this.transform.skew.y = value;\r\n    }\r\n    get skewY() {\r\n        return this.transform.skew.y;\r\n    }\r\n    set scaleX(value) {\r\n        this.transform.scale.x = value;\r\n    }\r\n    get scaleX() {\r\n        return this.transform.scale.x;\r\n    }\r\n    set scaleY(value) {\r\n        this.transform.scale.y = value;\r\n    }\r\n    get scaleY() {\r\n        return this.transform.scale.y;\r\n    }\r\n    set rotation(value) {\r\n        this.transform.rotation = value;\r\n    }\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            this.setDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n}\n\nexport { Container };\n", "function DrawTexturedQuad(sprite, renderer) {\r\n    const frame = sprite.frame;\r\n    if (!frame) {\r\n        return;\r\n    }\r\n    const ctx = renderer.ctx;\r\n    const transform = sprite.transform;\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y } = transform.extent;\r\n    ctx.save();\r\n    ctx.setTransform(a, b, c, d, tx, ty);\r\n    ctx.globalAlpha = sprite.alpha;\r\n    ctx.drawImage(frame.texture.image, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\r\n    ctx.restore();\r\n}\n\nexport { DrawTexturedQuad };\n", "function PackColor(rgb, alpha) {\r\n    const ua = ((alpha * 255) | 0) & 0xFF;\r\n    return ((ua << 24) | rgb) >>> 0;\r\n}\n\nexport { PackColor };\n", "import { PackColor } from './PackColor.js';\n\nfunction PackColors(sprite) {\r\n    const alpha = sprite.vertexAlpha;\r\n    const tint = sprite.vertexTint;\r\n    const color = sprite.vertexColor;\r\n    color[0] = PackColor(tint[0], alpha[0]);\r\n    color[1] = PackColor(tint[1], alpha[1]);\r\n    color[2] = PackColor(tint[2], alpha[2]);\r\n    color[3] = PackColor(tint[3], alpha[3]);\r\n    return sprite;\r\n}\n\nexport { PackColors };\n", "function SetFrame(texture, key, ...children) {\r\n    const frame = texture.getFrame(key);\r\n    const { u0, u1, v0, v1, pivot } = frame;\r\n    children.forEach(child => {\r\n        if (!child || frame === child.frame) {\r\n            return;\r\n        }\r\n        child.frame = frame;\r\n        if (pivot) {\r\n            child.setOrigin(pivot.x, pivot.y);\r\n        }\r\n        child.frame.setExtent(child);\r\n        child.hasTexture = true;\r\n        const data = child.vertexData;\r\n        data[2] = u0;\r\n        data[3] = v0;\r\n        data[8] = u0;\r\n        data[9] = v1;\r\n        data[14] = u1;\r\n        data[15] = v1;\r\n        data[20] = u1;\r\n        data[21] = v0;\r\n    });\r\n    return children;\r\n}\n\nexport { SetFrame };\n", "import '../../renderer/BindingQueue.js';\nimport '../../textures/Frame.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance.js';\nimport { SetFrame } from './SetFrame.js';\n\nfunction SetTexture(key, frame, ...children) {\r\n    if (!key) {\r\n        children.forEach(child => {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else {\r\n        let texture;\r\n        if (key instanceof Texture) {\r\n            texture = key;\r\n        }\r\n        else {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n        if (!texture) {\r\n            console.warn(`Invalid Texture key: ${key}`);\r\n        }\r\n        else {\r\n            children.forEach(child => {\r\n                child.texture = texture;\r\n            });\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n    return children;\r\n}\n\nexport { SetTexture };\n", "import { GetVertices } from '../components/transform/GetVertices.js';\n\nfunction UpdateVertices(sprite) {\r\n    const data = sprite.vertexData;\r\n    const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(sprite.transform);\r\n    data[0] = x0;\r\n    data[1] = y0;\r\n    data[6] = x1;\r\n    data[7] = y1;\r\n    data[12] = x2;\r\n    data[13] = y2;\r\n    data[18] = x3;\r\n    data[19] = y3;\r\n    return sprite;\r\n}\n\nexport { UpdateVertices };\n", "import '../../GameInstance.js';\nimport '../../math/matrix2d/Matrix2D.js';\nimport '../../geom/rectangle/Contains.js';\nimport '../../geom/rectangle/Rectangle.js';\nimport '../../utils/NOOP.js';\nimport '../../math/vec2/Vec2Callback.js';\nimport '../../renderer/BindingQueue.js';\nimport '../../config/DefaultOrigin.js';\nimport '../../textures/Frame.js';\nimport '../../textures/Texture.js';\nimport '../../display/DepthFirstSearch.js';\nimport '../../display/GetChildIndex.js';\nimport '../../display/RemoveChildAt.js';\nimport '../../display/RemoveChild.js';\nimport '../events/AddedToWorldEvent.js';\nimport '../events/DestroyEvent.js';\nimport '../events/RemovedFromWorldEvent.js';\nimport '../../events/Emit.js';\nimport '../../display/SetWorld.js';\nimport '../../display/SetParent.js';\nimport { DIRTY_CONST } from '../DIRTY_CONST.js';\nimport '../../display/RemoveChildrenBetween.js';\nimport '../../display/DestroyChildren.js';\nimport '../../display/ReparentChildren.js';\nimport '../../textures/TextureManagerInstance.js';\nimport { BatchTexturedQuad } from '../../renderer/webgl1/draw/BatchTexturedQuad.js';\nimport '../components/transform/GetVertices.js';\nimport '../components/bounds/BoundsComponent.js';\nimport '../components/input/InputComponent.js';\nimport '../../math/vec2/Vec2.js';\nimport '../components/transform/UpdateLocalTransform.js';\nimport '../../math/matrix2d/Copy.js';\nimport '../components/transform/UpdateWorldTransform.js';\nimport '../components/transform/TransformComponent.js';\nimport '../GameObject.js';\nimport { Container } from '../container/Container.js';\nimport { DrawTexturedQuad } from '../../renderer/canvas/draw/DrawTexturedQuad.js';\nimport '../../renderer/webgl1/colors/PackColor.js';\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors.js';\nimport { SetFrame } from './SetFrame.js';\nimport { SetTexture } from './SetTexture.js';\nimport { UpdateVertices } from './UpdateVertices.js';\n\nclass Sprite extends Container {\r\n    constructor(x, y, texture, frame) {\r\n        super(x, y);\r\n        this.hasTexture = false;\r\n        this._tint = 0xffffff;\r\n        this.type = 'Sprite';\r\n        this.vertexData = new Float32Array(24).fill(0);\r\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\r\n        this.vertexAlpha = new Float32Array(4).fill(1);\r\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\r\n        this.setTexture(texture, frame);\r\n    }\r\n    setTexture(key, frame) {\r\n        SetTexture(key, frame, this);\r\n        return this;\r\n    }\r\n    setFrame(key) {\r\n        SetFrame(this.texture, key, this);\r\n        return this;\r\n    }\r\n    isRenderable() {\r\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\r\n    }\r\n    preRender() {\r\n        if (this.isDirty(DIRTY_CONST.COLORS)) {\r\n            PackColors(this);\r\n            this.clearDirty(DIRTY_CONST.COLORS);\r\n        }\r\n        if (this.isDirty(DIRTY_CONST.TRANSFORM)) {\r\n            UpdateVertices(this);\r\n            this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n    renderGL(renderer) {\r\n        this.preRender();\r\n        BatchTexturedQuad(this, renderer);\r\n    }\r\n    renderCanvas(renderer) {\r\n        this.preRender();\r\n        DrawTexturedQuad(this, renderer);\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(value) {\r\n        if (value !== this._alpha) {\r\n            this._alpha = value;\r\n            const vertexAlpha = this.vertexAlpha;\r\n            vertexAlpha[0] = value;\r\n            vertexAlpha[1] = value;\r\n            vertexAlpha[2] = value;\r\n            vertexAlpha[3] = value;\r\n            this.setDirty(DIRTY_CONST.ALPHA);\r\n        }\r\n    }\r\n    get tint() {\r\n        return this._tint;\r\n    }\r\n    set tint(value) {\r\n        if (value !== this._tint) {\r\n            this._tint = value;\r\n            const vertexTint = this.vertexTint;\r\n            vertexTint[0] = value;\r\n            vertexTint[1] = value;\r\n            vertexTint[2] = value;\r\n            vertexTint[3] = value;\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n    destroy(reparentChildren) {\r\n        super.destroy(reparentChildren);\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n        this.vertexData = null;\r\n        this.vertexColor = null;\r\n        this.vertexAlpha = null;\r\n        this.vertexTint = null;\r\n    }\r\n}\n\nexport { Sprite };\n", "import { ICanvas } from './ICanvas';\r\n\r\nexport function Resize(\r\n    canvas: ICanvas,\r\n    width: number,\r\n    height: number) {\r\n\r\n    let newCanvasWidth = Math.ceil(width * canvas.resolution);\r\n    let newCanvasHeight = Math.ceil(height * canvas.resolution);\r\n    let srcCanvas = canvas.canvas;\r\n    if ((srcCanvas.width === newCanvasWidth) || (srcCanvas.height === newCanvasHeight)) {\r\n        Clear(canvas);\r\n        return;\r\n    }\r\n\r\n    srcCanvas.width = newCanvasWidth;\r\n    srcCanvas.height = newCanvasHeight;\r\n    canvas.texture.setSize(width, height);\r\n    canvas.setSize(width, height);\r\n    canvas.updateTexture();\r\n}\r\n\r\nexport function Clear(\r\n    canvas: ICanvas\r\n): void {\r\n\r\n    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\r\n    canvas.updateTexture();\r\n};\r\n\r\nexport function Fill(\r\n    canvas: ICanvas,\r\n    fillStyle: string | CanvasGradient | CanvasPattern = '#fff'\r\n): void {\r\n\r\n    let context = canvas.context;\r\n    context.fillStyle = fillStyle;\r\n    context.fillRect(0, 0, canvas.canvas.width, canvas.canvas.height);\r\n    canvas.updateTexture();\r\n};\r\n\r\nexport function LoadFromURL(\r\n    canvas: ICanvas,\r\n    url: string,\r\n    callback?: () => void\r\n): void {\r\n\r\n    let img = new Image();\r\n    img.onload = function () {\r\n        let resolution = canvas.resolution;\r\n        let displayWidth = img.width / resolution,\r\n            displayHeight = img.height / resolution;\r\n        Resize(canvas, displayWidth, displayHeight);\r\n        canvas.context.drawImage(img, 0, 0);\r\n        canvas.updateTexture();\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n\r\n        img.onload = null;\r\n        img.src = '';\r\n        img.remove();\r\n    }\r\n    img.src = url;\r\n};\r\n\r\nexport function LoadFromURLPromise(\r\n    canvas: ICanvas,\r\n    url: string\r\n): Promise<number> {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        LoadFromURL(canvas, url, resolve);\r\n    });\r\n};\r\n\r\nexport function GetDataURL(\r\n    canvas: ICanvas,\r\n    type?: string,\r\n    encoderOptions?: unknown\r\n): string {\r\n\r\n    return canvas.canvas.toDataURL(type, encoderOptions);\r\n};\r\n\r\nexport function GetPixel(\r\n    canvas: ICanvas,\r\n    x: number,\r\n    y: number,\r\n    out: [number, number, number, number] = [0, 0, 0, 0]\r\n): [number, number, number, number] {\r\n\r\n    let data = canvas.context.getImageData(x, y, 1, 1).data;\r\n    out[0] = data[0];\r\n    out[1] = data[1];\r\n    out[2] = data[2];\r\n    out[3] = data[3];\r\n    return out;\r\n}\r\n\r\nexport function SetPixel(\r\n    canvas: ICanvas,\r\n    x: number, y: number,\r\n    r: number, g: number, b: number, a?: number\r\n): void {\r\n\r\n    if (a === undefined) {\r\n        a = ((r !== 0) || (g !== 0) || (b !== 0)) ? 255 : 0;\r\n    }\r\n\r\n    let imgData = canvas.context.createImageData(1, 1);\r\n    imgData.data[0] = r;\r\n    imgData.data[1] = g;\r\n    imgData.data[2] = b;\r\n    imgData.data[3] = a;\r\n    canvas.context.putImageData(imgData, x, y);\r\n    canvas.updateTexture();\r\n}", "import { CanvasTexture } from '@phaserjs/phaser/textures/types/CanvasTexture';\r\nimport { DIRTY_CONST } from '@phaserjs/phaser/gameobjects/DIRTY_CONST';\r\nimport { GameInstance } from '@phaserjs/phaser/GameInstance';\r\nimport { IContainer } from '@phaserjs/phaser/gameobjects/container/IContainer';\r\nimport { Sprite } from '@phaserjs/phaser/gameobjects/sprite/Sprite';\r\nimport { Resize, Clear } from './CanvasMethods';\r\n\r\nexport class BaseCanvas extends Sprite {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    resolution: number;\r\n\r\n    constructor(\r\n        x: number = 0,\r\n        y: number = 0,\r\n        width: number = 32,\r\n        height: number = 32\r\n    ) {\r\n\r\n        super(x, y, CanvasTexture());\r\n        this.type = 'rexCanvas';\r\n\r\n        const game = GameInstance.get();\r\n        this.resolution = game.renderer.resolution;\r\n        this.canvas = this.texture.image as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        this.resize(width, height);\r\n    }\r\n\r\n    updateTexture(): this {\r\n\r\n        if (this.texture.binding) {\r\n            this.texture.binding.update();\r\n        }\r\n\r\n        this.setDirty(DIRTY_CONST.TEXTURE);\r\n        return this;\r\n    }\r\n\r\n    destroy(reparentChildren?: IContainer): void {\r\n        this.texture.destroy();\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        super.destroy(reparentChildren);\r\n    }\r\n\r\n    resize(width: number, height: number): this {\r\n\r\n        Resize(this, width, height);\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        Clear(this);\r\n        return this;\r\n    }\r\n}", "import { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CanvasTexture } from '@phaserjs/phaser/textures/types/CanvasTexture';\r\n\r\n/**\r\n * Draw on canvas texture.\r\n *\r\n * @param {(string | Texture)} key Texture key, or texture object.\r\n * @param {(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void} callback Drawing callback.\r\n * @param {*} [scope] Context of drawing callback.\r\n * @param {number} [resolution=1] Resolution of canvas.\r\n * @returns {Texture} Texture object.\r\n */\r\nexport function DrawCanvasTexture(\r\n    key: string | Texture,\r\n    callback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void,\r\n    scope?: unknown,\r\n    resolution: number = 1\r\n): Texture {\r\n\r\n    let texture: Texture;\r\n    if (typeof (key) === 'string') {\r\n        let textureManager = TextureManagerInstance.get();\r\n        if (!textureManager.has(key)) {\r\n            textureManager.add(key, CanvasTexture());\r\n        }\r\n        texture = textureManager.get(key);\r\n    } else {\r\n        texture = key;\r\n    }\r\n\r\n    let canvas = texture.image as HTMLCanvasElement;\r\n    let context = canvas.getContext('2d');\r\n\r\n    if (scope) {\r\n        callback.call(scope, canvas, context);\r\n    } else {\r\n        callback(canvas, context);\r\n    }\r\n\r\n    texture.setSize(\r\n        canvas.width / resolution,\r\n        canvas.height / resolution\r\n    );\r\n    if (texture.binding) {\r\n        texture.binding.update();\r\n    }\r\n\r\n    return texture;\r\n}", "export function DrawCircle(\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    rx: number,\r\n    ry: number,\r\n    fillStyle?: string | CanvasGradient | CanvasPattern,\r\n    strokeStyle?: string | CanvasGradient | CanvasPattern,\r\n    lineWidth: number = 2\r\n): void {\r\n\r\n    context.beginPath();\r\n\r\n    context.ellipse(x, y, rx, ry, 0, 0, (2 * Math.PI));\r\n\r\n    if (fillStyle) {\r\n        context.fillStyle = fillStyle;\r\n        context.fill();\r\n    }\r\n\r\n    if (strokeStyle) {\r\n        context.strokeStyle = strokeStyle;\r\n        context.lineWidth = lineWidth;\r\n        context.stroke();\r\n    }\r\n}", "import { GetCanvasGradientCallbackType } from '../types/GetCanvasGradientCallbackType';\r\n\r\nexport function GetStyle(\r\n    style: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D\r\n): string | CanvasGradient | CanvasPattern {\r\n\r\n    switch (typeof (style)) {\r\n        case 'number': return `#${style.toString(16)}`;\r\n        case 'function': return style(canvas, context);\r\n        default: return style;\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { DrawCircle } from '../../utils/canvas/DrawCircle';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport function CreateCircleTexture(\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        const x = canvas.width / 2,\r\n            y = canvas.height / 2,\r\n            rx = (width - lineWidth) / 2,\r\n            ry = (height - lineWidth) / 2;\r\n\r\n        DrawCircle(\r\n            canvas, context,\r\n            x, y, rx, ry,\r\n            GetStyle(fillStyle, canvas, context),\r\n            GetStyle(strokeStyle, canvas, context),\r\n            lineWidth\r\n        );\r\n\r\n    });\r\n}", "export function DrawRectangle(\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    fillStyle?: string | CanvasGradient | CanvasPattern,\r\n    strokeStyle?: string | CanvasGradient | CanvasPattern,\r\n    lineWidth?: number\r\n) {\r\n\r\n    context.beginPath();\r\n\r\n    context.rect(x, y, width, height);\r\n\r\n    if (fillStyle) {\r\n        context.fillStyle = fillStyle;\r\n        context.fill();\r\n    }\r\n\r\n    if (strokeStyle) {\r\n        context.strokeStyle = strokeStyle;\r\n        context.lineWidth = lineWidth;\r\n        context.stroke();\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { DrawRectangle } from '../../utils/canvas/DrawRectangle';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport function CreateRectangleTexture(\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n        const halfLineWidth = lineWidth / 2;\r\n        const x = halfLineWidth,\r\n            y = halfLineWidth;\r\n\r\n        width -= lineWidth;\r\n        height -= lineWidth;\r\n\r\n        DrawRectangle(\r\n            canvas, context,\r\n            x, y,\r\n            width, height,\r\n            GetStyle(fillStyle, canvas, context),\r\n            GetStyle(strokeStyle, canvas, context),\r\n            lineWidth\r\n        );\r\n\r\n    });\r\n}", "import { IRoundRectangle, CornerRadiusType, IRadiusConfig } from './IRoundRectangle';\r\n\r\nexport class RoundRectangle implements IRoundRectangle {\r\n    x: number;\r\n    y: number;\r\n    _width: number = 0;\r\n    _height: number = 0;\r\n    cornerRadius: { tl: CornerRadiusType, tr: CornerRadiusType, bl: CornerRadiusType, br: CornerRadiusType } =\r\n        { tl: GetRadius(0), tr: GetRadius(0), bl: GetRadius(0), br: GetRadius(0) }\r\n\r\n    constructor(\r\n        x: number = 0,\r\n        y: number = x,\r\n        width: number = 0,\r\n        height: number = width,\r\n        radiusConfig: IRadiusConfig | number = 0\r\n    ) {\r\n\r\n        this.setTo(x, y, width, height, radiusConfig);\r\n    }\r\n\r\n    setTo(\r\n        x: number = 0,\r\n        y: number = x,\r\n        width: number = 0,\r\n        height: number = width,\r\n        radiusConfig: IRadiusConfig | number = 0\r\n    ): this {\r\n\r\n        this.setPosition(x, y);\r\n        this.setRadius(radiusConfig);\r\n        this.setSize(width, height);\r\n        return this;\r\n    }\r\n\r\n    setPosition(\r\n        x: number = 0,\r\n        y: number = x\r\n    ): this {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    setRadius(\r\n        config: IRadiusConfig | number = 0\r\n    ): this {\r\n\r\n        let radius = this.cornerRadius;\r\n        if (typeof (config) === 'number') {\r\n            const defaultRadiusX = config;\r\n            const defaultRadiusY = config;\r\n            radius.tl = GetRadius(undefined, defaultRadiusX, defaultRadiusY);\r\n            radius.tr = GetRadius(undefined, defaultRadiusX, defaultRadiusY);\r\n            radius.bl = GetRadius(undefined, defaultRadiusX, defaultRadiusY);\r\n            radius.br = GetRadius(undefined, defaultRadiusX, defaultRadiusY);\r\n        } else {\r\n            const defaultRadiusX = config.x || 0;\r\n            const defaultRadiusY = config.y || 0;\r\n            radius.tl = GetRadius(config.tl, defaultRadiusX, defaultRadiusY);\r\n            radius.tr = GetRadius(config.tr, defaultRadiusX, defaultRadiusY);\r\n            radius.bl = GetRadius(config.bl, defaultRadiusX, defaultRadiusY);\r\n            radius.br = GetRadius(config.br, defaultRadiusX, defaultRadiusY);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setSize(\r\n        width: number = 0,\r\n        height: number = width\r\n    ): this {\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    get minWidth(): number {\r\n        let radius = this.cornerRadius;\r\n        return Math.max(radius.tl.x + radius.tr.x, radius.bl.x + radius.br.x);\r\n    }\r\n\r\n    get minHeight(): number {\r\n        let radius = this.cornerRadius;\r\n        return Math.max(radius.tl.y + radius.bl.y, radius.tr.y + radius.br.y);\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value) {\r\n\r\n        if (value == null) {\r\n            value = 0;\r\n        }\r\n        this._width = Math.max(value, this.minWidth);\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value) {\r\n\r\n        if (value == null) {\r\n            value = 0;\r\n        }\r\n        this._height = Math.max(value, this.minHeight);\r\n    }\r\n\r\n    get radius() {\r\n\r\n        let radius = this.cornerRadius;\r\n        let max = Math.max(\r\n            radius.tl.x,\r\n            radius.tl.y,\r\n            radius.tr.x,\r\n            radius.tr.y,\r\n            radius.bl.x,\r\n            radius.bl.y,\r\n            radius.br.x,\r\n            radius.br.y\r\n        );\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction GetRadius(\r\n    radius: number | CornerRadiusType,\r\n    defaultRadiusX?: number,\r\n    defaultRadiusY?: number\r\n): CornerRadiusType {\r\n\r\n    if (radius === undefined) {\r\n        return {\r\n            x: defaultRadiusX,\r\n            y: defaultRadiusY\r\n        };\r\n    } else if (typeof (radius) === 'number') {\r\n        return {\r\n            x: radius,\r\n            y: radius\r\n        };\r\n    } else {\r\n        return radius;\r\n    }\r\n}", "import { IRadiusConfig, CornerRadiusType } from '../geom/roundrectangle/IRoundRectangle';\r\nimport { RoundRectangle } from '../geom/roundrectangle/RoundRectangle';\r\nimport { DegToRad } from '../math/angle/DegToRad';\r\n\r\nconst Rad0 = DegToRad(0);\r\nconst Rad90 = DegToRad(90);\r\nconst Rad180 = DegToRad(180);\r\nconst Rad270 = DegToRad(270);\r\n\r\nexport function DrawRoundRectangle(\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    radiusConfig: IRadiusConfig | number,\r\n    fillStyle?: string | CanvasGradient | CanvasPattern,\r\n    strokeStyle?: string | CanvasGradient | CanvasPattern,\r\n    lineWidth?: number\r\n) {\r\n\r\n    const geom = new RoundRectangle(x, y, width, height, radiusConfig),\r\n        minWidth = geom.minWidth,\r\n        minHeight = geom.minHeight,\r\n        scaleRX = (width >= minWidth) ? 1 : (width / minWidth),\r\n        scaleRY = (height >= minHeight) ? 1 : (height / minHeight);\r\n\r\n    const cornerRadius = geom.cornerRadius;\r\n    let radius: CornerRadiusType,\r\n        radiusX: number,\r\n        radiusY: number,\r\n        centerX: number,\r\n        centerY: number;\r\n\r\n    context.beginPath();\r\n\r\n    context.translate(x, y);\r\n\r\n    // Bottom-right\r\n    radius = cornerRadius.br;\r\n    radiusX = radius.x * scaleRX;\r\n    radiusY = radius.y * scaleRY;\r\n    centerX = geom.width - radiusX;\r\n    centerY = geom.height - radiusY;\r\n    if (IsArcCorner(radius)) {\r\n        context.ellipse(centerX, centerY, radiusX, radiusY, 0, Rad0, Rad90);\r\n    } else {\r\n        context.moveTo(geom.width, centerY);\r\n        context.lineTo(geom.width, geom.height);\r\n        context.lineTo(centerX, geom.height);\r\n    }\r\n\r\n    // Bottom-left\r\n    radius = cornerRadius.bl;\r\n    radiusX = radius.x * scaleRX;\r\n    radiusY = radius.y * scaleRY;\r\n    centerX = radiusX;\r\n    centerY = geom.height - radiusY;\r\n    context.lineTo(radiusX, geom.height);\r\n    if (IsArcCorner(radius)) {\r\n        context.ellipse(centerX, centerY, radiusX, radiusY, 0, Rad90, Rad180);\r\n    } else {\r\n        context.lineTo(0, geom.height);\r\n        context.lineTo(0, centerY);\r\n    }\r\n\r\n    // Top-left\r\n    radius = cornerRadius.tl;\r\n    radiusX = radius.x * scaleRX;\r\n    radiusY = radius.y * scaleRY;\r\n    centerX = radiusX;\r\n    centerY = radiusY;\r\n    context.lineTo(0, centerY);\r\n    if (IsArcCorner(radius)) {\r\n        context.ellipse(centerX, centerY, radiusX, radiusY, 0, Rad180, Rad270);\r\n    } else {\r\n        context.lineTo(0, 0);\r\n        context.lineTo(centerX, 0);\r\n    }\r\n\r\n    // Top-right\r\n    radius = cornerRadius.tr;\r\n    radiusX = radius.x * scaleRX;\r\n    radiusY = radius.y * scaleRY;\r\n    centerX = geom.width - radiusX;\r\n    centerY = radiusY;\r\n    context.lineTo(centerX, 0);\r\n    if (IsArcCorner(radius)) {\r\n        context.ellipse(centerX, centerY, radiusX, radiusY, 0, Rad270, Rad0);\r\n    } else {\r\n        context.lineTo(geom.width, 0);\r\n        context.lineTo(geom.width, centerY);\r\n    }\r\n    context.closePath();\r\n\r\n    if (fillStyle) {\r\n        context.fillStyle = fillStyle;\r\n        context.fill();\r\n    }\r\n\r\n    if (strokeStyle) {\r\n        context.strokeStyle = strokeStyle;\r\n        context.lineWidth = lineWidth;\r\n        context.stroke();\r\n    }\r\n}\r\n\r\nfunction IsArcCorner(\r\n    radius: CornerRadiusType\r\n): boolean {\r\n\r\n    return ((radius.x !== 0) && (radius.y !== 0));\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { IRadiusConfig } from '../../utils/geom/roundrectangle/IRoundRectangle';\r\nimport { DrawRoundRectangle } from '../../utils/canvas/DrawRoundRectangle';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    width?: number,\r\n    height?: number,\r\n    radius?: IRadiusConfig | number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport function CreateRoundRectangleTexture(\r\n    key: string | Texture,\r\n    {\r\n        width = 32,\r\n        height = width,\r\n        radius = 0,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n        const halfLineWidth = lineWidth / 2;\r\n        const x = halfLineWidth,\r\n            y = halfLineWidth;\r\n\r\n        width -= lineWidth;\r\n        height -= lineWidth;\r\n\r\n        DrawRoundRectangle(\r\n            canvas, context,\r\n            x, y,\r\n            width, height,\r\n            radius,\r\n            GetStyle(fillStyle, canvas, context),\r\n            GetStyle(strokeStyle, canvas, context),\r\n            lineWidth\r\n        );\r\n\r\n    });\r\n}", "import { Vec2Type } from '../types/VectorType';\r\n\r\nexport function DrawPolygon(\r\n    canvas: HTMLCanvasElement,\r\n    context: CanvasRenderingContext2D,\r\n    points: Vec2Type[],\r\n    fillStyle?: string | CanvasGradient | CanvasPattern,\r\n    strokeStyle?: string | CanvasGradient | CanvasPattern,\r\n    lineWidth: number = 2,\r\n    lineJoin: 'bevel' | 'round' | 'miter' = 'round'\r\n): void {\r\n\r\n    context.beginPath();\r\n\r\n    context.lineJoin = lineJoin;\r\n\r\n    let point = points[0];\r\n\r\n    context.moveTo(point.x, point.y);\r\n\r\n    for (let i = 1, cnt = points.length; i < cnt; i++) {\r\n        point = points[i];\r\n        context.lineTo(point.x, point.y);\r\n    }\r\n\r\n    context.closePath();\r\n\r\n    if (fillStyle) {\r\n        context.fillStyle = fillStyle;\r\n        context.fill();\r\n    }\r\n\r\n    if (strokeStyle) {\r\n        context.strokeStyle = strokeStyle;\r\n        context.lineWidth = lineWidth;\r\n        context.stroke();\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { DrawCanvasTexture } from './DrawCanvasTexture';\r\nimport { Vec2Type } from '../../utils/types/VectorType';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\nimport { DrawPolygon } from '../../utils/canvas/DrawPolygon';\r\nimport { GetStyle } from '../../utils/canvas/GetStyle';\r\n\r\nexport interface IConfig {\r\n    points?: Vec2Type[],\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number,\r\n    lineJoin?: 'bevel' | 'round' | 'miter'\r\n}\r\n\r\nexport function CreatePolygonTexture(\r\n    key: string | Texture,\r\n    {\r\n        points,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2,\r\n        lineJoin = 'round'\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    return DrawCanvasTexture(key, function (canvas, context) {\r\n        if ((!points) || (points.length === 0)) {\r\n            canvas.width = 1;\r\n            canvas.height = 1;\r\n            return;\r\n        }\r\n\r\n        if (!strokeStyle) {\r\n            lineWidth = 0;\r\n        }\r\n\r\n        const minX = GetMinProperty(points, 'x');\r\n        const minY = GetMinProperty(points, 'y');\r\n        const maxX = GetMaxProperty(points, 'x');\r\n        const maxY = GetMaxProperty(points, 'y');\r\n\r\n        const width = maxX - minX;\r\n        const height = maxY - minY;\r\n\r\n        const halfW = width / 2;\r\n        const halfH = height / 2;\r\n        const halfLW = lineWidth / 2;\r\n\r\n        canvas.width = Math.ceil(width);\r\n        canvas.height = Math.ceil(height);\r\n\r\n        let drawPoints: Vec2Type[] = [];\r\n        for (let i = 0, cnt = points.length; i < cnt; i++) {\r\n            const point = points[i];\r\n            drawPoints.push({\r\n                x: Indent((point.x - minX), halfW, halfLW),\r\n                y: Indent((point.y - minY), halfH, halfLW)\r\n            })\r\n        }\r\n\r\n        DrawPolygon(\r\n            canvas, context,\r\n            drawPoints,\r\n            GetStyle(fillStyle, canvas, context),\r\n            GetStyle(strokeStyle, canvas, context),\r\n            lineWidth,\r\n            lineJoin\r\n        )\r\n\r\n    });\r\n}\r\n\r\nfunction GetMaxProperty(\r\n    items: object[],\r\n    key: string\r\n): number {\r\n\r\n    let result = -Infinity;\r\n    for (let i = 0, cnt = items.length; i < cnt; i++) {\r\n        result = Math.max(result, items[i][key]);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction GetMinProperty(\r\n    items: object[],\r\n    key: string\r\n): number {\r\n\r\n    let result = Infinity;\r\n    for (let i = 0, cnt = items.length; i < cnt; i++) {\r\n        result = Math.min(result, items[i][key]);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction Indent(\r\n    value: number,\r\n    halfBound: number,\r\n    offset: number\r\n): number {\r\n\r\n    if (value < halfBound) {\r\n        return (value + offset);\r\n    } else if (value > halfBound) {\r\n        return (value - offset);\r\n    } else {\r\n        return value;\r\n    }\r\n}", "import { Texture } from '@phaserjs/phaser/textures/Texture';\r\nimport { CreatePolygonTexture } from './CreatePolygonTexture';\r\nimport { GetCanvasGradientCallbackType } from '../../utils/types/GetCanvasGradientCallbackType';\r\n\r\nexport enum Direction {\r\n    right = 0,\r\n    down = 1,\r\n    left = 2,\r\n    up = 3\r\n}\r\n\r\nexport interface IConfig {\r\n    direction?: Direction,\r\n    width?: number,\r\n    height?: number,\r\n    fillStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    strokeStyle?: string | number | CanvasGradient | CanvasPattern | GetCanvasGradientCallbackType,\r\n    lineWidth?: number\r\n}\r\n\r\nexport function CreateTriangleTexture(\r\n    key: string | Texture,\r\n    {\r\n        direction = Direction.right,\r\n        width = 32,\r\n        height = width,\r\n        fillStyle,\r\n        strokeStyle,\r\n        lineWidth = 2\r\n    }: IConfig = {}\r\n): Texture {\r\n\r\n    let x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number;\r\n    switch (direction) {\r\n        case Direction.down:\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width / 2;\r\n            y3 = height;\r\n            break;\r\n        case Direction.left:\r\n            x1 = 0;\r\n            y1 = height / 2;\r\n            x2 = width;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        case Direction.up:\r\n            x1 = 0;\r\n            y1 = height;\r\n            x2 = width / 2;\r\n            y2 = 0;\r\n            x3 = width;\r\n            y3 = height;\r\n            break;\r\n        default: // Direction.right\r\n            x1 = 0;\r\n            y1 = 0;\r\n            x2 = 0;\r\n            y2 = height;\r\n            x3 = width;\r\n            y3 = height / 2;\r\n            break;\r\n    }\r\n\r\n    return CreatePolygonTexture(key, {\r\n        points: [\r\n            { x: x1, y: y1 },\r\n            { x: x2, y: y2 },\r\n            { x: x3, y: y3 }\r\n        ],\r\n        fillStyle: fillStyle,\r\n        strokeStyle: strokeStyle,\r\n        lineWidth: lineWidth\r\n    })\r\n}", "import { DrawCanvasTexture } from './DrawCanvasTexture';\r\n\r\nimport { CreateCircleTexture } from './CreateCircleTexture';\r\nimport { CreateRectangleTexture } from './CreateRectangleTexture';\r\nimport { CreateRoundRectangleTexture } from './CreateRoundRectangleTexture';\r\nimport { CreatePolygonTexture } from './CreatePolygonTexture';\r\nimport { CreateTriangleTexture } from './CreateTriangleTexture';\r\n\r\nexport {\r\n    DrawCanvasTexture,\r\n\r\n    CreateCircleTexture,\r\n    CreateRectangleTexture,\r\n    CreateRoundRectangleTexture,\r\n    CreatePolygonTexture,\r\n    CreateTriangleTexture\r\n}", "import { Frame } from '@phaserjs/phaser/textures/Frame';\r\n\r\nexport function DrawFrame(\r\n    frame: Frame,\r\n    canvas: HTMLCanvasElement\r\n): void {\r\n\r\n    if (canvas.width !== frame.width) {\r\n        canvas.width = frame.width;\r\n    }\r\n    if (canvas.height !== frame.height) {\r\n        canvas.height = frame.height;\r\n    }\r\n\r\n    let context = canvas.getContext('2d');\r\n    context.drawImage(\r\n        frame.texture.image as HTMLCanvasElement,\r\n        frame.x, frame.y, frame.width, frame.height\r\n    );\r\n}", "import { ICanvas } from './ICanvas';\r\nimport { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { DrawCanvasTexture } from '../../texture/canvastexture'\r\nimport { DrawFrame } from '../../utils/texture/DrawFrameToCanvas';\r\n\r\nexport function GenerateTexture(\r\n    canvas: ICanvas,\r\n    key: string,\r\n    x: number = 0,\r\n    y: number = 0,\r\n    width: number = canvas.width,\r\n    height: number = canvas.height\r\n) {\r\n\r\n    let resolution = canvas.resolution;\r\n\r\n    let srcCanvas = canvas.canvas,\r\n        srcWidth = Math.ceil(width * resolution),\r\n        srcHeight = Math.ceil(height * resolution)\r\n\r\n    DrawCanvasTexture(key, function (destCanvas, destContext) {\r\n        if (destCanvas.width !== srcWidth) {\r\n            destCanvas.width = srcWidth;\r\n        }\r\n        if (destCanvas.height !== srcHeight) {\r\n            destCanvas.height = srcHeight;\r\n        }\r\n        destContext.clearRect(0, 0, srcWidth, srcHeight);\r\n        destContext.drawImage(srcCanvas, x, y, srcWidth, srcHeight);\r\n    }, undefined, canvas.resolution);\r\n};\r\n\r\nexport function LoadTexture(\r\n    canvas: ICanvas,\r\n    key: string,\r\n    frame?: string | number\r\n): void {\r\n\r\n    let textureManager = TextureManagerInstance.get();\r\n    if (!textureManager.has(key)) {\r\n        return;\r\n    }\r\n\r\n    DrawFrame(\r\n        textureManager.get(key).getFrame(frame),\r\n        canvas.canvas\r\n    );\r\n\r\n    let canvasWidth = canvas.canvas.width,\r\n        canvasHeight = canvas.canvas.height,\r\n        resolution = canvas.resolution;\r\n    let displayWidth = canvasWidth / resolution;\r\n    let displayHeight = canvasHeight / resolution;\r\n    canvas.texture.setSize(displayWidth, displayHeight);\r\n    canvas.setSize(displayWidth, displayHeight);\r\n    canvas.updateTexture();\r\n}\r\n", "import { BaseCanvas } from './BaseCanvas';\r\nimport {\r\n    Fill,\r\n    LoadFromURL, LoadFromURLPromise, GetDataURL,\r\n    GetPixel, SetPixel\r\n} from './CanvasMethods';\r\nimport {\r\n    GenerateTexture, LoadTexture\r\n} from './TextureMethods';\r\n\r\n\r\nexport class Canvas extends BaseCanvas {\r\n\r\n    fill(\r\n        fillStyle: string | CanvasGradient | CanvasPattern = '#fff'\r\n    ): this {\r\n\r\n        Fill(this, fillStyle);\r\n        return this;\r\n    }\r\n\r\n    getCanvas(): HTMLCanvasElement {\r\n        return this.canvas;\r\n    }\r\n\r\n    getContext(): CanvasRenderingContext2D {\r\n        return this.context;\r\n    }\r\n\r\n    getDataURL(\r\n        type?: string,\r\n        encoderOptions?: unknown\r\n    ): string {\r\n\r\n        return GetDataURL(this, type, encoderOptions);\r\n    }\r\n\r\n    getPixel(\r\n        x: number,\r\n        y: number,\r\n        out: [number, number, number, number] = [0, 0, 0, 0]\r\n    ): [number, number, number, number] {\r\n\r\n        return GetPixel(this, x, y, out);\r\n    }\r\n\r\n    generateTexture(\r\n        key: string,\r\n        x: number = 0,\r\n        y: number = 0,\r\n        width: number = this.width,\r\n        height: number = this.height\r\n    ): this {\r\n\r\n        GenerateTexture(this, key, x, y, width, height);\r\n        return this;\r\n    }\r\n\r\n    loadFromURL(\r\n        url: string,\r\n        callback?: () => void\r\n    ): this {\r\n\r\n        LoadFromURL(this, url, callback);\r\n        return this;\r\n    }\r\n\r\n    loadFromURLPromise(\r\n        url: string\r\n    ): Promise<number> {\r\n\r\n        return LoadFromURLPromise(this, url);\r\n    }\r\n\r\n    loadTexture(\r\n        key: string,\r\n        frame?: string | number\r\n    ): this {\r\n\r\n        LoadTexture(this, key, frame);\r\n        return this;\r\n    }\r\n\r\n    setPixel(\r\n        x: number, y: number,\r\n        r: number, g: number, b: number, a?: number\r\n    ): this {\r\n\r\n        SetPixel(this, x, y, r, g, b, a);\r\n        return this;\r\n    }\r\n}", "import { Canvas } from './Canvas';\r\n\r\nimport { BaseCanvas } from './BaseCanvas';\r\nimport {\r\n    Resize, Clear, Fill,\r\n    LoadFromURL, LoadFromURLPromise, GetDataURL,\r\n    GetPixel, SetPixel\r\n} from './CanvasMethods';\r\nimport {\r\n    GenerateTexture, LoadTexture\r\n} from './TextureMethods';\r\n\r\nexport {\r\n    Canvas,\r\n\r\n    BaseCanvas,\r\n    Clear,\r\n    Fill,\r\n    GenerateTexture,\r\n    GetDataURL,\r\n    GetPixel,\r\n    LoadFromURL,\r\n    LoadFromURLPromise,\r\n    LoadTexture,\r\n    Resize,\r\n    SetPixel\r\n}", "import CSVParser from 'papaparse/papaparse.min.js';\r\n\r\nexport { CSVParser }", "import { IConfig } from './ICSVToArray';\r\nimport { CSVParser } from '../../utils/string/papaparse';\r\n\r\n/**\r\n * onver csv-format string to an 2d array.\r\n *\r\n * @export\r\n * @param {string} csvString\r\n * @param {IConfig} [{\r\n *         delimiter = ',',\r\n *         convert = true\r\n *     }={}]\r\n * @returns {any[]}\r\n */\r\nexport function CSVToArray(\r\n    csvString: string,\r\n    {\r\n        delimiter = ',',\r\n        convert = true\r\n    }: IConfig = {}\r\n): any[] {\r\n\r\n    let arr: any[] = CSVParser.parse(csvString, {\r\n        delimiter: delimiter,\r\n        dynamicTyping: convert\r\n    }).data;\r\n    return arr;\r\n};", "import { CSVToArray } from './CSVToArray';\r\n\r\nexport { CSVToArray };", "import * as firebase from 'firebase/app';\r\nimport { IBase } from '../utils/IBase';\r\nimport {\r\n    IBaseEventEmitter,\r\n    IConfig as IEventEmitterConfig\r\n} from '../../../utils/eventemitter/IBaseEventEmitter';\r\nimport { IHistory } from './History';\r\n\r\nexport type UserInfoType = {\r\n    userID: string,\r\n    userName: string\r\n}\r\n\r\nexport interface IMessage {\r\n\r\n    message: unknown;\r\n    senderID: string;\r\n    senderName?: string;\r\n    stamp?: boolean;\r\n}\r\n\r\nexport type EventNameMapType = {\r\n    receive?: string\r\n}\r\n\r\nexport const DefaultEventNames: EventNameMapType = {\r\n    receive: 'receive'\r\n}\r\n\r\nexport interface IConfig extends IEventEmitterConfig {\r\n    root?: string;\r\n\r\n    senderID?: string | UserInfoType;\r\n    senderName?: string;\r\n    receiverID?: string;\r\n    history?: number | boolean;\r\n\r\n    eventNames?: EventNameMapType;\r\n}\r\n\r\nexport interface IBroadcast extends IBaseEventEmitter, IBase {\r\n\r\n    // Sender    \r\n    sendToRef: firebase.database.Reference;\r\n    userInfo: UserInfoType;\r\n    userID: string;\r\n    userName: string;\r\n    receiverID: string;\r\n    skipFirst: boolean;\r\n    stamp: boolean;\r\n\r\n    // Receiver \r\n    receiverRef: firebase.database.Reference;\r\n    isReceiving: boolean;\r\n    history: IHistory;\r\n\r\n    // Events\r\n    eventNames: EventNameMapType\r\n}", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function ClearEvent (emitter: IEventEmitter, event: string): IEventEmitter\r\n{\r\n    emitter.events.delete(event);\r\n\r\n    return emitter;\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function Emit (emitter: IEventEmitter, event: string, ...args: unknown[]): boolean\r\n{\r\n    if (emitter.events.size === 0 || !emitter.events.has(event))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    for (const ee of listeners)\r\n    {\r\n        ee.callback.apply(ee.context, args);\r\n\r\n        if (ee.once)\r\n        {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n\r\n    return true;\r\n}\r\n", "import { IEventInstance } from './IEventInstance';\r\n\r\nexport class EventEmitter\r\n{\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    constructor ()\r\n    {\r\n        this.events = new Map();\r\n    }\r\n}\r\n", "export class EventInstance\r\n{\r\n    callback: Function;\r\n    context: unknown;\r\n    once: boolean;\r\n\r\n    constructor (callback: Function, context: unknown, once: boolean = false)\r\n    {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetEventNames (emitter: IEventEmitter): string[]\r\n{\r\n    return [ ...emitter.events.keys() ];\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListenerCount (emitter: IEventEmitter, event: string): number\r\n{\r\n    const listeners = emitter.events.get(event);\r\n\r\n    return (listeners) ? listeners.size : 0;\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListeners (emitter: IEventEmitter, event: string): Function[]\r\n{\r\n    const out: Function[] = [];\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    listeners.forEach(listener =>\r\n    {\r\n        out.push(listener.callback);\r\n    });\r\n\r\n    return out;\r\n}\r\n", "import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function Off (emitter: IEventEmitter, event: string, callback?: Function | IEventInstance, context?: unknown, once?: boolean): IEventEmitter\r\n{\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n\r\n    if (!callback)\r\n    {\r\n        //  Remove all events matching the given key\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance)\r\n    {\r\n        listeners.delete(callback as IEventInstance);\r\n    }\r\n    else\r\n    {\r\n        const hasContext: boolean = !context;\r\n        const hasOnce: boolean = (once !== undefined);\r\n\r\n        for (const listener of listeners)\r\n        {\r\n            if (\r\n                (listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)\r\n            )\r\n            {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        events.delete(event);\r\n    }\r\n\r\n    return emitter;\r\n}\r\n", "import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function On (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter, once: boolean = false): IEventInstance\r\n{\r\n    if (typeof callback !== 'function')\r\n    {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n\r\n    if (!listeners)\r\n    {\r\n        emitter.events.set(event, new Set([ listener ]));\r\n    }\r\n    else\r\n    {\r\n        listeners.add(listener);\r\n    }\r\n\r\n    return listener;\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\nimport { On } from './On';\r\n\r\nexport function Once (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter): IEventInstance\r\n{\r\n    return On(emitter, event, callback, context, true);\r\n}\r\n", "import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function RemoveAllListeners (emitter: IEventEmitter, event?: string): void\r\n{\r\n    if (!event)\r\n    {\r\n        emitter.events.clear();\r\n    }\r\n    else\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n}\r\n", "// Copy from phaser4 : https://github.com/phaserjs/phaser\r\n\r\nimport { ClearEvent } from './ClearEvent';\r\nimport { Emit } from './Emit';\r\nimport { EventEmitter } from './EventEmitter';\r\nimport { EventInstance } from './EventInstance';\r\nimport { GetEventNames } from './GetEventNames';\r\nimport { GetListenerCount } from './GetListenerCount';\r\nimport { GetListeners } from './GetListeners';\r\nimport { Off } from './Off';\r\nimport { On } from './On';\r\nimport { Once } from './Once';\r\nimport { RemoveAllListeners } from './RemoveAllListeners';\r\n\r\nexport {\r\n    ClearEvent,\r\n    Emit,\r\n    EventEmitter,\r\n    EventInstance,\r\n    GetEventNames,\r\n    GetListenerCount,\r\n    GetListeners,\r\n    Off,\r\n    On,\r\n    Once,\r\n    RemoveAllListeners\r\n};\r\n", "import { IBaseEventEmitter } from './IBaseEventEmitter';\r\nimport { IEventEmitter as IEE } from './events/IEventEmitter';\r\nimport {\r\n    EventEmitter as EE,\r\n    On, Once, Off, Emit, RemoveAllListeners, ClearEvent,\r\n    GetListenerCount, GetEventNames, GetListeners\r\n} from './events';\r\n\r\nexport class BaseEventEmitter implements IBaseEventEmitter {\r\n    eventEmitter: IEE;\r\n    privateEE: boolean;\r\n\r\n    setEventEmitter(\r\n        eventEmitter?: IEE\r\n    ) {\r\n\r\n        this.privateEE = (eventEmitter === undefined);\r\n        this.eventEmitter = (this.privateEE) ? (new EE()) : eventEmitter;\r\n        return this;\r\n    }\r\n\r\n    clearEventEmitter(): this {\r\n\r\n        this.setEventEmitter(null);\r\n        return this;\r\n    }\r\n\r\n    destroyEventEmitter(): this {\r\n        if (this.eventEmitter && this.privateEE) {\r\n            RemoveAllListeners(this.eventEmitter);\r\n            this.eventEmitter = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    on(\r\n        event: string,\r\n        callback: Function,\r\n        context: unknown = this,\r\n        once: boolean = false\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { On(this.eventEmitter, event, callback, context, once); }\r\n        return this;\r\n    }\r\n\r\n    once(\r\n        event: string,\r\n        callback: Function,\r\n        context: unknown = this\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { Once(this.eventEmitter, event, callback, context); }\r\n        return this;\r\n    }\r\n\r\n    off(\r\n        event: string,\r\n        callback?: Function,\r\n        context?: unknown,\r\n        once?: boolean\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { Off(this.eventEmitter, event, callback, context, once); }\r\n        return this;\r\n    }\r\n\r\n    emit(\r\n        event: string,\r\n        ...args: unknown[]\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { Emit(this.eventEmitter, event, ...args); }\r\n        return this;\r\n    }\r\n\r\n    removeAllListeners(\r\n        event?: string\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { RemoveAllListeners(this.eventEmitter, event); }\r\n        return this;\r\n    }\r\n\r\n    clearEvent(\r\n        event: string\r\n    ): this {\r\n\r\n        if (this.eventEmitter) { ClearEvent(this.eventEmitter, event); }\r\n        return this;\r\n    }\r\n\r\n    getListenerCount(\r\n        event: string\r\n    ): number {\r\n\r\n        return (this.eventEmitter) ? GetListenerCount(this.eventEmitter, event) : 0;\r\n    }\r\n\r\n    getEventNames(\r\n    ): string[] {\r\n\r\n        return (this.eventEmitter) ? GetEventNames(this.eventEmitter) : [];\r\n    }\r\n\r\n    getListeners(\r\n        event: string\r\n    ): Function[] {\r\n\r\n        return (this.eventEmitter) ? GetListeners(this.eventEmitter, event) : [];\r\n    }\r\n\r\n}", "import {\r\n    IBroadcast,\r\n    IMessage\r\n} from './IBroadcast';\r\n\r\nexport function Send(\r\n    broadcast: IBroadcast,\r\n    message?: unknown\r\n): Promise<any> {\r\n\r\n    if ((!broadcast.sendToRef) || (broadcast.sendToRef.key !== broadcast.receiverID)) {\r\n        broadcast.sendToRef = broadcast.database.ref(broadcast.rootPath).child(broadcast.receiverID);\r\n    }\r\n\r\n    // Clear message\r\n    if (message === undefined) {\r\n        return broadcast.sendToRef.remove(); // Promise\r\n    }\r\n\r\n    let d: IMessage = {\r\n        message: message,\r\n        senderID: broadcast.userID,\r\n        stamp: broadcast.stamp,\r\n    };\r\n    if (broadcast.userName !== undefined) {\r\n        d.senderName = broadcast.userName;\r\n    }\r\n\r\n    broadcast.skipFirst = false;\r\n    broadcast.stamp = !broadcast.stamp;\r\n\r\n    return broadcast.sendToRef.set(d);\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IBroadcast,\r\n    IMessage\r\n} from './IBroadcast';\r\n\r\nexport function StartReceiving(\r\n    broadcast: IBroadcast\r\n): void {\r\n\r\n    if (broadcast.isReceiving && (broadcast.receiverRef.key === broadcast.receiverID)) {\r\n        return;\r\n    }\r\n\r\n    StopReceiving(broadcast);\r\n\r\n    broadcast.isReceiving = true;\r\n    broadcast.skipFirst = true;  // Skip previous message\r\n    broadcast.receiverRef = broadcast.database.ref(broadcast.rootPath).child(broadcast.receiverID);\r\n    broadcast.receiverRef.on('value', OnReceive, broadcast);\r\n    broadcast.receiverRef.onDisconnect().remove();\r\n};\r\n\r\nexport function StopReceiving(\r\n    broadcast: IBroadcast\r\n): void {\r\n\r\n    if (!broadcast.isReceiving) {\r\n        return;\r\n    }\r\n\r\n    broadcast.isReceiving = false;\r\n    broadcast.receiverRef.off('value', OnReceive, broadcast);\r\n    broadcast.receiverRef.remove();\r\n    broadcast.receiverRef.onDisconnect().cancel();\r\n}\r\n\r\nfunction OnReceive(\r\n    this: IBroadcast,\r\n    snapshot: firebase.database.DataSnapshot\r\n): void {\r\n\r\n    if (this.skipFirst) {\r\n        this.skipFirst = false;\r\n        return;\r\n    }\r\n    let d = snapshot.val() as IMessage;\r\n    if (d == null) {\r\n        return;\r\n    }\r\n\r\n    delete d.stamp;\r\n    this.history.add(d);\r\n    this.emit(this.eventNames.receive, d);\r\n}", "import { IMessage } from './IBroadcast';\r\n\r\nexport interface IHistory {\r\n    records: IMessage[];\r\n\r\n    add(\r\n        record: IMessage\r\n    ): this;\r\n\r\n    clear(): this;\r\n\r\n    changeUserName(\r\n        userID: string,\r\n        userName?: string\r\n    ): this;\r\n}\r\n\r\nexport class History {\r\n\r\n    maxLength: number;\r\n    records: IMessage[];\r\n\r\n    constructor({\r\n        maxLength = -1\r\n    }: {\r\n        maxLength?: number\r\n    } = {}) {\r\n\r\n        this.maxLength = maxLength; // -1: Infinity\r\n        this.records = [];\r\n    }\r\n\r\n    add(\r\n        record: IMessage\r\n    ): this {\r\n\r\n        if (this.maxLength === 0) {\r\n            return this;\r\n        }\r\n\r\n        this.records.push(record);\r\n        if ((this.maxLength > 0) && (this.records.length > this.maxLength)) {\r\n            this.records.shift();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        this.records.length = 0;\r\n        return this;\r\n    }\r\n\r\n    changeUserName(\r\n        userID: string,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (this.maxLength === 0) {\r\n            return this;\r\n        }\r\n\r\n        this.records.forEach((record) => {\r\n            if (record.senderID === userID) {\r\n                record.senderName = userName;\r\n            }\r\n        })\r\n\r\n        return this;\r\n    }\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IBroadcast,\r\n    IConfig, EventNameMapType, DefaultEventNames,\r\n    UserInfoType, IMessage,\r\n} from './IBroadcast';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport { Send } from './Send';\r\nimport { StartReceiving, StopReceiving } from './ReceiveMethods';\r\nimport { History, IHistory } from './History';\r\n\r\nexport class Broadcast extends BaseEventEmitter implements IBroadcast {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    // Sender    \r\n    sendToRef: firebase.database.Reference;\r\n    userInfo: UserInfoType;\r\n    receiverID: string;\r\n    skipFirst: boolean;\r\n    stamp: boolean;\r\n\r\n    // Receiver \r\n    receiverRef: firebase.database.Reference;\r\n    isReceiving: boolean;\r\n    history: IHistory;\r\n\r\n    // Events\r\n    eventNames: EventNameMapType;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        senderID = '',\r\n        senderName,\r\n        receiverID = '',\r\n        history = 0,\r\n        eventNames = DefaultEventNames\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n        this.eventNames = eventNames;\r\n\r\n        this.database = firebase.database();\r\n        this.setRootPath(root);\r\n\r\n        // Sender\r\n        this.skipFirst = true;\r\n        this.stamp = false;\r\n        this.userInfo = { userID: '', userName: undefined };\r\n        this.setSender(senderID, senderName);\r\n        this.setReceiver(receiverID);\r\n\r\n        // Receiver\r\n        this.isReceiving = false;\r\n\r\n        // History messages\r\n        if (history === true) {\r\n            history = -1;\r\n        } else if (history === false) {\r\n            history = 0;\r\n        }\r\n        this.history = new History({\r\n            maxLength: history\r\n        });\r\n\r\n    }\r\n\r\n    destroy(): void {\r\n\r\n        this\r\n            .stopReceiving()\r\n            .destroyEventEmitter();\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(rootPath: string): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.sendToRef = undefined;\r\n        this.receiverRef = undefined;\r\n        return this;\r\n    }\r\n\r\n    setSender(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setReceiver(\r\n        receiverID: string\r\n    ): this {\r\n\r\n        this.receiverID = receiverID;\r\n        return this;\r\n    }\r\n\r\n    changeUserName(\r\n        userID: string,\r\n        userName: string\r\n    ): this {\r\n\r\n        if (userID === this.userID) {\r\n            this.userName = userName;\r\n        }\r\n        this.history.changeUserName(userID, userName);\r\n\r\n        return this;\r\n    }\r\n\r\n    getHistory(): IMessage[] {\r\n\r\n        return this.history.records;\r\n    }\r\n\r\n    clearHistory(): this {\r\n\r\n        this.history.clear();\r\n        return this;\r\n    }\r\n\r\n    send(\r\n        message?: unknown\r\n    ): Promise<any> {\r\n\r\n        return Send(this, message);\r\n    }\r\n\r\n    startReceiving(): this {\r\n\r\n        StartReceiving(this);\r\n        return this;\r\n    }\r\n\r\n    stopReceiving(): this {\r\n\r\n        StopReceiving(this);\r\n        return this;\r\n    }\r\n}", "import { Broadcast } from './Broadcast';\r\n\r\nexport { Broadcast };", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\n\r\nexport function GetAlias(\r\n    idAlias: IIdAlias,\r\n    id: string\r\n): Promise<IdAliasDataType> {\r\n\r\n    return idAlias.rootRef.where('id', '==', id).limit(1).get()\r\n        .then(function (querySnapshot: firebase.firestore.QuerySnapshot): Promise<IdAliasDataType> {\r\n\r\n            let alias: string;\r\n            if (querySnapshot.size > 0) {\r\n                alias = querySnapshot.docs[0].id;\r\n            }\r\n            return Promise.resolve({\r\n                id: id,\r\n                alias: alias\r\n            });\r\n        }\r\n        );\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IIdAlias } from './IIdAlias';\r\n\r\n\r\nexport function GetAliasRef(\r\n    idAlias: IIdAlias,\r\n    alias: string\r\n): firebase.firestore.DocumentReference {\r\n\r\n    return idAlias.rootRef.doc(alias);\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAliasRef } from './GetAliasRef';\r\n\r\nexport function AddAliasTransaction(\r\n    idAlias: IIdAlias,\r\n    id: string,\r\n    alias: string\r\n): Promise<IdAliasDataType> {\r\n\r\n    return idAlias.database.runTransaction(function (transaction: firebase.firestore.Transaction): Promise<IdAliasDataType> {\r\n\r\n        let aliasRef = GetAliasRef(idAlias, alias);\r\n        return transaction.get(aliasRef)\r\n            .then(\r\n                function (\r\n                    doc: firebase.firestore.DocumentSnapshot\r\n                ): Promise<IdAliasDataType> {\r\n\r\n                    if (!doc.exists) {\r\n                        transaction.set(aliasRef, { id: id });\r\n                        return Promise.resolve({ id: id, alias: alias });\r\n                    } else {\r\n                        return Promise.reject({ id: id, alias: alias });\r\n                    }\r\n                }\r\n            )\r\n    });\r\n}", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAlias } from './GetAlias';\r\nimport { AddAliasTransaction } from './AddAliasTransaction';\r\n\r\n\r\nexport function Add(\r\n    idAlias: IIdAlias,\r\n    id: string,\r\n    alias: string\r\n): Promise<IdAliasDataType> {\r\n\r\n    return GetAlias(idAlias, id)\r\n        .then(function (result: IdAliasDataType): Promise<IdAliasDataType> {\r\n\r\n            if (result.alias) {\r\n                if (result.alias === alias) {\r\n                    return Promise.resolve({ id: id, alias: alias });\r\n                } else {\r\n                    return Promise.reject({ id: id, alias: alias });\r\n                }\r\n            } else {\r\n                return AddAliasTransaction(idAlias, id, alias);\r\n            }\r\n        }\r\n        );\r\n}", "import { RandomInt } from '../math/RandomInt';\r\nimport { GetRandomItem } from '../array/GetRandom';\r\n\r\nconst CANDIDATES = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n/**\r\n * Get a string composed of random picked characters from candidates.\r\n *\r\n * @param {number} min Minimum string length.\r\n * @param {(number | undefined)} [max] \r\n * @param {string} [candidates=CANDIDATES]\r\n * @returns\r\n */\r\nexport function GetRandomWord(\r\n    min: number,\r\n    max?: number | undefined,\r\n    candidates: string = CANDIDATES\r\n) {\r\n\r\n    let count = (max === undefined) ? min : RandomInt(min, max);\r\n    let word = '';\r\n    for (let i = 0; i < count; i++) {\r\n        word += GetRandomItem(Array.from(candidates));\r\n    }\r\n    return word;\r\n}\r\n", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetRandomWord } from '../../../utils/string/GetRandomWord';\r\nimport { AddAliasTransaction } from './AddAliasTransaction';\r\n\r\nexport function RetryAddRandomAliasTransaction(\r\n    idAlias: IIdAlias,\r\n    id: string,\r\n    digits: number,\r\n    candidates: string,\r\n    retry: number\r\n): Promise<IdAliasDataType | void> {\r\n\r\n    let alias = GetRandomWord(digits, digits, candidates);\r\n    if (retry <= 0) {\r\n        return Promise.reject({ id: id, alias: alias });\r\n    }\r\n\r\n    retry--;\r\n    return AddAliasTransaction(idAlias, id, alias)\r\n        .catch(function () {\r\n            setTimeout(function () {\r\n                return RetryAddRandomAliasTransaction(idAlias, id, digits, candidates, retry);\r\n            }, 0);\r\n        });\r\n}", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAlias } from './GetAlias';\r\nimport { GetRandomWord } from '../../../utils/string/GetRandomWord';\r\nimport { RetryAddRandomAliasTransaction } from './RetryAddRandomAliasTransaction';\r\n\r\nexport function AddRandom(\r\n    idAlias: IIdAlias,\r\n    id: string,\r\n    {\r\n        digits = 10,\r\n        candidates = '0123456789',\r\n        retry = 1000\r\n    } = {}\r\n): Promise<IdAliasDataType | void> {\r\n\r\n    let self = this;\r\n    return GetAlias(idAlias, id)\r\n        .then(function (result: IdAliasDataType): Promise<IdAliasDataType | void> {\r\n\r\n            if (result.alias) {\r\n                let alias = GetRandomWord(digits, digits, candidates);\r\n                if (result.alias === alias) {\r\n                    return Promise.resolve({ id: id, alias: alias });\r\n                } else {\r\n                    return Promise.reject({ id: id, alias: alias });\r\n                }\r\n            } else {\r\n                return RetryAddRandomAliasTransaction(idAlias, id, digits, candidates, retry);\r\n            }\r\n        });\r\n}", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAliasRef } from './GetAliasRef';\r\n\r\nexport function GetId(\r\n    idAlias: IIdAlias,\r\n    alias: string\r\n): Promise<IdAliasDataType> {\r\n\r\n    return GetAliasRef(idAlias, alias).get()\r\n        .then(function (doc: firebase.firestore.DocumentSnapshot): Promise<IdAliasDataType> {\r\n\r\n            let id: string;\r\n            if (doc.exists) {\r\n                id = doc.data().id;\r\n            }\r\n            return Promise.resolve({\r\n                id: id,\r\n                alias: alias\r\n            });\r\n        });\r\n}", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAlias } from './GetAlias';\r\nimport { RetryAddRandomAliasTransaction } from './RetryAddRandomAliasTransaction';\r\n\r\nexport function GetRandomAlias(\r\n    idAlias: IIdAlias,\r\n    id: string,\r\n    {\r\n        digits = 10,\r\n        candidates = '0123456789',\r\n        retry = 1000\r\n    } = {}\r\n): Promise<IdAliasDataType | void> {\r\n\r\n    return GetAlias(idAlias, id)\r\n        .then(function (result: IdAliasDataType): Promise<IdAliasDataType | void> {\r\n\r\n            if (result.alias) {\r\n                return Promise.resolve(result);\r\n            } else {\r\n                return RetryAddRandomAliasTransaction(idAlias, id, digits, candidates, retry);\r\n            }\r\n        })\r\n};", "import {\r\n    IIdAlias,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { GetAlias } from './GetAlias';\r\nimport { GetAliasRef } from './GetAliasRef';\r\n\r\nexport function Remove(\r\n    idAlias: IIdAlias,\r\n    id: string\r\n): Promise<void> {\r\n\r\n    return GetAlias(idAlias, id)\r\n        .then(function (result: IdAliasDataType): Promise<void> {\r\n\r\n            return GetAliasRef(idAlias, result.alias).delete();\r\n        }\r\n        )\r\n}", "import * as firebase from 'firebase/app';\r\n\r\nimport {\r\n    IIdAlias,\r\n    IConfig,\r\n    IdAliasDataType\r\n} from './IIdAlias';\r\nimport { Add } from './Add';\r\nimport { AddRandom } from './AddRandom';\r\nimport { GetAliasRef } from './GetAliasRef';\r\nimport { GetId } from './GetId';\r\nimport { GetAlias } from './GetAlias';\r\nimport { GetRandomAlias } from './GetRandomAlias';\r\nimport { Remove } from './Remove';\r\n\r\nexport class IdAlias implements IIdAlias {\r\n    database: firebase.firestore.Firestore;\r\n    rootPath: string;\r\n    rootRef: firebase.firestore.CollectionReference;\r\n\r\n    constructor({\r\n        root = ''\r\n    }: IConfig = {}) {\r\n\r\n        this.database = firebase.firestore();\r\n        this.setRootPath(root);\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    setRootPath(rootPath: string): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = this.database.collection(rootPath);\r\n        return this;\r\n    }\r\n\r\n    add(\r\n        id: string,\r\n        alias: string\r\n    ): Promise<IdAliasDataType> {\r\n\r\n        return Add(this, id, alias);\r\n    }\r\n\r\n    addRandom(\r\n        id: string,\r\n        config: {\r\n            digits?: number,\r\n            candidates?: string,\r\n            retry?: number\r\n        } = {}\r\n    ): Promise<IdAliasDataType | void> {\r\n\r\n        return AddRandom(this, id, config);\r\n    }\r\n\r\n    getAliasRef(\r\n        alias: string\r\n    ): firebase.firestore.DocumentReference {\r\n\r\n        return GetAliasRef(this, alias);\r\n    }\r\n\r\n    getId(\r\n        alias: string\r\n    ): Promise<IdAliasDataType> {\r\n\r\n        return GetId(this, alias);\r\n    }\r\n\r\n    getAlias(\r\n        id: string\r\n    ): Promise<IdAliasDataType> {\r\n\r\n        return GetAlias(this, id);\r\n    }\r\n\r\n    getRandomAlias(\r\n        id: string,\r\n        config: {\r\n            digits?: number,\r\n            candidates?: string,\r\n            retry?: number\r\n        } = {}\r\n    ): Promise<IdAliasDataType | void> {\r\n\r\n        return GetRandomAlias(this, id, config);\r\n    }\r\n\r\n    remove(\r\n        id: string\r\n    ): Promise<void> {\r\n\r\n        return Remove(this, id);\r\n    }\r\n}\r\n", "import { IdAlias } from './IdAlias';\r\n\r\nexport {\r\n    IdAlias\r\n}", "export enum TableType {\r\n    '1d' = 1,\r\n    '2d' = 2,\r\n    '3d' = 3\r\n}\r\n\r\nexport type TableTypeString = '1d' | '2d' | '3d';\r\n\r\nexport type EventNameMapType = {\r\n    init?: string,\r\n    update?: string,\r\n    addkey0?: string,\r\n    removekey0?: string,\r\n    changekey0?: string,\r\n    addkey1?: string,\r\n    removekey1?: string,\r\n    changekey1?: string,\r\n    addkey2?: string,\r\n    removekey2?: string,\r\n    changekey2?: string\r\n}\r\n\r\nexport const DefaultEventNames: EventNameMapType = {\r\n    init: 'init',\r\n    update: 'update',\r\n    addkey0: 'addkey0',\r\n    removekey0: 'removekey0',\r\n    changekey0: 'changekey0',\r\n    addkey1: 'addkey1',\r\n    removekey1: 'removekey1',\r\n    changekey1: 'changekey1',\r\n    addkey2: 'addkey2',\r\n    removekey2: 'removekey2',\r\n    changekey2: 'changekey2'\r\n}\r\n\r\nexport type TransactionCallbackType = (preValue: any) => any;", "type KeyType = string | string[] | null | undefined;\r\ntype DictType = { [key: string]: any };\r\n\r\nfunction IsInValidKey(keys: KeyType): boolean {\r\n    return (keys == null) || (keys === '') || (keys.length === 0);\r\n};\r\n\r\nfunction GetEntry(\r\n    target: any,\r\n    keys: KeyType,\r\n    defaultEntry = {}\r\n): DictType {\r\n\r\n    let entry = target;\r\n    if (IsInValidKey(keys)) {\r\n        //entry = root;\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split('.');\r\n        }\r\n\r\n        let key: string;\r\n        for (let i = 0, cnt = keys.length; i < cnt; i++) {\r\n            key = keys[i];\r\n            if ((entry[key] == null) || (typeof (entry[key]) !== 'object')) {\r\n                let newEntry: DictType;\r\n                if (i === cnt - 1) {\r\n                    newEntry = defaultEntry;\r\n                } else {\r\n                    newEntry = {};\r\n                }\r\n\r\n                entry[key] = newEntry;\r\n            }\r\n\r\n            entry = entry[key];\r\n        }\r\n    }\r\n\r\n    return entry;\r\n};\r\n\r\nexport function SetValue(\r\n    target: any,\r\n    keys: KeyType,\r\n    value: any\r\n): void {\r\n\r\n    // Not an object\r\n    if (typeof (target) !== 'object') {\r\n        return;\r\n    }\r\n\r\n    // Invalid key\r\n    else if (IsInValidKey(keys)) {\r\n        // Don't erase target\r\n        if (value == null) {\r\n            return;\r\n        } else if (typeof (value) === 'object') { // Override target to another object\r\n            target = value;\r\n        }\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split('.');\r\n        }\r\n\r\n        let lastKey = keys.pop();\r\n        let entry = GetEntry(target, keys);\r\n        entry[lastKey] = value;\r\n    }\r\n\r\n    return target;\r\n};", "/**\r\n * Clear all items of an array, or all properties of an object\r\n *\r\n * @param {(any[] | { [name: string]: any })} obj\r\n */\r\nexport function Clear(\r\n    obj: any[] | { [name: string]: any }\r\n): void {\r\n\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (let key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n\r\n}", "export function DeepClone<T>(\r\n    obj: T,\r\n): T {\r\n\r\n    return JSON.parse(JSON.stringify(obj));\r\n}", "export type DataType = { [name: string]: DataType | string | number };\r\nexport type ValueType = DataType | string | number;\r\n\r\nexport interface ITree {\r\n    setValue(\r\n        keys?: string | DataType,\r\n        value?: unknown\r\n    ): void;\r\n\r\n    getValue(\r\n        keys?: string | string[]\r\n    ): ValueType;\r\n\r\n    removeKey(\r\n        keys?: string | string[]\r\n    ): void;\r\n\r\n    clear(): void;\r\n}", "import { SetValue } from '../../object/SetValue';\r\nimport { Clear } from '../../object/Clear';\r\nimport { DeepClone } from '../../object/DeepClone';\r\nimport { ITree, DataType, ValueType } from './ITree';\r\n\r\nexport { DataType, ValueType };\r\n\r\nexport class JSONTree implements ITree {\r\n    data: DataType;\r\n\r\n    constructor() {\r\n        this.data = {};\r\n    }\r\n\r\n    setValue(\r\n        keys?: string | DataType,\r\n        value?: unknown\r\n    ): this {\r\n\r\n        if (keys == null) {\r\n            this.clear(); // No argument\r\n        } else if (typeof (keys) === 'object') {\r\n            this.data = keys; // JSON keys\r\n        } else {\r\n            SetValue(this.data, keys, value);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getValue(\r\n        keys?: string | string[]\r\n    ): ValueType {\r\n\r\n        if (keys == null) {\r\n            return this.data;\r\n        } else {\r\n            if (typeof (keys) === 'string') {\r\n                keys = keys.split('.');\r\n            }\r\n\r\n            let entry: ValueType = this.data;\r\n            for (let i = 0, cnt = keys.length; i < cnt; i++) {\r\n                if (!IsObject(entry)) {\r\n                    return undefined;\r\n                }\r\n                entry = entry[keys[i]];\r\n            }\r\n            return entry;\r\n        }\r\n    }\r\n\r\n    cloneValue(\r\n        keys?: string | string[]\r\n    ): ValueType {\r\n\r\n        return DeepClone<ValueType>(this.getValue(keys));\r\n    }\r\n\r\n    removeKey(\r\n        keys?: string | string[]\r\n    ): this {\r\n\r\n        if (keys == null) {\r\n            this.clear();\r\n        } else {\r\n            if (typeof (keys) === 'string') {\r\n                keys = keys.split('.');\r\n            }\r\n\r\n            let lastKey = keys.pop();\r\n            let entry: ValueType = this.data;\r\n            for (let i = 0, cnt = keys.length; i < cnt; i++) {\r\n                if (!IsObject(entry)) {\r\n                    // Stop here\r\n                    return this;\r\n                }\r\n                entry = entry[keys[i]];\r\n            }\r\n\r\n            if (IsObject(entry)) {\r\n                delete entry[lastKey];\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n        Clear(this.data);\r\n        return this;\r\n    }\r\n}\r\n\r\nfunction IsObject(obj: unknown) {\r\n\r\n    return (obj != null) && (typeof (obj) === 'object')\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IUpdater,\r\n    IConfig\r\n} from './IUpdater';\r\nimport { BaseEventEmitter } from '../../../../../utils/eventemitter/BaseEventEmitter';\r\nimport { JSONTree, DataType, ValueType } from '../../../../../utils/struct/tree/JSONTree';\r\nimport { TableType, EventNameMapType, } from '../../Types';\r\n\r\n\r\nexport abstract class BaseUpdater extends BaseEventEmitter {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    parent: IUpdater;\r\n    children: Map<string, BaseUpdater>; // Updater won't store any data\r\n    key: string;\r\n    fullKeyPath: string;\r\n    type: TableType;\r\n    eventNames: EventNameMapType;\r\n    table: JSONTree;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        parent,\r\n\r\n        key,\r\n        type,\r\n        eventNames,\r\n        table,\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n\r\n        this.parent = parent;\r\n        this.children = new Map();\r\n        this.key = key;\r\n        if (this.parent) {\r\n            this.fullKeyPath = ExtendKeyPath(this.parent.fullKeyPath, this.key);\r\n        } else {\r\n            this.fullKeyPath = '';\r\n        }\r\n        this.type = type;\r\n        this.eventNames = eventNames;\r\n        this.table = table;\r\n\r\n        this.database = firebase.database();\r\n        this.setRootPath();\r\n    }\r\n\r\n    destroy() {\r\n        this\r\n            .stopUpdate()\r\n            .clear()\r\n            .destroyEventEmitter();\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath?: string\r\n    ): this {\r\n\r\n        if (rootPath === undefined) {\r\n            let parentRootPath = (this.parent) ? this.parent.rootPath : '';\r\n            rootPath = `${parentRootPath}/${this.key}`;\r\n        }\r\n        this.rootPath = rootPath;\r\n        this.rootRef = (rootPath !== '') ? this.database.ref(rootPath) : undefined;\r\n\r\n        for (const [key, child] of this.children) {\r\n            if (child instanceof BaseUpdater) {\r\n                child.setRootPath();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setData(\r\n        key?: string | DataType,\r\n        value?: ValueType\r\n    ): this {\r\n\r\n        if (arguments.length === 0) {  // Clear\r\n\r\n            this.clear();\r\n        } else if (typeof (key) == 'string') {\r\n\r\n            this.setChildData(key, value); // Pass data to column-updater\r\n        } else {\r\n\r\n            let data = key; // JSON data\r\n            for (const [key, child] of this.children) {\r\n                if (!data.hasOwnProperty(key)) {\r\n                    this.removeChild(key);\r\n                }\r\n            }\r\n            for (let key in data) {\r\n                this.setChildData(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        this.table.removeKey(this.fullKeyPath);\r\n        for (const [key, child] of this.children) {\r\n            this.removeChild(key);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // Overwrite\r\n    get childClass() {\r\n        return null;\r\n    }\r\n\r\n    setChildData(\r\n        key: string,\r\n        value: ValueType\r\n    ): this {\r\n\r\n        // Store value to Tree \r\n        const keyPath = ExtendKeyPath(this.fullKeyPath, key);\r\n        this.table.setValue(keyPath, value);\r\n\r\n        if (typeof (value) !== 'object') { // Value is not a JSON, i.e. dose not have children values\r\n\r\n        } else if (this.children.has(key)) { // Expend grandson updater\r\n\r\n            this.children.get(key).setData(value);\r\n        } else if (this.childClass) {  // Add new child updater\r\n\r\n            let child = new this.childClass({\r\n                parent: this,\r\n                key: key,\r\n                type: this.type,\r\n                eventEmitter: this.eventEmitter,\r\n                eventNames: this.eventNames,\r\n                table: this.table\r\n            });\r\n            child.startUpdate();\r\n            this.children.set(key, child);\r\n        } else { // No child update class\r\n\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    removeChild(\r\n        key: string\r\n    ): this {\r\n\r\n        if (this.children.has(key)) {\r\n            this.children.get(key).destroy();\r\n            this.children.delete(key);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // Overwrite\r\n    startUpdate(): this {\r\n\r\n        return this;\r\n    }\r\n\r\n    // Overwrite\r\n    stopUpdate(): this {\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nfunction ExtendKeyPath(\r\n    baseKeyPath: string,\r\n    newKey: string\r\n): string {\r\n\r\n    if ((baseKeyPath == null) || (baseKeyPath === '')) {\r\n        return newKey;\r\n    } else if ((newKey == null) || (newKey === '')) {\r\n        return baseKeyPath;\r\n    } else {\r\n        return `${baseKeyPath}.${newKey}`;\r\n    }\r\n}", "import * as firebase from 'firebase/app';\r\nimport { BaseUpdater } from './BaseUpdater';\r\nimport { TableType } from '../../Types';\r\n\r\n\r\nexport class ColumnUpdater extends BaseUpdater {\r\n\r\n    startUpdate() {\r\n\r\n        this.rootRef.on('child_added', this.addCol, this);\r\n        this.rootRef.on('child_removed', this.removeCol, this);\r\n        this.rootRef.on('child_changed', this.changeColValue, this);\r\n        return this;\r\n    }\r\n\r\n    stopUpdate() {\r\n\r\n        this.rootRef.off('child_added', this.addCol, this);\r\n        this.rootRef.off('child_removed', this.removeCol, this);\r\n        this.rootRef.off('child_changed', this.changeColValue, this);\r\n        return this;\r\n    }\r\n\r\n    addCol(\r\n        snapshot: firebase.database.DataSnapshot\r\n    ) {\r\n\r\n        const key = snapshot.key,\r\n            value = snapshot.val();\r\n\r\n        this.setData(key, value);\r\n\r\n        switch (this.type) {\r\n            case TableType['1d']:\r\n                this.emit(this.eventNames.addkey0, key, value);\r\n                break;\r\n            case TableType['2d']:\r\n                this.emit(this.eventNames.addkey1, this.key, key, value);\r\n                break;\r\n            default: // 3\r\n                this.emit(this.eventNames.addkey2, this.pageKey, this.key, key, value);\r\n                break;\r\n        }\r\n        this.emit(this.eventNames.update, this.table.data);\r\n    }\r\n\r\n    removeCol(\r\n        snapshot: firebase.database.DataSnapshot\r\n    ) {\r\n\r\n        const key = snapshot.key;\r\n\r\n        this.removeChild(key);\r\n\r\n        switch (this.type) {\r\n            case TableType['1d']:\r\n                this.emit(this.eventNames.removekey0, key);\r\n                break;\r\n            case TableType['2d']:\r\n                this.emit(this.eventNames.removekey1, this.key, key);\r\n                break;\r\n            default: // 3\r\n                this.emit(this.eventNames.removekey2, this.pageKey, this.key, key);\r\n                break;\r\n        }\r\n        this.emit(this.eventNames.update, this.table.data);\r\n    }\r\n\r\n    changeColValue(\r\n        snapshot: firebase.database.DataSnapshot\r\n    ) {\r\n\r\n        const key = snapshot.key,\r\n            value = snapshot.val();\r\n\r\n        this.setData(key, value);\r\n\r\n        switch (this.type) {\r\n            case TableType['1d']:\r\n                this.emit(this.eventNames.changekey0, key, value);\r\n                break;\r\n            case TableType['2d']:\r\n                this.emit(this.eventNames.changekey1, this.key, key, value);\r\n                break;\r\n            default: // 3\r\n                this.emit(this.eventNames.changekey2, this.pageKey, this.key, key, value);\r\n                break;\r\n        }\r\n        this.emit(this.eventNames.update, this.table.data);\r\n    }\r\n\r\n    get pageKey() {\r\n        return this.parent.key;\r\n    }\r\n\r\n}", "import * as firebase from 'firebase/app';\r\nimport { BaseUpdater } from './BaseUpdater';\r\nimport { TableType } from '../../Types';\r\nimport {ColumnUpdater} from './ColumnUpdater';\r\n\r\nexport class RowUpdater extends BaseUpdater {\r\n\r\n    startUpdate() {\r\n\r\n        this.rootRef.on('child_added', this.addRow, this);\r\n        this.rootRef.on('child_removed', this.removeRow, this);\r\n        return this;\r\n    }\r\n\r\n    stopUpdate() {\r\n\r\n        this.rootRef.off('child_added', this.addRow, this);\r\n        this.rootRef.off('child_removed', this.removeRow, this);\r\n        return this;\r\n    }\r\n\r\n    addRow(\r\n        snapshot: firebase.database.DataSnapshot\r\n        ) {\r\n\r\n        const key = snapshot.key,\r\n            value = snapshot.val();\r\n\r\n        this.setData(key, value);\r\n\r\n        switch (this.type) {\r\n            case TableType['2d']:\r\n                this.emit(this.eventNames.addkey0, this.key, key, value);\r\n                break;\r\n            default: // 3\r\n                this.emit(this.eventNames.addkey1, this.key, key, value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    removeRow(\r\n        snapshot: firebase.database.DataSnapshot\r\n        ) {\r\n\r\n        const key = snapshot.key;\r\n\r\n        this.removeChild(key);\r\n        \r\n        switch (this.type) {\r\n            case TableType['2d']:\r\n                this.emit(this.eventNames.removekey0, key);\r\n                break;\r\n            default: // 3\r\n                this.emit(this.eventNames.removekey1, this.key, key);\r\n                break;\r\n        }\r\n    }\r\n\r\n    get childClass() {\r\n        return ColumnUpdater;\r\n    }\r\n}", "import * as firebase from 'firebase/app';\r\nimport { BaseUpdater } from './BaseUpdater';\r\nimport { RowUpdater } from './RowUpdater';\r\n\r\n\r\nexport class PageUpdater extends BaseUpdater {\r\n\r\n    startUpdate() {\r\n\r\n        this.rootRef.on('child_added', this.addPage, this);\r\n        this.rootRef.on('child_removed', this.removePage, this);\r\n        return this;\r\n    }\r\n\r\n    stopUpdate() {\r\n\r\n        this.rootRef.off('child_added', this.addPage, this);\r\n        this.rootRef.off('child_removed', this.removePage, this);\r\n        return this;\r\n    }\r\n\r\n    addPage(\r\n        snapshot: firebase.database.DataSnapshot\r\n    ) {\r\n\r\n        const key = snapshot.key,\r\n            value = snapshot.val();\r\n\r\n        this.setData(key, value);\r\n\r\n        this.emit(this.eventNames.addkey0, key, value);\r\n    }\r\n\r\n    removePage(\r\n        snapshot: firebase.database.DataSnapshot\r\n    ) {\r\n\r\n        const key = snapshot.key;\r\n\r\n        this.removeChild(key);\r\n\r\n        this.emit(this.eventNames.removekey0, key);\r\n    }\r\n\r\n    get childClass() {\r\n        return RowUpdater;\r\n    }\r\n}", "import { ColumnUpdater } from './ColumnUpdater';\r\nimport { RowUpdater } from './RowUpdater';\r\nimport { PageUpdater } from './PageUpdater';\r\n\r\n\r\nexport {\r\n    ColumnUpdater,\r\n    RowUpdater,\r\n    PageUpdater\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { IUpdater } from './updater/IUpdater';\r\nimport { TableType } from '../Types';\r\nimport { ColumnUpdater, RowUpdater, PageUpdater } from './updater';\r\n\r\n\r\nconst UpdaterClasses: { [mode: number]: any } = {};\r\nUpdaterClasses[TableType['1d']] = ColumnUpdater;\r\nUpdaterClasses[TableType['2d']] = RowUpdater;\r\nUpdaterClasses[TableType['3d']] = PageUpdater;\r\n\r\n\r\nexport function CreateUpdater(\r\n    itemTable: IItemTable\r\n): IUpdater {\r\n\r\n    return new (UpdaterClasses[itemTable.tableType])({\r\n        type: itemTable.tableType,\r\n        eventEmitter: itemTable.eventEmitter,\r\n        eventNames: itemTable.eventNames,\r\n        table: itemTable.table\r\n    })\r\n}\r\n", "import { IItemTable } from '../IItemTable';\r\n\r\nexport function Load(\r\n    itemTable: IItemTable\r\n): Promise<any> {\r\n\r\n    itemTable.updater.clear(); // Clear updater and table content\r\n\r\n    itemTable.initialFlag = false;\r\n    return itemTable.rootRef.once('value')\r\n        .then(function (snapshot) {\r\n            // Won't add any child to updater\r\n            let value = snapshot.val() || {};\r\n            itemTable.table.setValue(value); // Store table content\r\n            itemTable.emit(itemTable.eventNames.init, value);\r\n            itemTable.initialFlag = true;\r\n            return Promise.resolve(value);\r\n        })\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IItemTable } from './IItemTable';\r\n\r\nexport function GetItemRef(\r\n    itemTable: IItemTable,\r\n    key0?: string,\r\n    key1?: string,\r\n    key2?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = itemTable.rootRef;\r\n    ref = (key0) ? ref.child(key0) : ref;\r\n    ref = (key1) ? ref.child(key1) : ref;\r\n    ref = (key2) ? ref.child(key2) : ref;\r\n    return ref;\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\n\r\nexport function SetData(\r\n    itemTable: IItemTable,\r\n    ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string,\r\n        value: unknown;\r\n\r\n    switch (args.length) {\r\n        case 4:\r\n            [key0, key1, key2, value] = args;\r\n            break;\r\n        case 3:\r\n            [key0, key1, value] = args;\r\n            break;\r\n        case 2:\r\n            [key0, value] = args;\r\n            break;\r\n        default:\r\n            value = args[0];\r\n            break;\r\n    }\r\n\r\n    return GetItemRef(itemTable, key0, key1, key2).set(value);\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\n\r\nexport function RemoveData(\r\n    itemTable: IItemTable,\r\n    ...args: [string] | [string, string] | [string, string, string]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string;\r\n\r\n    switch (args.length) {\r\n        case 3:\r\n            [key0, key1, key2] = args;\r\n            break;\r\n        case 2:\r\n            [key0, key1] = args;\r\n            break;\r\n        default:\r\n            key0 = args[0];\r\n            break;\r\n    }\r\n\r\n    return GetItemRef(itemTable, key0, key1, key2).remove();\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\n\r\nexport function IncValue(\r\n    itemTable: IItemTable,\r\n    ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string,\r\n        value: unknown;\r\n\r\n    switch (args.length) {\r\n        case 4:\r\n            [key0, key1, key2, value] = args;\r\n            break;\r\n        case 3:\r\n            [key0, key1, value] = args;\r\n            break;\r\n        case 2:\r\n            [key0, value] = args;\r\n            break;\r\n        default:\r\n            value = args[0];\r\n            break;\r\n    }\r\n\r\n    return GetItemRef(itemTable, key0, key1, key2).transaction(function (preValue) {\r\n        if (preValue === null) {\r\n            preValue = 0;\r\n        }\r\n        return (preValue + value);\r\n    });\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\nimport { TransactionCallbackType } from '../Types';\r\n\r\n\r\nexport function Transaction(\r\n    itemTable: IItemTable,\r\n    ...args: [TransactionCallbackType] |\r\n        [string, TransactionCallbackType] |\r\n        [string, string, TransactionCallbackType] |\r\n        [string, string, string, TransactionCallbackType]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string,\r\n        callback: TransactionCallbackType;\r\n\r\n    switch (args.length) {\r\n        case 4:\r\n            [key0, key1, key2, callback] = args;\r\n            break;\r\n        case 3:\r\n            [key0, key1, callback] = args;\r\n            break;\r\n        case 2:\r\n            [key0, callback] = args;\r\n            break;\r\n        default:\r\n            callback = args[0];\r\n            break;\r\n    }\r\n\r\n    // callback: function(preValue) { return newValue; }\r\n    return GetItemRef(itemTable, key0, key1, key2).transaction(callback);\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\n\r\nexport function UpdateData(\r\n    itemTable: IItemTable,\r\n    data: object\r\n): Promise<any> {\r\n\r\n    return GetItemRef(itemTable).update(data);\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\n\r\nexport function RemoveDataOnDisconnect(\r\n    itemTable: IItemTable,\r\n    ...args: [string] | [string, string] | [string, string, string]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string;\r\n\r\n    switch (args.length) {\r\n        case 3:\r\n            [key0, key1, key2] = args;\r\n            break;\r\n        case 2:\r\n            [key0, key1] = args;\r\n            break;\r\n        case 1:\r\n            key0 = args[0];\r\n            break;\r\n    }\r\n\r\n    return GetItemRef(itemTable, key0, key1, key2).onDisconnect().remove();\r\n}", "import { IItemTable } from '../IItemTable';\r\nimport { GetItemRef } from '../GetItemRef';\r\n\r\nexport function SetDataOnDisconnect(\r\n    itemTable: IItemTable,\r\n    ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n): Promise<any> {\r\n\r\n    let key0: string,\r\n        key1: string,\r\n        key2: string,\r\n        value: unknown;\r\n\r\n    switch (args.length) {\r\n        case 4:\r\n            [key0, key1, key2, value] = args;\r\n            break;\r\n        case 3:\r\n            [key0, key1, value] = args;\r\n            break;\r\n        case 2:\r\n            [key0, value] = args;\r\n            break;\r\n        default:\r\n            value = args[0];\r\n            break;\r\n    }\r\n\r\n    return GetItemRef(itemTable, key0, key1, key2).onDisconnect().set(value);\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IItemTable,\r\n    IConfig\r\n} from './IItemTable';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport {\r\n    TableType, TableTypeString,\r\n    EventNameMapType, DefaultEventNames,\r\n    TransactionCallbackType\r\n} from './Types';\r\nimport { JSONTree } from '../../../utils/struct/tree/JSONTree';\r\nimport { IUpdater } from './read/updater/IUpdater';\r\nimport { CreateUpdater } from './read/CreateUpdater';\r\nimport { Load } from './read/Load';\r\nimport { SetData } from './write/SetData';\r\nimport { GetItemRef } from './GetItemRef';\r\nimport { RemoveData } from './write/RemoveData';\r\nimport { IncValue } from './write/IncValue';\r\nimport { Transaction } from './write/Transaction';\r\nimport { UpdateData } from './write/UpdateData';\r\nimport { RemoveDataOnDisconnect } from './write/RemoveDataOnDisconnect';\r\nimport { SetDataOnDisconnect } from './write/SetDataOnDisconnect';\r\n\r\nexport class ItemTable extends BaseEventEmitter implements IItemTable {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    table: JSONTree;\r\n    tableType: TableType;\r\n    initialFlag: boolean;\r\n    updater: IUpdater;\r\n\r\n    eventNames: EventNameMapType;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        type = TableType['3d'],\r\n        eventNames = DefaultEventNames\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n        this.eventNames = eventNames;\r\n\r\n        this.database = firebase.database();\r\n        this.table = new JSONTree();\r\n        this.setTableType(type);\r\n        this.setRootPath(root);\r\n        this.initialFlag = false;\r\n    }\r\n\r\n    destroy() {\r\n        this.updater.destroy();\r\n        this\r\n            .destroyEventEmitter()\r\n            .stopUpdate();\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = (rootPath !== '') ? this.database.ref(this.rootPath) : null;\r\n        this.updater.setRootPath(rootPath);\r\n        return this;\r\n    }\r\n\r\n    setTableType(\r\n        type: TableType | TableTypeString\r\n    ): this {\r\n\r\n        if (typeof (type) === 'string') {\r\n            type = TableType[type];\r\n        }\r\n\r\n        this.tableType = type;\r\n        if (this.updater) {\r\n            this.updater.destroy();\r\n        }\r\n        this.updater = CreateUpdater(this);\r\n        return this;\r\n    }\r\n\r\n    startUpdate() {\r\n\r\n        Load(this);\r\n        this.updater.startUpdate();\r\n        return this;\r\n    }\r\n\r\n    stopUpdate() {\r\n\r\n        this.updater.stopUpdate();\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.updater.clear();\r\n        return this;\r\n    }\r\n\r\n    getData() {\r\n        return this.table.getValue(...arguments);\r\n    }\r\n\r\n    cloneData() {\r\n        return this.table.cloneValue(...arguments);\r\n    }\r\n\r\n    getItemRef(\r\n        key0?: string,\r\n        key1?: string,\r\n        key2?: string\r\n    ): firebase.database.Reference {\r\n\r\n        return GetItemRef(this, key0, key1, key2);\r\n    }\r\n\r\n    setData(value: unknown): Promise<any>;\r\n    setData(key0: string, value: unknown): Promise<any>;\r\n    setData(key0: string, key1: string, value: unknown): Promise<any>;\r\n    setData(key0: string, key1: string, key2: string, value: unknown): Promise<any>;\r\n    setData(\r\n        ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n    ): Promise<any> {\r\n\r\n        return SetData(this, ...args);\r\n    }\r\n\r\n    removeData(key0: string): Promise<any>;\r\n    removeData(key0: string, key1: string): Promise<any>;\r\n    removeData(key0: string, key1: string, key2: string): Promise<any>;\r\n    removeData(\r\n        ...args: [string] | [string, string] | [string, string, string]\r\n    ): Promise<any> {\r\n\r\n        return RemoveData(this, ...args);\r\n    }\r\n\r\n    incValue(value: unknown): Promise<any>;\r\n    incValue(key0: string, value: unknown): Promise<any>;\r\n    incValue(key0: string, key1: string, value: unknown): Promise<any>;\r\n    incValue(key0: string, key1: string, key2: string, value: unknown): Promise<any>;\r\n    incValue(\r\n        ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n    ): Promise<any> {\r\n\r\n        return IncValue(this, ...args);\r\n    }\r\n\r\n    transaction(callback: TransactionCallbackType): Promise<any>;\r\n    transaction(key0: string, callback: TransactionCallbackType): Promise<any>;\r\n    transaction(key0: string, key1: string, callback: TransactionCallbackType): Promise<any>;\r\n    transaction(key0: string, key1: string, key2: string, callback: TransactionCallbackType): Promise<any>;\r\n    transaction(\r\n        ...args: [TransactionCallbackType] |\r\n            [string, TransactionCallbackType] |\r\n            [string, string, TransactionCallbackType] |\r\n            [string, string, string, TransactionCallbackType]\r\n    ): Promise<any> {\r\n\r\n        return Transaction(this, ...args);\r\n    }\r\n\r\n    updateData(\r\n        data: object\r\n    ): Promise<any> {\r\n\r\n        return UpdateData(this, data);\r\n    }\r\n\r\n    removeDataOnDisconnect(key0: string): Promise<any>;\r\n    removeDataOnDisconnect(key0: string, key1: string): Promise<any>;\r\n    removeDataOnDisconnect(key0: string, key1: string, key2: string): Promise<any>;\r\n    removeDataOnDisconnect(\r\n        ...args: [string] | [string, string] | [string, string, string]\r\n    ): Promise<any> {\r\n\r\n        return RemoveDataOnDisconnect(this, ...args);\r\n    }\r\n\r\n    setDataOnDisconnect(value: unknown): Promise<any>;\r\n    setDataOnDisconnect(key0: string, value: unknown): Promise<any>;\r\n    setDataOnDisconnect(key0: string, key1: string, value: unknown): Promise<any>;\r\n    setDataOnDisconnect(key0: string, key1: string, key2: string, value: unknown): Promise<any>;\r\n    setDataOnDisconnect(\r\n        ...args: [unknown] | [string, unknown] | [string, string, unknown] | [string, string, string, unknown]\r\n    ): Promise<any> {\r\n\r\n        return SetDataOnDisconnect(this, ...args);\r\n    }\r\n}", "import {ItemTable} from './ItemTable';\r\n\r\n\r\nexport {ItemTable};", "import { IFile } from './IFile';\r\n\r\nexport function GetFileQuery(\r\n    file: IFile,\r\n    userID?: string,\r\n    fileID?: string,\r\n    type?: string\r\n): firebase.firestore.Query {\r\n\r\n    let query = file.rootRef as firebase.firestore.Query;\r\n    query = (userID) ? query.where('userID', '==', userID) : query;\r\n    query = (fileID) ? query.where('fileID', '==', fileID) : query;\r\n    query = (type) ? query.where('type', '==', type) : query;\r\n    return query;\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IHeader } from './IFile';\r\n\r\nexport function DocToHeader(doc: firebase.firestore.DocumentData) {\r\n    let header = doc.data() as IHeader;\r\n    header.headerDocID = doc.id;\r\n    return header;\r\n}", "import { IFile, IHeader } from './IFile';\r\nimport { GetFileQuery } from './GetFileQuery';\r\nimport { DocToHeader } from './DocToHeader';\r\n\r\n\r\nexport function LoadHeader(\r\n    file: IFile,\r\n    fileID: string\r\n): Promise<IHeader> {\r\n\r\n    let header = file.cacheHeaders.get(fileID);\r\n    if (header && (header.userID === file.userID)) {\r\n        return Promise.resolve(header);\r\n    }\r\n\r\n    // Can't find in cache headers, load from firestore        \r\n    return GetFileQuery(file, file.userID, fileID, 'header').limit(1).get()\r\n        .then(function (querySnapshot) {\r\n            let header: IHeader;\r\n            if (querySnapshot.size > 0) {\r\n                header = DocToHeader(querySnapshot.docs[0]);\r\n                file.cacheHeaders.set(fileID, header); // Cache it\r\n            }\r\n            return Promise.resolve(header);\r\n        });\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IFile, IHeader, IContent } from './IFile';\r\nimport { LoadHeader } from './LoadHeader';\r\n\r\n\r\nexport function Save(\r\n    file: IFile,\r\n    fileID: string,\r\n    header: IHeader = {},\r\n    content?: IContent | undefined,\r\n    updateMode: boolean = false\r\n): Promise<{ userID: string, fileID: string, error?: unknown }> {\r\n\r\n    const userID = file.userID;\r\n    header.userID = userID;\r\n    header.fileID = fileID;\r\n    header.type = 'header';\r\n\r\n    if (content) {\r\n        content.userID = userID;\r\n        content.fileID = fileID;\r\n        content.type = 'content';\r\n    }\r\n    let writeCommand = (updateMode) ? 'update' : 'set';\r\n    return LoadHeader(file, fileID) // Try load header\r\n        .then(function (prevHeader) {\r\n\r\n            let headerDocRef: firebase.firestore.DocumentReference,\r\n                contentDocRef: firebase.firestore.DocumentReference;\r\n            if (prevHeader) { // Overwrite file\r\n                headerDocRef = file.rootRef.doc(prevHeader.headerDocID);\r\n                if (content) {\r\n                    if (prevHeader.contentDocID) {\r\n                        contentDocRef = file.rootRef.doc(prevHeader.contentDocID);\r\n                    } else {\r\n                        contentDocRef = file.rootRef.doc();\r\n                    }\r\n                }\r\n            } else { // Add new file\r\n                headerDocRef = file.rootRef.doc();\r\n                if (content) {\r\n                    contentDocRef = file.rootRef.doc();\r\n                }\r\n            }\r\n\r\n            // Don't save headerDocID to server\r\n            if (header.hasOwnProperty('headerDocID')) {\r\n                delete header.headerDocID;\r\n            }\r\n            // Save contentDocID\r\n            if (contentDocRef) {\r\n                header.contentDocID = contentDocRef.id;\r\n            }\r\n\r\n            let batch = file.database.batch();\r\n            batch[writeCommand](headerDocRef, header);\r\n            if (content) {\r\n                batch[writeCommand](contentDocRef, content);\r\n            }\r\n            return batch.commit();\r\n        })\r\n        .then(function () {\r\n            return Promise.resolve({\r\n                userID: userID,\r\n                fileID: fileID\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            return Promise.reject({\r\n                error: error,\r\n                userID: userID,\r\n                fileID: fileID\r\n            });\r\n        });\r\n}", "import {\r\n    IFile,\r\n    IHeader, IContent, LoadResultType\r\n} from './IFile';\r\nimport { GetFileQuery } from './GetFileQuery';\r\n\r\n\r\nexport function Load(\r\n    file: IFile,\r\n    fileID: string\r\n): Promise<LoadResultType> {\r\n\r\n    const userID = file.userID;\r\n    return GetFileQuery(file, userID, fileID).get()\r\n        .then(function (querySnapshot) {\r\n            let header: IHeader,\r\n                content: IContent;\r\n\r\n            querySnapshot.forEach(function (doc) {\r\n                let data = doc.data() as IHeader | IContent;\r\n                switch (data.type) {\r\n                    case 'header':\r\n                        header = data as IHeader;\r\n                        header.headerDocID = doc.id;\r\n                        break;\r\n                    case 'content':\r\n                        content = data as IContent;\r\n                        break;\r\n                }\r\n            });\r\n            return Promise.resolve({\r\n                userID: userID,\r\n                fileID: fileID,\r\n                header: header,\r\n                content: content\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            return Promise.reject({\r\n                error: error,\r\n                userID: userID,\r\n                fileID: fileID\r\n            });\r\n        });\r\n}", "import {\r\n    IFile,\r\n    IHeader, LoadHeadersResultType\r\n} from './IFile';\r\nimport { GetFileQuery } from './GetFileQuery';\r\nimport { DocToHeader } from './DocToHeader';\r\n\r\n\r\nexport function LoadHeaders(\r\n    file: IFile\r\n): Promise<LoadHeadersResultType> {\r\n\r\n    const userID = file.userID;\r\n    return GetFileQuery(file, file.userID, undefined, 'header').get()\r\n        .then(function (querySnapshot) {\r\n\r\n            file.cacheHeaders.clear();\r\n            querySnapshot.forEach(function (doc: firebase.firestore.DocumentData) {\r\n                let header = DocToHeader(doc);\r\n                file.cacheHeaders.set(header.fileID, header);\r\n            });\r\n            return Promise.resolve({\r\n                userID: userID,\r\n                headers: file.cacheHeaders\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            return Promise.reject({\r\n                error: error,\r\n                userID: userID\r\n            });\r\n        });\r\n}", "import { IFile, IHeader } from './IFile';\r\nimport { LoadHeader } from './LoadHeader';\r\n\r\nexport function Delete(\r\n    file: IFile,\r\n    fileID: string\r\n): Promise<{ userID: string, fileID: string, error?: unknown }> {\r\n\r\n    const userID = file.userID;\r\n    return LoadHeader(file, fileID) // Try load header\r\n        .then(function (prevHeader: IHeader) {\r\n            if (!prevHeader) { // File dose not exist\r\n                return Promise.resolve();\r\n            }\r\n\r\n            let batch = file.database.batch();\r\n            batch.delete(file.rootRef.doc(prevHeader.headerDocID));\r\n            if (prevHeader.contentDocID) {\r\n                batch.delete(file.rootRef.doc(prevHeader.contentDocID));\r\n            }\r\n            return batch.commit();\r\n        })\r\n        .then(function () {\r\n\r\n            file.cacheHeaders.delete(fileID);\r\n            return Promise.resolve({\r\n                userID: userID,\r\n                fileID: fileID\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n\r\n            return Promise.reject({\r\n                error: error,\r\n                userID: userID,\r\n                fileID: fileID\r\n            });\r\n        });\r\n}", "import { IFile, IHeader } from './IFile';\r\nimport { GetFileQuery } from './GetFileQuery';\r\nimport { DocToHeader } from './DocToHeader';\r\n\r\nexport function Clear(\r\n    file: IFile\r\n): Promise<{ userID: string, error?: unknown }> {\r\n\r\n    const userID = file.userID;\r\n    return GetFileQuery(file, userID, undefined, 'header')\r\n        .get()\r\n        .then(function (querySnapshot) {\r\n            let batch = file.database.batch();\r\n            querySnapshot.forEach(function (doc) {\r\n                let header = DocToHeader(doc);\r\n                batch.delete(file.rootRef.doc(header.headerDocID));\r\n                if (header.contentDocID) {\r\n                    batch.delete(file.rootRef.doc(header.contentDocID));\r\n                }\r\n            });\r\n            return batch.commit();\r\n        })\r\n        .then(function () {\r\n            file.cacheHeaders.clear();\r\n            return Promise.resolve({\r\n                userID: userID\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            return Promise.reject({\r\n                error: error,\r\n                userID: userID\r\n            });\r\n        });\r\n}\r\n\r\nexport default Clear;", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IFile, IConfig,\r\n    UserInfoType, IHeader, IContent,\r\n    LoadResultType, LoadHeadersResultType\r\n} from './IFile';\r\nimport { Save } from './Save';\r\nimport { Load } from './Load';\r\nimport { LoadHeaders } from './LoadHeaders';\r\nimport { Delete } from './Delete';\r\nimport { Clear } from './Clear';\r\n\r\n\r\nexport class Files implements IFile {\r\n    database: firebase.firestore.Firestore;\r\n    rootPath: string;\r\n    rootRef: firebase.firestore.CollectionReference;\r\n\r\n    userInfo: UserInfoType;\r\n\r\n    cacheHeaders: Map<string, IHeader>;\r\n\r\n    constructor({\r\n        root = '',\r\n        userID = ''\r\n    }: IConfig = {}) {\r\n\r\n        this.database = firebase.firestore();\r\n        this.setRootPath(root);\r\n\r\n        this.cacheHeaders = new Map();\r\n\r\n        // Owner\r\n        this.userInfo = { userID: '' };\r\n        this.setOwner(userID);\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = this.database.collection(rootPath);\r\n        return this;\r\n    }\r\n\r\n    setOwner(\r\n        userID: string | UserInfoType\r\n    ): this {\r\n\r\n        let prevUserID = this.userID;\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n\r\n        if (prevUserID !== this.userID) {\r\n            this.cacheHeaders.clear();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    save(\r\n        fileID: string,\r\n        header: IHeader = {},\r\n        content?: IContent,\r\n        updateMode: boolean = false\r\n    ): Promise<{ userID: string, fileID: string, error?: unknown }> {\r\n\r\n        return Save(this, fileID, header, content, updateMode);\r\n    }\r\n\r\n    load(\r\n        fileID: string\r\n    ): Promise<LoadResultType> {\r\n\r\n        return Load(this, fileID);\r\n    }\r\n\r\n    loadHeaders(\r\n    ): Promise<LoadHeadersResultType> {\r\n\r\n        return LoadHeaders(this);\r\n    }\r\n\r\n    delete(\r\n        fileID: string\r\n    ): Promise<{ userID: string, fileID: string, error?: unknown }> {\r\n\r\n        return Delete(this, fileID);\r\n    }\r\n\r\n    Clear(\r\n    ): Promise<{ userID: string, error?: unknown }> {\r\n\r\n        return Clear(this);\r\n    }\r\n}", "import { Files } from './Files';\r\n\r\nexport { Files };", "import { IBase } from '../utils/IBase';\r\n\r\nexport type TimeFiltersType = {\r\n    d?: boolean,\r\n    w?: boolean,\r\n    m?: boolean,\r\n    y?: boolean\r\n}\r\n\r\nexport type TimeFilterTypeString = 'd' | 'w' | 'm' | 'y';\r\nexport type TimeFilterTypeStringAlias = TimeFilterTypeString | 'day' | 'week' | 'month' | 'year';\r\nexport enum TimeFilterTypeStringAliasMap {\r\n    d = 'd',\r\n    w = 'w',\r\n    m = 'm',\r\n    y = 'y',\r\n    day = 'd',\r\n    week = 'w',\r\n    month = 'm',\r\n    year = 'y'\r\n}\r\n\r\nexport type TimeDataType = {\r\n    d: string,\r\n    w: string,\r\n    m: string,\r\n    y: string\r\n}\r\n\r\nexport enum TimeTagKeys {\r\n    d = 'tagD',\r\n    w = 'tagW',\r\n    m = 'tagM',\r\n    y = 'tagY'\r\n}\r\n\r\nexport enum ScoreKeys {\r\n    d = 'scoreD',\r\n    w = 'scoreW',\r\n    m = 'scoreM',\r\n    y = 'scoreY'\r\n}\r\n\r\nexport enum FullTimeName {\r\n    d = 'day',\r\n    w = 'week',\r\n    m = 'month',\r\n    y = 'year'\r\n}\r\n\r\nexport interface IRecord {\r\n    userID: string;\r\n    userName?: string;\r\n    boardID?: string;\r\n    tag?: string;\r\n\r\n    score?: number;\r\n    tagD?: string;\r\n    tagW?: string;\r\n    tagM?: string;\r\n    tagY?: string;\r\n    scoreD?: number;\r\n    scoreW?: number;\r\n    scoreM?: number;\r\n    scoreY?: number;\r\n\r\n    // Other properties\r\n    [name: string]: unknown;\r\n};\r\n\r\nexport type UserInfoType = {\r\n    userID: string,\r\n    userName: string\r\n}\r\n\r\n// GetRank\r\nexport type RankResultType = {\r\n    userID: string,\r\n    rank: number\r\n}\r\n\r\nexport interface IConfig {\r\n    root?: string;\r\n    userID?: string;\r\n    userName?: string;\r\n    boardID?: string;\r\n    tag?: string;\r\n    timeFilters?: boolean | TimeFiltersType;\r\n    timeFilterType?: TimeFilterTypeStringAlias;\r\n    pageItemCount?: number;\r\n}\r\n\r\nimport { IPageLoader } from '../pageloader/IPageLoader';\r\n\r\nexport interface ILeaderBoard extends IBase {\r\n\r\n    userInfo: UserInfoType;\r\n    userID: string;\r\n    userName: string;\r\n\r\n    resetQueryFlag: boolean;\r\n    boardID: string;\r\n    tag: string;\r\n\r\n    timeFilters: false | TimeFiltersType;\r\n    timeFilterType: TimeFilterTypeString;\r\n\r\n    pageItemCount: number;\r\n    page: IPageLoader;\r\n}", "import { TimeDataType } from './ILeaderboard';\r\n\r\nexport function GetTime(\r\n    timeStamp?: number\r\n): TimeDataType {\r\n\r\n    let date = (timeStamp) ? (new Date(timeStamp)) : (new Date());\r\n    let y = date.getFullYear();\r\n    let m = date.getMonth() + 1;\r\n    let d = date.getDate();\r\n    let Jan1st = new Date(date.getFullYear(), 0, 1);\r\n    let w = Math.ceil(\r\n        (((date.getTime() - Jan1st.getTime()) / 86400000) + Jan1st.getDay() + 1) / 7\r\n    );\r\n\r\n    return {\r\n        d: `${y}-${m}-${d}`,\r\n        w: `${y}-${w}`,\r\n        m: `${y}-${m}`,\r\n        y: `${y}`\r\n    };\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    ILeaderBoard,\r\n    TimeTagKeys, ScoreKeys\r\n} from './ILeaderBoard';\r\nimport { GetTime } from './GetTime';\r\n\r\nexport function GetRecordQuery(\r\n    leaderboard: ILeaderBoard,\r\n    boardID?: string | undefined,\r\n    customTag?: string | undefined,\r\n    userID?: string | undefined,\r\n    timeTagKey?: [string, string] | undefined\r\n): firebase.firestore.Query {\r\n\r\n    let query: firebase.firestore.Query = leaderboard.rootRef;\r\n    query = (boardID != null) ? query.where('boardID', '==', boardID) : query;\r\n    query = (customTag != null) ? query.where('tag', '==', customTag) : query;\r\n    query = (userID != null) ? query.where('userID', '==', userID) : query;\r\n\r\n    if (timeTagKey != null) {\r\n        query = query.where(timeTagKey[0], '==', timeTagKey[1]);\r\n    }\r\n    return query;\r\n};\r\n\r\nexport function GetMyRecordQuery(\r\n    leaderboard: ILeaderBoard,\r\n    userID: string = leaderboard.userID\r\n): firebase.firestore.Query {\r\n\r\n    return GetRecordQuery(leaderboard, leaderboard.boardID, leaderboard.tag, userID, undefined).limit(1);\r\n}\r\n\r\nimport { PageQueriesType } from '../pageloader/IPageLoader';\r\n\r\nexport function GetPageQuery(\r\n    leaderboard: ILeaderBoard\r\n): PageQueriesType {\r\n\r\n    let timeTagKey: [string, string] | undefined,\r\n        scoreKey: string;\r\n    if (leaderboard.timeFilters !== false) {\r\n        let t = leaderboard.timeFilterType[0];\r\n        timeTagKey = [TimeTagKeys[t], GetTime()[t]];\r\n        scoreKey = ScoreKeys[t];\r\n    } else { // No time filters\r\n        timeTagKey = undefined;\r\n        scoreKey = 'score';\r\n    }\r\n\r\n    let baseQuery = GetRecordQuery(leaderboard, leaderboard.boardID, leaderboard.tag, undefined, timeTagKey);\r\n    let nextPageQuery = baseQuery.orderBy(scoreKey, 'desc');\r\n    let prevPageQuery = baseQuery.orderBy(scoreKey);\r\n    return {\r\n        next: nextPageQuery,\r\n        previous: prevPageQuery\r\n    }\r\n}", "import {\r\n    ILeaderBoard,\r\n    TimeTagKeys, ScoreKeys,\r\n    IRecord\r\n} from './ILeaderBoard';\r\nimport { GetTime } from './GetTime';\r\nimport { GetMyRecordQuery } from './GetQueryMethods';\r\n\r\nexport function Post(\r\n    leaderBoard: ILeaderBoard,\r\n    score: number,\r\n    extraData?: object | undefined | null,\r\n    timeStamp?: number\r\n): Promise<void> {\r\n\r\n\r\n    let newRecord: IRecord = {\r\n        userID: leaderBoard.userID\r\n    };\r\n    if (leaderBoard.boardID !== undefined) {\r\n        newRecord.boardID = leaderBoard.boardID;\r\n    }\r\n    if (leaderBoard.userName) {\r\n        newRecord.userName = leaderBoard.userName;\r\n    }\r\n\r\n    if (leaderBoard.timeFilters !== false) {\r\n        let curTimeData = GetTime(timeStamp);\r\n        for (let t in leaderBoard.timeFilters) {\r\n            if (!leaderBoard.timeFilters[t]) {\r\n                continue;\r\n            }\r\n            newRecord[TimeTagKeys[t]] = curTimeData[t];\r\n            newRecord[ScoreKeys[t]] = score;\r\n        }\r\n    } else { // No time filters\r\n        newRecord.score = score;\r\n    }\r\n\r\n    if (leaderBoard.tag) {\r\n        newRecord.tag = leaderBoard.tag;\r\n    }\r\n    if (extraData) {\r\n        Object.assign(newRecord, extraData);\r\n    }\r\n    return GetMyRecordQuery(leaderBoard).get()\r\n        .then(function (querySnapshot) {\r\n            let prevRecord: firebase.firestore.DocumentData,\r\n                docID: string;\r\n\r\n            if (querySnapshot.size > 0) {\r\n                let doc = querySnapshot.docs[0];\r\n                prevRecord = doc.data();\r\n                docID = doc.id;\r\n            }\r\n\r\n            if (prevRecord) {\r\n                if (leaderBoard.timeFilters !== false) {\r\n                    for (let t in leaderBoard.timeFilters) {\r\n                        if (!leaderBoard.timeFilters[t]) {\r\n                            continue;\r\n                        }\r\n\r\n                        let timeTagKey: string = TimeTagKeys[t];\r\n                        if (prevRecord[timeTagKey] === newRecord[timeTagKey]) {\r\n                            let scoreKey: ScoreKeys = ScoreKeys[t];\r\n                            newRecord[scoreKey] = Math.max(prevRecord[scoreKey], newRecord[scoreKey]);\r\n                        }\r\n                    }\r\n                } else { // No time filters\r\n                    newRecord.score = Math.max(prevRecord.score, newRecord.score);\r\n                }\r\n            }\r\n            if (docID === undefined) {\r\n                docID = leaderBoard.rootRef.doc().id;\r\n            }\r\n            return leaderBoard.rootRef.doc(docID)\r\n                .set(newRecord);\r\n        });\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    ILeaderBoard,\r\n    TimeTagKeys, ScoreKeys,\r\n    IRecord\r\n} from './ILeaderBoard';\r\nimport { GetPageQuery } from './GetQueryMethods';\r\n\r\n\r\nexport function LoadFirstPage(\r\n    leaderBoard: ILeaderBoard\r\n): Promise<IRecord[]> {\r\n\r\n    ResetPageQuery(leaderBoard);\r\n    return leaderBoard.page.loadFirstPage()\r\n        .then(function (docs) {\r\n            return Promise.resolve(DocsToDataArray(leaderBoard, docs));\r\n        })\r\n};\r\n\r\n\r\nexport function LoadNextPage(\r\n    leaderBoard: ILeaderBoard\r\n): Promise<IRecord[]> {\r\n\r\n    ResetPageQuery(leaderBoard);\r\n    return leaderBoard.page.loadNextPage()\r\n        .then(function (docs) {\r\n            return Promise.resolve(DocsToDataArray(leaderBoard, docs));\r\n        })\r\n};\r\n\r\nexport function LoadPreviousPage(\r\n    leaderBoard: ILeaderBoard,\r\n): Promise<IRecord[]> {\r\n\r\n    ResetPageQuery(leaderBoard);\r\n    return leaderBoard.page.loadPreviousPage()\r\n        .then(function (docs) {\r\n            return Promise.resolve(DocsToDataArray(leaderBoard, docs));\r\n        })\r\n};\r\n\r\n\r\nexport function LoadCurrentPage(\r\n    leaderBoard: ILeaderBoard\r\n): Promise<IRecord[]> {\r\n\r\n    ResetPageQuery(leaderBoard);\r\n    return leaderBoard.page.loadCurrentPage()\r\n        .then(function (docs) {\r\n            return Promise.resolve(DocsToDataArray(leaderBoard, docs));\r\n        })\r\n};\r\n\r\n\r\nexport function Load(\r\n    leaderBoard: ILeaderBoard,\r\n    count: number,\r\n    skip: number = 0\r\n): Promise<IRecord[]> {\r\n\r\n    ResetPageQuery(leaderBoard);\r\n    return leaderBoard.page.load(count, skip)\r\n        .then(function (docs) {\r\n            return Promise.resolve(DocsToDataArray(leaderBoard, docs));\r\n        })\r\n};\r\n\r\nfunction ResetPageQuery(\r\n    leaderBoard: ILeaderBoard\r\n): void {\r\n\r\n    if (!leaderBoard.resetQueryFlag) {\r\n        return;\r\n    }\r\n\r\n    leaderBoard.resetQueryFlag = false;\r\n    leaderBoard.page.setQuery(GetPageQuery(leaderBoard));\r\n}\r\n\r\nfunction DocsToDataArray(\r\n    leaderBoard: ILeaderBoard,\r\n    docs: firebase.firestore.DocumentData[]\r\n): IRecord[] {\r\n\r\n    let items: IRecord[] = [];\r\n    let scoreKey: ScoreKeys = ScoreKeys[leaderBoard.timeFilterType[0]];\r\n    for (let i = 0, cnt = docs.length; i < cnt; i++) {\r\n        let item = docs[i].data() as IRecord;\r\n\r\n        if (leaderBoard.timeFilters !== false) {\r\n            item.score = item[scoreKey];\r\n            // Remove timeFilterKeys, and scoreKeys\r\n            for (let t in leaderBoard.timeFilters) {\r\n                delete item[TimeTagKeys[t]];\r\n                delete item[ScoreKeys[t]];\r\n            }\r\n        }\r\n        items.push(item);\r\n    }\r\n    return items;\r\n}", "import {\r\n    ILeaderBoard,\r\n    IRecord\r\n} from './ILeaderBoard';\r\nimport { GetMyRecordQuery } from './GetQueryMethods';\r\n\r\nexport function GetScore(\r\n    leaderBoard: ILeaderBoard,\r\n    userID: string = leaderBoard.userID\r\n): Promise<IRecord> {\r\n\r\n    return GetMyRecordQuery(leaderBoard, userID).get()\r\n        .then(function (querySnapshot) {\r\n            let item: IRecord;\r\n            if (querySnapshot.size > 0) {\r\n                item = querySnapshot.docs[0].data() as IRecord;\r\n            }\r\n            return Promise.resolve(item);\r\n        });\r\n}", "import * as firebase from 'firebase/app';\r\n\r\nexport type StartModeType = 'startAt' | 'startAfter';\r\nexport type ForEachPageCallbackType = (querySnapshot: firebase.firestore.QuerySnapshot) => boolean | void;\r\nexport type ResolveCallbackType = () => any;\r\n\r\nexport type QueryConfig = {\r\n    query: firebase.firestore.Query\r\n    totalLines?: number,\r\n    linesPerPage?: number,\r\n    startDocRef?: firebase.firestore.DocumentData,\r\n    startMode?: StartModeType,\r\n    forEachPageCallback?: ForEachPageCallbackType,\r\n    resolveCallback?: ResolveCallbackType\r\n}\r\n\r\ntype QueryNextPageConfig = QueryConfig & {\r\n    remainderLines: number\r\n}\r\n\r\nexport function Query({\r\n    query,\r\n    totalLines = Infinity,\r\n    linesPerPage = 1000,\r\n    startDocRef,\r\n    startMode,\r\n    forEachPageCallback,\r\n    resolveCallback\r\n}: QueryConfig): Promise<any> {\r\n\r\n    return QueryNextPage({\r\n        query: query,\r\n        remainderLines: totalLines,\r\n        linesPerPage: linesPerPage,\r\n        startDocRef: startDocRef,\r\n        startMode: startMode,\r\n        forEachPageCallback: forEachPageCallback,\r\n        resolveCallback: resolveCallback\r\n    });\r\n}\r\n\r\nfunction QueryNextPage(\r\n    config: QueryNextPageConfig\r\n): Promise<unknown> {\r\n\r\n    let query = config.query;\r\n    if (config.startDocRef) {\r\n        query = query[config.startMode](config.startDocRef);\r\n    }\r\n\r\n    let lineCount = Math.min(config.remainderLines, config.linesPerPage);\r\n    config.remainderLines -= lineCount;\r\n    return query.limit(lineCount).get()\r\n        .then(function (querySnapshot: firebase.firestore.QuerySnapshot) {\r\n\r\n            let done = (config.remainderLines === 0) || (querySnapshot.size < lineCount);  // Is last page\r\n            let result = false;\r\n            if (config.forEachPageCallback) {\r\n                result = config.forEachPageCallback(querySnapshot) || false;\r\n            }\r\n            done = done || result;\r\n\r\n            if (done) {\r\n                let out: unknown;\r\n                if (config.resolveCallback) {\r\n                    out = config.resolveCallback();\r\n                }\r\n                return Promise.resolve(out);\r\n            } else {\r\n                config.startDocRef = querySnapshot.docs[querySnapshot.size - 1];\r\n                config.startMode = 'startAfter';\r\n                return QueryNextPage(config);\r\n            }\r\n        })\r\n}", "import * as firebase from 'firebase/app';\r\nimport { Query } from './Query';\r\n\r\nexport type TestCallbackType = (doc: firebase.firestore.DocumentData) => boolean;\r\n\r\nexport type FindFirstResultType = {\r\n    doc: firebase.firestore.DocumentData | undefined,\r\n    index: number | undefined\r\n}\r\n\r\nexport function FindFirst(\r\n    query: firebase.firestore.Query,\r\n    testCallback: TestCallbackType\r\n): Promise<FindFirstResultType> {\r\n\r\n    let out = {\r\n        doc: undefined,\r\n        index: undefined\r\n    }\r\n    let startIndex = 0;\r\n    return Query({\r\n        query: query,\r\n        forEachPageCallback: function (querySnapshot) {\r\n            let docs = querySnapshot.docs,\r\n                doc: firebase.firestore.DocumentData;\r\n            for (let i = 0, cnt = docs.length; i < cnt; i++) {\r\n                doc = docs[i];\r\n                if (testCallback(doc)) {\r\n                    out.doc = doc;\r\n                    out.index = startIndex + i;\r\n                    return true;\r\n                }\r\n            }\r\n            startIndex += querySnapshot.size;\r\n        },\r\n        resolveCallback: function () {\r\n            return out;\r\n        }\r\n    });\r\n}", "import {\r\n    ILeaderBoard,\r\n    IRecord, RankResultType\r\n} from './ILeaderBoard';\r\nimport { GetPageQuery } from './GetQueryMethods';\r\nimport { FindFirst, TestCallbackType } from '../utils/query/FindFirst';\r\n\r\n\r\nexport function GetRank(\r\n    leaderboard: ILeaderBoard,\r\n    userID: string = leaderboard.userID\r\n): Promise<RankResultType> {\r\n\r\n    let query = GetPageQuery(leaderboard).next;\r\n    let testCallback: TestCallbackType = function (doc: firebase.firestore.DocumentData) {\r\n        let item = doc.data() as IRecord;\r\n        return (item.userID === userID);\r\n    }\r\n    return FindFirst(query, testCallback)\r\n        .then(function (result) {\r\n            return Promise.resolve({ userID: userID, rank: result.index });\r\n        })\r\n};", "import * as firebase from 'firebase/app';\r\nimport {\r\n    Query,\r\n    StartModeType\r\n} from './Query';\r\n\r\n\r\nexport function Load(\r\n    query: firebase.firestore.Query,\r\n    count: number = Infinity,\r\n    skip: number = 0,\r\n    startDocRef?: firebase.firestore.DocumentData,\r\n    startMode?: StartModeType\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    let out: firebase.firestore.DocumentData[] = [];\r\n    let startIndex = 0;\r\n\r\n    return Query({\r\n        query: query,\r\n        totalLines: (skip + count),\r\n        startDocRef: startDocRef,\r\n        startMode: startMode,\r\n        forEachPageCallback: function (querySnapshot) {\r\n            let validDocs: firebase.firestore.DocumentData[];\r\n            let docCount = querySnapshot.size;\r\n            let localStart = skip - startIndex;\r\n            if (localStart <= 0) {\r\n                validDocs = querySnapshot.docs;\r\n            } else if (localStart < docCount) {\r\n                validDocs = querySnapshot.docs.slice(localStart, docCount);\r\n            }\r\n            if (validDocs) {\r\n                out.push(...validDocs);\r\n            }\r\n            startIndex += docCount;\r\n        },\r\n        resolveCallback: function () {\r\n            return out;\r\n        }\r\n    });\r\n}", "import * as firebase from 'firebase/app';\r\nimport { Load } from './Load';\r\n\r\n\r\nexport function Delete(\r\n    query: firebase.firestore.Query\r\n): Promise<void> {\r\n\r\n    return Load(query)\r\n        .then(function (docs: firebase.firestore.DocumentData[]) {\r\n\r\n            if (docs.length === 0) { // Last page, task done\r\n                return Promise.resolve();\r\n            }\r\n\r\n            let tasks: Promise<void>[] = [];\r\n            let batch: firebase.firestore.WriteBatch,\r\n                actionCount: number;\r\n            for (let i = 0, cnt = docs.length; i < cnt; i++) {\r\n                if (batch === undefined) {\r\n                    batch = firebase.firestore().batch();\r\n                    actionCount = 0;\r\n                }\r\n\r\n                batch.delete(docs[i].ref);\r\n                actionCount++;\r\n                if (actionCount >= 500) {\r\n                    tasks.push(batch.commit());\r\n                    batch = undefined;\r\n                }\r\n            }\r\n\r\n            if (batch) {\r\n                tasks.push(batch.commit());\r\n            }\r\n\r\n            return Promise.all(tasks) as Promise<any>;\r\n        })\r\n}", "import { ILeaderBoard } from './ILeaderBoard';\r\nimport { GetRecordQuery } from './GetQueryMethods';\r\nimport { Delete } from '../utils/query/Delete';\r\n\r\nexport function DeleteUser(\r\n    leaderBoard: ILeaderBoard,\r\n    userID: string = leaderBoard.userID\r\n): Promise<void> {\r\n\r\n    let query = GetRecordQuery(leaderBoard, undefined, undefined, userID, undefined);\r\n    return Delete(query);\r\n};\r\n\r\nexport function DeleteBoard(\r\n    leaderBoard: ILeaderBoard,\r\n    boardID: string = leaderBoard.boardID,\r\n    tag: string = leaderBoard.tag,\r\n): Promise<void> {\r\n\r\n    let query = GetRecordQuery(leaderBoard, boardID, tag, undefined, undefined);\r\n    return Delete(query);\r\n}", "import { IPageLoader } from './IPageLoader';\r\nimport { Load } from '../utils/query/Load';\r\n\r\nexport function LoadInRange(\r\n    pageLoader: IPageLoader,\r\n    count: number,\r\n    skip: number = 0\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.nextQuery, count, skip, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex = undefined; // Not in Page mode\r\n            pageLoader.startItemIndex = skip;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (count === undefined) ? true : (docCount === count);\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IPageLoader,\r\n    IConfig, PageQueriesType\r\n} from './IPageLoader';\r\nimport { StartModeType } from '../utils/query/Query';\r\nimport { LoadInRange } from './LoadInRange';\r\n\r\n\r\nexport abstract class BasePageLoader implements IPageLoader {\r\n    nextQuery: firebase.firestore.Query;\r\n    prevQuery: firebase.firestore.Query;\r\n    itemCount: number;\r\n    baselineDoc: firebase.firestore.DocumentData;\r\n    baselineMode: StartModeType;\r\n\r\n    pageIndex: number | null;\r\n    baselineDocRef: firebase.firestore.DocumentReference;\r\n    prevPageEndDocRef: firebase.firestore.DocumentReference;\r\n    currPageStartDocRef: firebase.firestore.DocumentReference;\r\n    currPageEndDocRef: firebase.firestore.DocumentReference;\r\n    startItemIndex: number | null;\r\n    endItemIndex: number | null;\r\n    cacheItems: firebase.firestore.DocumentData[];\r\n    isFullPage: boolean;\r\n\r\n    constructor({\r\n        query = { next: undefined, previous: undefined },\r\n        itemCount = 100,\r\n        baselineDoc,\r\n        baselineMode = 'startAt'\r\n    }: IConfig = {}) {\r\n\r\n        this.setQuery(query);\r\n        this.setItemCount(itemCount);\r\n        this.setBaselineDoc(baselineDoc, baselineMode);\r\n        this.pageIndex = undefined;\r\n        this.baselineDocRef = undefined;\r\n        this.baselineMode = 'startAt';\r\n        this.startItemIndex = undefined;\r\n        this.endItemIndex = undefined;\r\n        this.cacheItems = undefined;\r\n        this.isFullPage = undefined;\r\n    }\r\n\r\n\r\n    setQuery(\r\n        nextQuery: PageQueriesType | firebase.firestore.Query,\r\n        prevQuery?: firebase.firestore.Query\r\n    ): this {\r\n\r\n        if (nextQuery instanceof firebase.firestore.Query) {\r\n            this.nextQuery = nextQuery;\r\n            this.prevQuery = prevQuery;\r\n        } else {\r\n            var config = nextQuery;\r\n            this.nextQuery = config.next;\r\n            this.prevQuery = config.previous;\r\n        }\r\n\r\n        this.pageIndex = null;\r\n        this.isFullPage = true;\r\n        return this;\r\n    }\r\n\r\n    setItemCount(\r\n        count: number\r\n    ): this {\r\n\r\n        this.itemCount = count;\r\n        return this;\r\n    }\r\n\r\n    setBaselineDoc(\r\n        doc: firebase.firestore.DocumentData,\r\n        mode: StartModeType\r\n    ): this {\r\n\r\n        if (doc) {\r\n            this.baselineDocRef = doc.ref;\r\n            this.baselineMode = mode;\r\n        } else {\r\n            this.baselineDocRef = undefined;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    load(\r\n        count: number,\r\n        skip: number = 0\r\n    ): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadInRange(this, count, skip);\r\n    }\r\n\r\n    loadFirstPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return this._loadFirstPage();\r\n    }\r\n\r\n    loadNextPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        if (this.pageIndex == null) {\r\n            return this._loadFirstPage();\r\n        }\r\n\r\n        return this._loadNextPage();\r\n    }\r\n\r\n    loadPreviousPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        if ((this.pageIndex == null) || (this.pageIndex === 1)) {\r\n            return this._loadFirstPage();\r\n        }\r\n\r\n        return this._loadPreviousPage();\r\n    }\r\n\r\n    loadCurrentPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        if ((this.pageIndex == null) || (this.pageIndex === 0)) {\r\n            return this._loadFirstPage();\r\n        }\r\n\r\n        return this._loadCurrentPage();\r\n    }\r\n\r\n    abstract _loadFirstPage(): Promise<firebase.firestore.DocumentData[]>;\r\n    abstract _loadNextPage(): Promise<firebase.firestore.DocumentData[]>;\r\n    abstract _loadPreviousPage(): Promise<firebase.firestore.DocumentData[]>;\r\n    abstract _loadCurrentPage(): Promise<firebase.firestore.DocumentData[]>;\r\n\r\n\r\n}", "import { IPageLoader } from './IPageLoader';\r\nimport { Load } from '../utils/query/Load';\r\n\r\nexport function LoadStaticPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, 0, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex = 0;\r\n            pageLoader.startItemIndex = 0;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            // Doc reference for paging\r\n            pageLoader.prevPageEndDocRef = null;\r\n            pageLoader.currPageStartDocRef = docs[0].ref;\r\n            pageLoader.currPageEndDocRef = docs[docCount - 1].ref;\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}\r\n\r\nexport function LoadDynamicPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, 0, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex = 0;\r\n            pageLoader.startItemIndex = 0;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}", "import { IPageLoader } from './IPageLoader';\r\nimport { Load } from '../utils/query/Load';\r\n\r\nexport function LoadStaticPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, 0, pageLoader.currPageEndDocRef, 'startAfter')\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex += 1;\r\n            pageLoader.startItemIndex = pageLoader.endItemIndex + 1;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            // Doc reference for paging\r\n            pageLoader.prevPageEndDocRef = pageLoader.currPageEndDocRef;\r\n            pageLoader.currPageStartDocRef = docs[0].ref;\r\n            pageLoader.currPageEndDocRef = docs[docCount - 1].ref;\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}\r\n\r\nexport function LoadDynamicPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    let skip = (pageLoader.pageIndex + 1) * pageLoader.itemCount;\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, skip, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex += 1;\r\n            pageLoader.startItemIndex = pageLoader.endItemIndex + 1;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}", "import { IPageLoader } from './IPageLoader';\r\nimport { Load } from '../utils/query/Load';\r\n\r\n\r\nexport function LoadStaticPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.prevQuery, (pageLoader.itemCount + 1), 0, pageLoader.currPageStartDocRef, 'startAfter')\r\n        .then(function (docs) {\r\n            // Get one more document for previous page end\r\n            let docCount = docs.length - 1;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.cacheItems.pop(); // Pop up endDoc of previous page\r\n            pageLoader.cacheItems.reverse();\r\n            pageLoader.pageIndex -= 1;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex - 1;\r\n            pageLoader.startItemIndex = pageLoader.endItemIndex - docCount + 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            // Doc reference for paging\r\n            pageLoader.prevPageEndDocRef = docs[docCount].ref;\r\n            pageLoader.currPageStartDocRef = docs[docCount - 1].ref;\r\n            pageLoader.currPageEndDocRef = docs[0].ref;\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}\r\n\r\nexport function LoadDynamicPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    let skip = (pageLoader.pageIndex - 1) * pageLoader.itemCount;\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, skip, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            // Get one more document for previous page end\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.pageIndex -= 1;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex - 1;\r\n            pageLoader.startItemIndex = pageLoader.endItemIndex - docCount + 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}", "import { IPageLoader } from './IPageLoader';\r\nimport { Load } from '../utils/query/Load';\r\n\r\nexport function LoadStaticPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, 0, pageLoader.prevPageEndDocRef, 'startAfter')\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            // Doc reference for paging\r\n            pageLoader.currPageStartDocRef = docs[0].ref;\r\n            pageLoader.currPageEndDocRef = docs[docCount - 1].ref;\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}\r\n\r\nexport function LoadDynamicPage(\r\n    pageLoader: IPageLoader\r\n): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n    let skip = pageLoader.pageIndex * pageLoader.itemCount;\r\n    return Load(pageLoader.nextQuery, pageLoader.itemCount, skip, pageLoader.baselineDocRef, pageLoader.baselineMode)\r\n        .then(function (docs) {\r\n            let docCount = docs.length;\r\n            pageLoader.cacheItems = docs;\r\n            pageLoader.endItemIndex = pageLoader.startItemIndex + docCount - 1;\r\n            pageLoader.isFullPage = (docCount === pageLoader.itemCount);\r\n            return Promise.resolve(pageLoader.cacheItems);\r\n        })\r\n}", "import * as firebase from 'firebase/app';\r\nimport { BasePageLoader } from './BasePageLoader';\r\nimport { LoadDynamicPage as LoadFirstPage } from './LoadFirstPage';\r\nimport { LoadDynamicPage as LoadNextPage } from './LoadNextPage';\r\nimport { LoadDynamicPage as LoadPreviousPage } from './LoadPreviousPage';\r\nimport { LoadDynamicPage as LoadCurrentPage } from './LoadCurrentPage';\r\n\r\n\r\nexport class DynamicPageLoader extends BasePageLoader {\r\n\r\n    _loadFirstPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadFirstPage(this);\r\n    }\r\n\r\n    _loadNextPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadNextPage(this);\r\n    }\r\n\r\n    _loadPreviousPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadPreviousPage(this);\r\n    }\r\n\r\n    _loadCurrentPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadCurrentPage(this);\r\n    }\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    ILeaderBoard, IConfig,\r\n    UserInfoType,\r\n    TimeFiltersType, TimeFilterTypeString, TimeFilterTypeStringAlias, TimeFilterTypeStringAliasMap,\r\n    IRecord, RankResultType\r\n} from './ILeaderBoard';\r\nimport { Post } from './Post';\r\nimport { LoadFirstPage, LoadNextPage, LoadPreviousPage, LoadCurrentPage, Load } from './LoadMethods';\r\nimport { GetScore } from './GetScore';\r\nimport { GetRank } from './GetRank';\r\nimport { DeleteUser, DeleteBoard } from './DeleteMethods';\r\nimport { } from './GetQueryMethods';\r\nimport { IPageLoader } from '../pageloader/IPageLoader';\r\nimport { DynamicPageLoader } from '../pageloader/DynamicPageLoader';\r\n\r\n\r\nexport class LeaderBoard implements ILeaderBoard {\r\n    database: firebase.firestore.Firestore;\r\n    rootPath: string;\r\n    rootRef: firebase.firestore.CollectionReference;\r\n    userInfo: UserInfoType;\r\n\r\n    resetQueryFlag: boolean;\r\n    boardID: string;\r\n    tag: string;\r\n\r\n    timeFilters: false | TimeFiltersType;\r\n    timeFilterType: TimeFilterTypeString;\r\n\r\n    pageItemCount: number;\r\n    page: IPageLoader;\r\n\r\n    constructor({\r\n        root = '',\r\n        userID = '',\r\n        userName = '',\r\n        boardID,\r\n        tag,\r\n        timeFilters = false,\r\n        timeFilterType = 'year',\r\n        pageItemCount = 100\r\n    }: IConfig = {}) {\r\n        this.database = firebase.firestore();\r\n        this.setRootPath(root);\r\n\r\n        this.userInfo = { userID: undefined, userName: undefined };\r\n        this.setUser(userID, userName);\r\n        this.setBoardID(boardID);\r\n        this.setTag(tag);\r\n        this.setTimeFilters(timeFilters);\r\n        this.setTimeFilterType(timeFilterType);\r\n\r\n        this.page = new DynamicPageLoader({ itemCount: pageItemCount });\r\n        this.resetQueryFlag = true;\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.rootPath !== rootPath);\r\n        this.rootPath = rootPath;\r\n        this.rootRef = this.database.collection(rootPath);\r\n        return this;\r\n    }\r\n\r\n    setUser(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setBoardID(\r\n        boardID?: string\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.boardID !== boardID);\r\n        this.boardID = boardID;\r\n        return this;\r\n    }\r\n\r\n    setTag(\r\n        tag?: string\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.tag !== tag);\r\n        this.tag = tag;\r\n        return this;\r\n    }\r\n\r\n    setTimeFilters(\r\n        filters: boolean | TimeFiltersType\r\n    ): this {\r\n\r\n        if (filters === false) {\r\n            this.timeFilters = false;\r\n        } else { // filters is true, or a plain object\r\n            let d: boolean, w: boolean, m: boolean, y: boolean;\r\n            ({\r\n                d = true,\r\n                w = true,\r\n                m = true,\r\n                y = true\r\n            } = (filters === true) ? {} : filters)\r\n            this.timeFilters = {\r\n                d: d,\r\n                w: w,\r\n                m: m,\r\n                y: y\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTimeFilterType(\r\n        type: TimeFilterTypeStringAlias\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.timeFilterType !== type);\r\n        this.timeFilterType = TimeFilterTypeStringAliasMap[type];\r\n        return this;\r\n    }\r\n\r\n    setPageItemCount(\r\n        count: number\r\n    ): this {\r\n\r\n        this.page.setItemCount(count);\r\n        return this;\r\n    }\r\n\r\n    get pageIndex() {\r\n        return this.page.pageIndex;\r\n    }\r\n\r\n    get isFirstPage() {\r\n        return (this.page.pageIndex === 0);\r\n    }\r\n\r\n    get isLastPage() {\r\n        return (this.page.isFullPage === false);\r\n    }\r\n\r\n    post(\r\n        score: number,\r\n        extraData?: object | undefined | null,\r\n        timeStamp?: number | Date\r\n    ): Promise<void> {\r\n\r\n        if (timeStamp instanceof Date) {\r\n            timeStamp = timeStamp.getTime();\r\n        }\r\n        return Post(this, score, extraData, timeStamp);\r\n    }\r\n\r\n    getScore(\r\n        userID: string = this.userID\r\n    ): Promise<IRecord> {\r\n\r\n        return GetScore(this, userID);\r\n    }\r\n\r\n    getRank(\r\n        userID: string = this.userID\r\n    ): Promise<RankResultType> {\r\n\r\n        return GetRank(this, userID);\r\n    }\r\n\r\n    loadFirstPage(): Promise<IRecord[]> {\r\n\r\n        return LoadFirstPage(this);\r\n    }\r\n\r\n    loadNextPage(): Promise<IRecord[]> {\r\n\r\n        return LoadNextPage(this);\r\n    }\r\n\r\n    loadPreviousPage(): Promise<IRecord[]> {\r\n\r\n        return LoadPreviousPage(this);\r\n    }\r\n\r\n    loadCurrentPage(): Promise<IRecord[]> {\r\n\r\n        return LoadCurrentPage(this);\r\n    }\r\n\r\n    Load(\r\n        count: number,\r\n        skip: number = 0\r\n    ): Promise<IRecord[]> {\r\n\r\n        return Load(this, count, skip);\r\n    }\r\n\r\n    deleteUser(\r\n        userID: string = this.userID\r\n    ): Promise<void> {\r\n\r\n        return DeleteUser(this, userID);\r\n    }\r\n\r\n    deleteBoard(\r\n        boardID: string = this.boardID,\r\n        tag: string = this.tag,\r\n    ): Promise<void> {\r\n\r\n        return DeleteBoard(this, boardID, tag);\r\n    }\r\n}", "import { LeaderBoard } from './LeaderBoard';\r\n\r\nexport { LeaderBoard };", "import * as firebase from 'firebase/app';\r\nimport { BasePageLoader } from './BasePageLoader';\r\nimport { LoadStaticPage as LoadFirstPage } from './LoadFirstPage';\r\nimport { LoadStaticPage as LoadNextPage } from './LoadNextPage';\r\nimport { LoadStaticPage as LoadPreviousPage } from './LoadPreviousPage';\r\nimport { LoadStaticPage as LoadCurrentPage } from './LoadCurrentPage';\r\n\r\n\r\nexport class StaticPageLoader extends BasePageLoader {\r\n\r\n    _loadFirstPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadFirstPage(this);\r\n    }\r\n\r\n    _loadNextPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadNextPage(this);\r\n    }\r\n\r\n    _loadPreviousPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadPreviousPage(this);\r\n    }\r\n\r\n    _loadCurrentPage(): Promise<firebase.firestore.DocumentData[]> {\r\n\r\n        return LoadCurrentPage(this);\r\n    }\r\n}", "import { DynamicPageLoader } from './DynamicPageLoader';\r\nimport { StaticPageLoader } from './StaticPageLoader';\r\n\r\nexport {\r\n    DynamicPageLoader,\r\n    StaticPageLoader\r\n};", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IMessages, IMessage\r\n} from './IMessages';\r\n\r\n\r\nexport function Send(\r\n    messager: IMessages,\r\n    message: unknown\r\n): Promise<firebase.firestore.DocumentReference<firebase.firestore.DocumentData>> {\r\n\r\n    let d: IMessage = {\r\n        senderID: messager.userID,\r\n        message: message,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    }\r\n    if (messager.userName !== undefined) {\r\n        d.senderName = messager.userName;\r\n    }\r\n    if (messager.receiverID !== undefined) {\r\n        d.receiverID = messager.receiverID;\r\n    }\r\n\r\n    return messager.rootRef.add(d);\r\n}", "import { IMessages } from './IMessages';\r\n\r\nexport function GetReceiverQuery(\r\n    messager: IMessages,\r\n    receiverID: string = messager.receiverID\r\n): firebase.firestore.Query {\r\n\r\n    let query = messager.rootRef as firebase.firestore.Query;\r\n    query = (receiverID !== undefined) ? query.where('receiverID', '==', receiverID) : query;\r\n    return query;\r\n};\r\n\r\nimport { PageQueriesType } from '../pageloader/IPageLoader';\r\n\r\nexport function GetPageQuery(\r\n    messager: IMessages,\r\n    receiverID: string = messager.receiverID\r\n): PageQueriesType {\r\n\r\n    let baseQuery = GetReceiverQuery(messager, receiverID);\r\n    let nextPageQuery = baseQuery.orderBy('timestamp');\r\n    let prevPageQuery = baseQuery.orderBy('timestamp', 'desc');\r\n    return {\r\n        next: nextPageQuery,\r\n        previous: prevPageQuery\r\n    }\r\n};", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IMessages,\r\n    IMessage\r\n} from './IMessages';\r\nimport { GetReceiverQuery, GetPageQuery } from './GetQueryMethods';\r\n\r\nexport function StartReceiving(\r\n    messager: IMessages\r\n): void {\r\n\r\n    let query = GetReceiverQuery(messager).orderBy('timestamp', 'desc').limit(1);\r\n    messager.unsubscribe = query.onSnapshot(\r\n        {\r\n            includeMetadataChanges: true\r\n        },\r\n        function (querySnapshot) {\r\n            if (querySnapshot.size > 0) {  // Load data\r\n                let doc = querySnapshot.docs[0];\r\n                if (doc.metadata.hasPendingWrites) {  // Load local message                        \r\n                    if (messager.skipFirst) { // Local doc dose not have timestamp\r\n                        messager.skipFirst = false;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                ResetPageQuery(messager, messager.receiverID, doc);\r\n\r\n                if (messager.skipFirst) {  // Load previos data\r\n                    messager.skipFirst = false;\r\n                } else {\r\n                    let d: IMessage = DocToMessage(doc);\r\n                    messager.cacheMessages.push(d);\r\n                    messager.emit('receive', d);\r\n                }\r\n            } else {\r\n                if (messager.skipFirst) {  // Start from an empty collection\r\n                    messager.skipFirst = false;\r\n                }\r\n            }\r\n        },\r\n        function (error) {\r\n            debugger\r\n        }\r\n    )\r\n};\r\n\r\nexport function StopReceiving(\r\n    messager: IMessages\r\n): void {\r\n\r\n    if (messager.unsubscribe) {\r\n        messager.unsubscribe();\r\n    }\r\n\r\n    // Reset to initial state\r\n    messager.resetQueryFlag = true;\r\n    messager.cacheMessages.length = 0;\r\n};\r\n\r\nexport function LoadPreviousMessages(\r\n    messager: IMessages\r\n): Promise<IMessage[]> {\r\n\r\n    ResetPageQuery(messager);\r\n    return messager.page.loadNextPage()\r\n        .then(function (docs) {\r\n            let messages: IMessage[] = [];\r\n            for (let i = 0, cnt = docs.length; i < cnt; i++) {\r\n                messages.push(DocToMessage(docs[i]));\r\n            }\r\n\r\n            messager.cacheMessages.splice(0, 0, ...messages);\r\n            return Promise.resolve(messages);\r\n        })\r\n}\r\n\r\n\r\nfunction ResetPageQuery(\r\n    messager: IMessages,\r\n    receiverID: string = messager.receiverID,\r\n    baselineDoc?: firebase.firestore.DocumentData\r\n): void {\r\n\r\n    if (!messager.resetQueryFlag) {\r\n        return;\r\n    }\r\n\r\n    messager.resetQueryFlag = false;\r\n    let baselineMode: 'startAt' | 'startAfter' = (messager.skipFirst) ? 'startAt' : 'startAfter';\r\n    messager.page\r\n        .setBaselineDoc(baselineDoc, baselineMode)\r\n        .setQuery(GetPageQuery(messager, receiverID));\r\n    return;\r\n}\r\n\r\nfunction DocToMessage(\r\n    doc: firebase.firestore.DocumentData\r\n): IMessage {\r\n\r\n    let message = doc.data() as IMessage;\r\n    message.timestamp = (message.timestamp as firebase.firestore.Timestamp).toDate();\r\n    return message;\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IMessages,\r\n    IConfig, UserInfoType, IMessage\r\n} from './IMessages';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport { IPageLoader } from '../pageloader/IPageLoader';\r\nimport { StaticPageLoader } from '../pageloader/StaticPageLoader';\r\nimport { Send } from './Send';\r\nimport { StartReceiving, StopReceiving, LoadPreviousMessages } from './ReceiveMethods';\r\n\r\nexport class Messages extends BaseEventEmitter implements IMessages {\r\n    database: firebase.firestore.Firestore;\r\n    rootPath: string;\r\n    rootRef: firebase.firestore.CollectionReference;\r\n    userInfo: UserInfoType;\r\n    receiverID: string;\r\n\r\n    resetQueryFlag: boolean;\r\n    skipFirst: boolean;\r\n    unsubscribe: () => void;\r\n\r\n    page: IPageLoader;\r\n\r\n    cacheMessages: IMessage[];\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        senderID = '',\r\n        senderName = '',\r\n        receiverID,\r\n        pageItemCount = 100,\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n\r\n        this.database = firebase.firestore();\r\n        this.setRootPath(root);\r\n\r\n        this.userInfo = { userID: '', userName: undefined };\r\n        this.setSender(senderID, senderName);\r\n        this.setReceiver(receiverID);\r\n\r\n        this.skipFirst = true;\r\n        this.unsubscribe = undefined;\r\n        this.page = new StaticPageLoader();\r\n        this.setPageItemCount(pageItemCount);\r\n        this.resetQueryFlag = true;\r\n        this.cacheMessages = [];\r\n    }\r\n\r\n    destroy() {\r\n        this\r\n            .stopReceiving()\r\n            .destroyEventEmitter();\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.rootPath !== rootPath);\r\n        this.rootPath = rootPath;\r\n        this.rootRef = this.database.collection(rootPath);\r\n        return this;\r\n    }\r\n\r\n    setSender(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setReceiver(\r\n        receiverID?: string\r\n    ): this {\r\n\r\n        this.resetQueryFlag = this.resetQueryFlag || (this.receiverID !== receiverID);\r\n        this.receiverID = receiverID;\r\n        return this;\r\n    }\r\n\r\n    setPageItemCount(\r\n        count: number\r\n    ): this {\r\n\r\n        this.page.setItemCount(count);\r\n        return this;\r\n    }\r\n\r\n    get hasPreviousMessage() {\r\n        return (this.page.isFullPage !== false);\r\n    }\r\n\r\n    send(\r\n        message: unknown\r\n    ): Promise<firebase.firestore.DocumentReference<firebase.firestore.DocumentData>> {\r\n\r\n        return Send(this, message);\r\n    }\r\n\r\n    startReceiving(\r\n    ): this {\r\n\r\n        StartReceiving(this);\r\n        return this;\r\n    }\r\n\r\n    stopReceiving(\r\n    ): this {\r\n\r\n        StopReceiving(this);\r\n        return this;\r\n    }\r\n\r\n    loadPreviousMessages(\r\n    ): Promise<IMessage[]> {\r\n\r\n        return LoadPreviousMessages(this);\r\n    }\r\n}", "import { Messages } from './Messages';\r\n\r\nexport { Messages };", "import * as firebase from 'firebase/app';\r\nimport { IBase } from '../utils/IBase';\r\nimport {\r\n    IBaseEventEmitter,\r\n    IConfig as IEventEmitterConfig\r\n} from '../../../utils/eventemitter/IBaseEventEmitter';\r\nimport { ItemList } from '../utils/itemlist';\r\n\r\nexport type UserInfoType = {\r\n    userID: string,\r\n    userName: string,\r\n    joinAt?: string\r\n};\r\n\r\nexport type EventNameMapType = {\r\n    join?: string,\r\n    leave?: string,\r\n    update?: string,\r\n    change?: string,\r\n    init?: string,\r\n    changename?: string\r\n};\r\n\r\nexport const DefaultEventNames: EventNameMapType = {\r\n    join: 'join',\r\n    leave: 'leave',\r\n    update: 'update',\r\n    change: 'change',\r\n    init: 'init',\r\n    changename: 'changename'\r\n};\r\n\r\nexport interface IConfig extends IEventEmitterConfig {\r\n    root?: string;\r\n\r\n    userID?: string | UserInfoType;\r\n    userName?: string;\r\n    maxUsers?: number;\r\n\r\n    eventNames?: EventNameMapType;\r\n};\r\n\r\nexport interface IOnlineUserList extends IBaseEventEmitter, IBase {\r\n    userInfo: UserInfoType;\r\n    userID: string;\r\n    userName: string;\r\n\r\n    userID2ItemID: Map<string, string>;\r\n    userList: ItemList<UserInfoType>;\r\n    maxUsers: number;\r\n    isInList: boolean;\r\n\r\n    eventNames: EventNameMapType;\r\n};", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IBaseEventEmitter,\r\n    IConfig as IEventEmitterConfig\r\n} from '../../../../utils/eventemitter/IBaseEventEmitter';\r\n\r\nexport enum UpdateMode {\r\n    once = 0,\r\n    child = 1,\r\n    all = 2\r\n};\r\n\r\nexport type UpdateModeString = 'once' | 'child' | 'all';\r\n\r\nexport type EventNameMapType = {\r\n    update?: string,\r\n    add?: string,\r\n    remove?: string,\r\n    change?: string\r\n};\r\n\r\nexport const DefaultEventNames: EventNameMapType = {\r\n    update: 'update',\r\n    add: 'add',\r\n    remove: 'remove',\r\n    change: 'change'\r\n};\r\n\r\nexport type ItemType = { [key: string]: any };\r\n\r\nexport type GetItemCallbackType = (snapshot: firebase.database.DataSnapshot) => ItemType;\r\n\r\nexport type UpdaterType = {\r\n    start: ((itemList: IItemList, query: firebase.database.Query) => void),\r\n    stop: ((itemList: IItemList) => void)\r\n};\r\n\r\n\r\nexport interface IConfig extends IEventEmitterConfig {\r\n\r\n    itemIDKey?: string;\r\n    mode?: UpdateMode | UpdateModeString;\r\n    getItemCallback?: GetItemCallbackType;\r\n    getItemCallbackScope?: unknown;\r\n    query?: firebase.database.Query;\r\n\r\n    eventNames?: EventNameMapType;\r\n};\r\n\r\nexport interface IItemList extends IBaseEventEmitter {\r\n\r\n    mode: UpdateMode;\r\n    updater: UpdaterType;\r\n    query: firebase.database.Query;\r\n    isUpdating: boolean;\r\n\r\n    keyItemID: string;\r\n    getItemCallback: GetItemCallbackType;\r\n    getItemCallbackScope: unknown;\r\n    items: ItemType[];\r\n    itemID2Index: Map<string, number>;\r\n\r\n    eventNames: EventNameMapType;\r\n};", "import {\r\n    IItemList,\r\n    ItemType\r\n} from './IItemList';\r\n\r\nexport function Clear(\r\n    itemList: IItemList\r\n): void {\r\n\r\n    itemList.items.length = 0;\r\n    itemList.itemID2Index.clear();\r\n};\r\n\r\nexport function GetItems(\r\n    itemList: IItemList\r\n): ItemType[] {\r\n\r\n    return itemList.items;\r\n};\r\n\r\nexport function HasItem(\r\n    itemList: IItemList,\r\n    itemID: string\r\n): boolean {\r\n\r\n    return itemList.itemID2Index.has(itemID);\r\n}\r\n\r\nexport function GetItemIndexFromItemID(\r\n    itemList: IItemList,\r\n    itemID: string\r\n): number {\r\n\r\n    if (itemID == null) {\r\n        return null;\r\n    }\r\n\r\n    return itemList.itemID2Index.get(itemID);\r\n};\r\n\r\nexport function GetItemFromItemID(\r\n    itemList: IItemList,\r\n    itemID: string\r\n): ItemType {\r\n\r\n    if (itemID == null) {\r\n        return null;\r\n    }\r\n    let index = GetItemIndexFromItemID(itemList, itemID);\r\n    if (index == null) {\r\n        return null;\r\n    }\r\n\r\n    return itemList.items[index];\r\n};\r\n\r\nexport function ForEach(\r\n    itemList: IItemList,\r\n    callback: ((value: ItemType, index: number, array: ItemType[]) => void),\r\n    scope?: unknown\r\n): void {\r\n\r\n    itemList.items.forEach(callback, scope);\r\n};\r\n\r\nexport function UpdateItemID2Index(\r\n    itemList: IItemList\r\n): void {\r\n\r\n    itemList.itemID2Index.clear();\r\n    let items = itemList.items;\r\n    for (var i = 0, cnt = items.length; i < cnt; i++) {\r\n        let itemID = items[i][itemList.keyItemID];\r\n        itemList.itemID2Index.set(itemID, i);\r\n    }\r\n};", "export function SpliceOne<T>(\r\n    array: T[],\r\n    index: number\r\n): T {\r\n\r\n    if (index >= array.length) {\r\n        return;\r\n    }\r\n\r\n    let len = array.length - 1;\r\n    let item = array[index];\r\n    for (let i = index; i < len; i++) {\r\n        array[i] = array[i + 1];\r\n    }\r\n    array.length = len;\r\n    return item;\r\n};\r\n", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IItemList,\r\n    ItemType\r\n} from '../IItemList';\r\nimport { UpdateItemID2Index, Clear } from '../ItemMethods';\r\nimport { SpliceOne } from '../../../../../utils/array/SpliceOne';\r\n\r\nexport function AddChildCallback(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot,\r\n    prevName: string\r\n) {\r\n\r\n    let item = AddItem.call(this, snapshot, prevName);\r\n    UpdateItemID2Index(this);\r\n\r\n    this.emit(this.eventNames.add, item);\r\n    this.emit(this.eventNames.update, this.items);\r\n}\r\n\r\nexport function ChangeChildCallback(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot,\r\n    prevName: string\r\n) {\r\n\r\n    let prevItem = RemoveItem.call(this, snapshot);\r\n    UpdateItemID2Index(this);\r\n    let newItem = AddItem.call(this, snapshot, prevName);\r\n    UpdateItemID2Index(this);\r\n\r\n    this.emit(this.eventNames.change, newItem, prevItem);\r\n    this.emit(this.eventNames.update, this.items);\r\n}\r\n\r\nexport function RemoveChildCallback(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot\r\n) {\r\n\r\n    let item = RemoveItem.call(this, snapshot);\r\n    UpdateItemID2Index(this);\r\n\r\n    this.emit(this.eventNames.remove, item);\r\n    this.emit(this.eventNames.update, this.items);\r\n}\r\n\r\nexport function GetAllChildrenCallback(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot\r\n) {\r\n\r\n    Clear(this);\r\n    snapshot.forEach((function (childSnapshot: firebase.database.DataSnapshot) {\r\n        AddItem.call(this, childSnapshot, null, true);\r\n    }).bind(this));\r\n    UpdateItemID2Index(this);\r\n\r\n    this.emit(this.eventNames.update, this.items);\r\n}\r\n\r\nexport function AddItem(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot,\r\n    prevName: string,\r\n    pushMode: boolean = false\r\n): ItemType {\r\n\r\n    let item: ItemType;\r\n    let callback = this.getItemCallback;\r\n    let scope = this.getItemCallbackScope;\r\n    if (scope) {\r\n        item = callback.call(scope, snapshot);\r\n    } else {\r\n        item = callback(snapshot);\r\n    }\r\n\r\n    if (pushMode) {\r\n        this.items.push(item);\r\n        return item;\r\n    }\r\n\r\n    if (prevName == null) {\r\n        this.items.unshift(item);\r\n    } else {\r\n        let i = this.itemID2Index.get(prevName);\r\n        if (i === this.items.length - 1) {\r\n            this.items.push(item);\r\n        } else {\r\n            this.items.splice(i + 1, 0, item);\r\n        }\r\n    }\r\n    return item;\r\n}\r\n\r\nexport function RemoveItem(\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot\r\n): ItemType {\r\n\r\n    let index = this.itemID2Index.get(snapshot.key);\r\n    let item: ItemType = SpliceOne(this.items, index);\r\n    return item;\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IItemList, UpdaterType } from '../IItemList';\r\nimport { GetAllChildrenCallback } from './Callbacks';\r\n\r\nexport const Updater: UpdaterType = {\r\n    start(\r\n        itemList: IItemList,\r\n        query: firebase.database.Query\r\n    ) {\r\n\r\n        itemList.isUpdating = false;\r\n        query.once('value', GetAllChildrenCallback, itemList);\r\n    },\r\n\r\n    stop(itemList: IItemList) {\r\n        // Do nothing\r\n    }\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IItemList, UpdaterType } from '../IItemList';\r\nimport { AddChildCallback, RemoveChildCallback, ChangeChildCallback } from './Callbacks';\r\n\r\nexport const Updater: UpdaterType = {\r\n    start(\r\n        itemList: IItemList,\r\n        query: firebase.database.Query\r\n    ) {\r\n\r\n        query.on('child_added', AddChildCallback, itemList);\r\n        query.on('child_removed', RemoveChildCallback, itemList);\r\n        query.on('child_moved', ChangeChildCallback, itemList);\r\n        query.on('child_changed', ChangeChildCallback, itemList);\r\n    },\r\n\r\n    stop(itemList: IItemList) {\r\n\r\n        itemList.query.off('child_added', AddChildCallback, itemList);\r\n        itemList.query.off('child_removed', RemoveChildCallback, itemList);\r\n        itemList.query.off('child_moved', ChangeChildCallback, itemList);\r\n        itemList.query.off('child_changed', ChangeChildCallback, itemList);\r\n    },\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IItemList, UpdaterType } from '../IItemList';\r\nimport { GetAllChildrenCallback } from './Callbacks';\r\n\r\nexport const Updater: UpdaterType = {\r\n    start(\r\n        itemList: IItemList,\r\n        query: firebase.database.Query\r\n    ) {\r\n\r\n        query.on('value', GetAllChildrenCallback, itemList);\r\n    },\r\n\r\n    stop(itemList: IItemList) {\r\n\r\n        itemList.query.off('value', GetAllChildrenCallback, itemList);\r\n    }\r\n}", "import { Updater as UpdateOnce } from './UpdateOnce';\r\nimport { Updater as UpdateChild } from './UpdateChild';\r\nimport { Updater as UpdateAll } from './UpdateAll';\r\nimport { UpdateMode, UpdaterType } from '../IItemList';\r\n\r\nexport const Updaters: { [mode: number]: UpdaterType } = {};\r\nUpdaters[UpdateMode.all] = UpdateAll;\r\nUpdaters[UpdateMode.child] = UpdateChild;\r\nUpdaters[UpdateMode.once] = UpdateOnce;", "import * as firebase from 'firebase/app';\r\nimport { BaseEventEmitter } from '../../../../utils/eventemitter/BaseEventEmitter';\r\nimport {\r\n    IItemList, IConfig,\r\n    UpdateMode, UpdateModeString, UpdaterType, GetItemCallbackType, ItemType,\r\n    EventNameMapType, DefaultEventNames\r\n} from './IItemList';\r\nimport { Updaters } from './updaters';\r\nimport {\r\n    Clear, GetItems, HasItem,\r\n    GetItemIndexFromItemID, GetItemFromItemID,\r\n    ForEach, UpdateItemID2Index\r\n} from './ItemMethods';\r\n\r\n\r\nexport class ItemList<T> extends BaseEventEmitter implements IItemList {\r\n    mode: UpdateMode;\r\n    updater: UpdaterType;\r\n    query: firebase.database.Query;\r\n    isUpdating: boolean;\r\n\r\n    keyItemID: string;\r\n    getItemCallback: GetItemCallbackType;\r\n    getItemCallbackScope: unknown;\r\n    items: T[];\r\n    itemID2Index: Map<string, number>;\r\n\r\n    eventNames: EventNameMapType;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        itemIDKey = '__itemID__',\r\n        mode = UpdateMode.child,\r\n        getItemCallback = DefaultGetItemCallback,\r\n        getItemCallbackScope,\r\n        query,\r\n        eventNames = DefaultEventNames\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n        this.eventNames = eventNames;\r\n\r\n        this.isUpdating = false;\r\n        this.items = [];\r\n        this.itemID2Index = new Map();\r\n        this.setItemIDKey(itemIDKey);\r\n        this.setMode(mode);\r\n\r\n        if (getItemCallbackScope === undefined) {\r\n            getItemCallbackScope = this;\r\n        }\r\n        this.setGetitemCallback(getItemCallback, getItemCallbackScope);\r\n        this.setQuery(query);\r\n    }\r\n\r\n    destroy() {\r\n        this\r\n            .stopUpdate()\r\n            .clear();\r\n    }\r\n\r\n    setItemIDKey(\r\n        key: string\r\n    ): this {\r\n\r\n        this.keyItemID = key;\r\n        return this;\r\n    }\r\n\r\n    setMode(\r\n        mode: UpdateMode | UpdateModeString\r\n    ): this {\r\n\r\n        if (typeof (mode) === 'string') {\r\n            mode = UpdateMode[mode];\r\n        }\r\n\r\n        this.mode = mode;\r\n        this.updater = Updaters[mode];\r\n        return this;\r\n    }\r\n\r\n    setGetitemCallback(\r\n        callback: GetItemCallbackType,\r\n        scope: unknown\r\n    ): this {\r\n\r\n        this.getItemCallback = callback;\r\n        this.getItemCallbackScope = scope;\r\n        return this;\r\n    }\r\n\r\n    setQuery(\r\n        query: firebase.database.Query\r\n    ): this {\r\n\r\n        this.query = query;\r\n        return this;\r\n    }\r\n\r\n    startUpdate(\r\n        query: firebase.database.Query\r\n    ): this {\r\n\r\n        if (query) {\r\n            this.setQuery(query);\r\n        } else if (this.query) {\r\n            query = this.query;\r\n        } else { // !query && !this.query\r\n            return this;\r\n        }\r\n\r\n        this\r\n            .stopUpdate()\r\n            .clear();\r\n\r\n        this.isUpdating = true;\r\n        this.updater.start(this, query);\r\n        return this;\r\n    }\r\n\r\n    stopUpdate(): this {\r\n\r\n        if ((!this.query) || (!this.isUpdating)) {\r\n            return this;\r\n        }\r\n\r\n        this.isUpdating = false;\r\n        this.updater.stop(this);\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        Clear(this);\r\n        return this;\r\n    }\r\n\r\n    getItems(): T[] {\r\n\r\n        return GetItems(this) as T[];\r\n    }\r\n\r\n    hasItem(itemID: string): boolean {\r\n\r\n        return HasItem(this, itemID);\r\n    }\r\n\r\n    getItemIndexFromItemID(\r\n        itemID: string\r\n    ): number {\r\n\r\n        return GetItemIndexFromItemID(this, itemID);\r\n    }\r\n\r\n    getItemFromItemID(\r\n        itemID: string\r\n    ): T {\r\n\r\n        return GetItemFromItemID(this, itemID) as T;\r\n    }\r\n\r\n    forEach(\r\n        callback: ((value: T, index: number, array: T[]) => void),\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        ForEach(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    updateItemID2Index(): this {\r\n\r\n        UpdateItemID2Index(this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst DefaultGetItemCallback: GetItemCallbackType = function (\r\n    this: IItemList,\r\n    snapshot: firebase.database.DataSnapshot\r\n): ItemType {\r\n\r\n    let item: ItemType = snapshot.val();\r\n    item[this.keyItemID] = snapshot.key;\r\n    return item;\r\n}", "import { ItemList } from './ItemList';\r\n\r\nexport { ItemList };", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IOnlineUserList,\r\n    UserInfoType\r\n} from './IOnlineUserList';\r\n\r\nexport function Contains(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID\r\n) {\r\n\r\n    return onlineUserList.userID2ItemID.has(userID);\r\n}\r\n\r\nexport function GetUserRef(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID\r\n): firebase.database.Reference {\r\n\r\n    if (!Contains(onlineUserList, userID)) {\r\n        return null;\r\n    }\r\n    let itemID = onlineUserList.userID2ItemID.get(userID);\r\n    return onlineUserList.rootRef.child(itemID);\r\n}\r\n\r\nexport function GetUser(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID\r\n): UserInfoType {\r\n\r\n    if (!Contains(onlineUserList, userID)) {\r\n        return null;\r\n    }\r\n    let itemID = onlineUserList.userID2ItemID.get(userID);\r\n    return onlineUserList.userList.getItemFromItemID(itemID);\r\n}\r\n\r\nexport function GetUsers(\r\n    onlineUserList: IOnlineUserList\r\n): UserInfoType[] {\r\n\r\n    return onlineUserList.userList.getItems();\r\n}\r\n\r\nexport function Clear(\r\n    onlineUserList: IOnlineUserList\r\n): void {\r\n\r\n    onlineUserList.userList.clear();\r\n}\r\n\r\nexport function ForEach(\r\n    onlineUserList: IOnlineUserList,\r\n    callback: ((value: UserInfoType, index: number, array: UserInfoType[]) => void),\r\n    scope?: unknown\r\n): void {\r\n\r\n    onlineUserList.userList.forEach(callback, scope);\r\n}\r\n\r\nexport function IsFirstUser(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID\r\n): boolean {\r\n\r\n    let user = onlineUserList.userList.getItems()[0];\r\n    return (user && (user.userID === userID));\r\n}\r\n\r\nexport function IsFull(\r\n    onlineUserList: IOnlineUserList\r\n): boolean {\r\n\r\n    if (onlineUserList.maxUsers === 0) {\r\n        return false;\r\n    }\r\n    return (onlineUserList.userList.getItems().length >= onlineUserList.maxUsers);\r\n}", "export function Delay(\r\n    s: number = 0,\r\n    result?: any)\r\n    : Promise<any> {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            resolve(result)\r\n        }, s);\r\n    });\r\n};", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IOnlineUserList,\r\n    UserInfoType\r\n} from './IOnlineUserList';\r\nimport { Contains } from './UserMethods';\r\nimport { Delay } from '../../../utils/promise/Delay';\r\n\r\n\r\nexport function Join(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID,\r\n    userName: string = onlineUserList.userName\r\n): Promise<any> {\r\n\r\n    if (Contains(onlineUserList, userID)) {\r\n        return Promise.resolve();  // Promise\r\n    }\r\n\r\n    // Prepare data\r\n    let d: UserInfoType = {\r\n        userID: userID,\r\n        userName: userName\r\n    };\r\n    let maxUsers = onlineUserList.maxUsers;\r\n    let rootRef = onlineUserList.database.ref(onlineUserList.rootPath);\r\n    let userRef = rootRef.push();\r\n\r\n    return userRef.onDisconnect().remove()\r\n        .then(function () {\r\n            return userRef.set(d)\r\n        })\r\n        .then(function () {\r\n            return Delay(0);\r\n        })\r\n        .then(function () {\r\n            // No user count limitation\r\n            if (maxUsers === 0) {\r\n                onlineUserList.isInList = true;\r\n                return Promise.resolve();\r\n            }\r\n\r\n            // Has user count limitation\r\n            return rootRef.limitToFirst(maxUsers).once('value')\r\n                .then(function (snapshot: firebase.database.DataSnapshot) {\r\n\r\n                    if (IsInSnapshot(snapshot, userID)) {\r\n                        onlineUserList.isInList = true;\r\n                        return Promise.resolve();\r\n                    }\r\n\r\n                    onlineUserList.isInList = false;\r\n                    // UserID is not in firstN list\r\n                    return userRef.remove()\r\n                        .then(function () {\r\n                            return userRef.onDisconnect().cancel()\r\n                        })\r\n                        .then(function () {\r\n                            return Promise.reject()\r\n                        })\r\n                });\r\n        })\r\n};\r\n\r\nfunction IsInSnapshot(\r\n    snapshot: firebase.database.DataSnapshot,\r\n    userID: string\r\n): boolean {\r\n\r\n    let result = false;\r\n    snapshot.forEach(function (childSnapshot) {\r\n        let user = childSnapshot.val() as UserInfoType;\r\n        if (user.userID === userID) {\r\n            result = true;\r\n            return true;\r\n        }\r\n    });\r\n    return result;\r\n}", "import { IOnlineUserList } from './IOnlineUserList';\r\nimport { Contains } from './UserMethods';\r\n\r\nexport function Leave(\r\n    onlineUserList: IOnlineUserList,\r\n    userID: string = onlineUserList.userID\r\n): Promise<any> {\r\n\r\n    if (!Contains(onlineUserList, userID)) {\r\n        return Promise.resolve();  // Promise\r\n    }\r\n\r\n    let itemID = onlineUserList.userID2ItemID.get(userID);\r\n    let userRef = onlineUserList.database.ref(onlineUserList.rootPath).child(itemID);\r\n    return userRef.remove();  // Promise\r\n}", "import * as firebase from 'firebase/app';\r\nimport { IOnlineUserList } from './IOnlineUserList';\r\nimport { GetUserRef } from './UserMethods';\r\n\r\nexport function ChangeUserName(\r\n    onlineUserList: IOnlineUserList,\r\n    userName: string\r\n): Promise<any> {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        let userRef = GetUserRef(onlineUserList);\r\n        if (userRef) { // Find userRef\r\n            return resolve(userRef)\r\n        } else { // Query userRef\r\n            let query = onlineUserList.rootRef.orderByChild('userID').equalTo(onlineUserList.userID);\r\n            query.once('child_added')\r\n                .then(function (snapshot) {\r\n                    return resolve(snapshot.ref)\r\n                })\r\n        }\r\n    })\r\n        .then(function (userRef: firebase.database.Reference) { // Set userName\r\n            return userRef.child('userName').set(userName)\r\n        })\r\n        .then(function () {\r\n            onlineUserList.userName = userName;\r\n            return Promise.resolve();\r\n        })\r\n}", "import * as firebase from 'firebase/app';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport {\r\n    IOnlineUserList, IConfig,\r\n    UserInfoType,\r\n    EventNameMapType, DefaultEventNames\r\n} from './IOnlineUserList';\r\nimport { ItemList } from '../utils/itemlist';\r\nimport { Join } from './Join';\r\nimport { Leave } from './Leave';\r\nimport { ChangeUserName } from './ChangeUserName';\r\nimport {\r\n    Contains, GetUserRef, GetUser, GetUsers,\r\n    Clear, ForEach, IsFirstUser, IsFull\r\n} from './UserMethods';\r\n\r\n\r\nexport class OnlineUserList extends BaseEventEmitter implements IOnlineUserList {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    userInfo: UserInfoType;\r\n\r\n    userID2ItemID: Map<string, string>;\r\n    userList: ItemList<UserInfoType>;\r\n    maxUsers: number;\r\n    isInList: boolean;\r\n\r\n    eventNames: EventNameMapType;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        userID = '',\r\n        userName = '',\r\n        maxUsers = 0,\r\n        eventNames = DefaultEventNames\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n        this.eventNames = eventNames;\r\n\r\n        this.database = firebase.database();\r\n        this.setRootPath(root);\r\n\r\n        this.userInfo = { userID: '', userName: '' };\r\n        this.setUser(userID, userName);\r\n        this.setMaxUsers(maxUsers);\r\n        this.userList = new ItemList({\r\n            eventEmitter: this.eventEmitter, // Use the same event-emitter\r\n            itemIDKey: 'joinAt',\r\n            eventNames: {\r\n                add: eventNames.join,\r\n                remove: eventNames.leave,\r\n                update: eventNames.update,\r\n                change: eventNames.change\r\n            }\r\n        });\r\n\r\n        this.isInList = false;\r\n        this.userID2ItemID = new Map();\r\n        this.userList\r\n            .on(this.eventNames.join, function (\r\n                this: IOnlineUserList,\r\n                user: UserInfoType\r\n            ) {\r\n\r\n                this.userID2ItemID.set(user.userID, user.joinAt);\r\n                if (user.userID === this.userInfo.userID) {\r\n                    this.emit(this.eventNames.init, GetUsers(this));\r\n                }\r\n            }, this)\r\n            .on(this.eventNames.leave, function (\r\n                this: IOnlineUserList,\r\n                user: UserInfoType\r\n            ) {\r\n\r\n                this.userID2ItemID.delete(user.userID);\r\n                if (user.userID === this.userID) {\r\n                    this.isInList = false;\r\n                }\r\n            }, this)\r\n            .on(this.eventNames.change, function (\r\n                this: IOnlineUserList,\r\n                currUserInfo: UserInfoType,\r\n                prevUserInfo: UserInfoType) {\r\n\r\n                let userID = currUserInfo.userID,\r\n                    userName = currUserInfo.userName,\r\n                    prevUserName = prevUserInfo.userName;\r\n                if (userName !== prevUserName) {\r\n                    this.emit(this.eventNames.changename, userID, userName, prevUserName);\r\n                }\r\n            }, this)\r\n    }\r\n\r\n    destroy() {\r\n        this\r\n            .stopUpdate()\r\n            .destroyEventEmitter()\r\n            .leave();\r\n\r\n        this.userList.destroy();\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath?: string\r\n    ): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = (rootPath !== '') ? this.database.ref(this.rootPath) : undefined;\r\n        return this;\r\n    }\r\n\r\n    setUser(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setMaxUsers(\r\n        maxUsers: number\r\n    ): this {\r\n\r\n        this.maxUsers = maxUsers;\r\n        return this;\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        Clear(this);\r\n        return this;\r\n    }\r\n\r\n    forEach(\r\n        callback: ((value: UserInfoType, index: number, array: UserInfoType[]) => void),\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        ForEach(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    isFull(): boolean {\r\n\r\n        return IsFull(this);\r\n    }\r\n\r\n    isFirstUser(\r\n        userID: string = this.userID\r\n    ): boolean {\r\n\r\n        return IsFirstUser(this, userID);\r\n    }\r\n\r\n    getUser(\r\n        userID: string = this.userID\r\n    ): UserInfoType {\r\n\r\n        return GetUser(this, userID);\r\n    }\r\n\r\n    getUsers(): UserInfoType[] {\r\n\r\n        return GetUsers(this);\r\n    }\r\n\r\n    getUserRef(\r\n        userID: string = this.userID\r\n    ): firebase.database.Reference {\r\n\r\n        return GetUserRef(this, userID);\r\n    }\r\n\r\n    contains(\r\n        userID: string = this.userID\r\n    ): boolean {\r\n\r\n        return Contains(this, userID);\r\n    }\r\n\r\n    join(\r\n        userID: string = this.userID,\r\n        userName: string = this.userName\r\n    ): Promise<any> {\r\n\r\n        return Join(this, userID, userName);\r\n    }\r\n\r\n    leave(\r\n        userID: string = this.userID\r\n    ): Promise<any> {\r\n\r\n        return Leave(this, userID);\r\n    }\r\n\r\n    changeUserName(\r\n        userName: string\r\n    ): Promise<any> {\r\n\r\n        return ChangeUserName(this, userName);\r\n    }\r\n\r\n    startUpdate(): this {\r\n\r\n        let query = this.rootRef as firebase.database.Query;\r\n        if (this.maxUsers > 0) {\r\n            query = query.limitToFirst(this.maxUsers);\r\n        }\r\n        this.userList.startUpdate(query);\r\n        return this;\r\n    }\r\n\r\n    stopUpdate(): this {\r\n\r\n        this.userList.stopUpdate();\r\n        return this;\r\n    }\r\n}", "import { OnlineUserList } from './OnlineUserList';\r\n\r\nexport { OnlineUserList };", "import {\r\n    IRoom,\r\n    IConfig\r\n} from './IRoom';\r\nimport { OnlineUserList } from '../onlineuserlist';\r\n\r\nexport function CreateUserList(\r\n    room: IRoom\r\n): OnlineUserList {\r\n\r\n    const userListInstance = new OnlineUserList({\r\n        eventEmitter: room.eventEmitter,\r\n        eventNames: {\r\n            join: 'userlist.join',\r\n            leave: 'userlist.leave',\r\n            update: 'userlist.update',\r\n            change: 'userlist.change',\r\n            init: 'userlist.init',\r\n            changename: 'userlist.changename'\r\n        },\r\n\r\n        userID: room.userInfo\r\n    });\r\n\r\n    userListInstance\r\n        .on('userlist.leave', function (user) {\r\n            if (user.userID === room.userID) {\r\n                OnLeftRoom(room);  // Current user is left or kicked\r\n            }\r\n        })\r\n\r\n    room\r\n        .on('room.join', function () {\r\n            userListInstance.startUpdate()\r\n        })\r\n        .on('room.leave', function () {\r\n            userListInstance.stopUpdate().clear()\r\n        })\r\n\r\n    return userListInstance;\r\n}\r\n\r\nfunction OnLeftRoom(\r\n    room: IRoom\r\n): void {\r\n\r\n    room.emit('room.leave');\r\n\r\n    // Clear room info later\r\n    setTimeout(function () {\r\n        room.roomID = undefined;\r\n        room.roomName = undefined;\r\n        room.doorState = undefined;\r\n        room.leftRoomFlag = false;\r\n    }, 0);\r\n}", "import {\r\n    IRoom,\r\n    RoomFilterDataType\r\n} from './IRoom';\r\nimport { ItemList } from '../utils/itemlist/ItemList';\r\n\r\nexport function CreateRoomList(\r\n    room: IRoom\r\n): ItemList<RoomFilterDataType> {\r\n\r\n    const roomListInstance = new ItemList<RoomFilterDataType>({\r\n        eventEmitter: room.eventEmitter,\r\n        itemIDKey: 'roomID',\r\n        eventNames: {\r\n            update: 'roomlist.update',\r\n            add: 'roomlist.add',\r\n            remove: 'roomlist.remove',\r\n            change: 'roomlist.change'\r\n        },\r\n        mode: 'once'\r\n    })\r\n\r\n    return roomListInstance;\r\n}", "export function GetRoomState(filterString: string): string {\r\n\r\n    return filterString.split('|')[0];\r\n}\r\n\r\nexport function GetRoomType(filterString: string): string {\r\n\r\n    return filterString.split('|')[1];\r\n}\r\n\r\nexport function GetFilterString(\r\n    roomState: string,\r\n    roomType: string = ''\r\n): string {\r\n\r\n    return `${roomState}|${roomType}`;\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IRoom,\r\n    RoomStateType\r\n} from './IRoom';\r\nimport { GetFilterString } from './RoomFilterMethods';\r\n\r\nexport function GetRootRef(\r\n    room: IRoom,\r\n    childKey?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = room.rootRef;\r\n    if (childKey) {\r\n        ref = ref.child(childKey);\r\n    }\r\n    return ref;\r\n};\r\n\r\nexport function GetRoomRef(\r\n    room: IRoom,\r\n    roomID?: string,\r\n    childKey?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = GetRootRef(room, 'rooms');\r\n    if (roomID !== undefined) {\r\n        ref = ref.child(roomID);\r\n        if (childKey !== undefined) {\r\n            ref = ref.child(childKey);\r\n        }\r\n    }\r\n    return ref;\r\n}\r\n\r\nexport function GetRoomAliveRef(\r\n    room: IRoom,\r\n    roomID: string\r\n): firebase.database.Reference {\r\n\r\n    return GetRoomRef(room, roomID, 'alive');\r\n}\r\n\r\nexport function GetUserListRef(\r\n    room: IRoom,\r\n    roomID: string\r\n): firebase.database.Reference {\r\n\r\n    return GetRoomRef(room, roomID, 'users');\r\n};\r\n\r\nexport function GetRoomFilterRef(\r\n    room: IRoom,\r\n    roomID?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = GetRootRef(room, 'room-filters');\r\n    if (roomID !== undefined) {\r\n        ref = ref.child(roomID);\r\n    }\r\n    return ref;\r\n};\r\n\r\nexport function GetRoomMetadataRef(\r\n    room: IRoom,\r\n    roomID: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = GetRootRef(room, 'room-metadata');\r\n    if (roomID !== undefined) {\r\n        ref = ref.child(roomID);\r\n    }\r\n    return ref;\r\n};\r\n\r\n// TODO: ??\r\nexport function GetUserDataRef(\r\n    room: IRoom,\r\n    userID?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = GetRootRef(room, 'user-data');\r\n    if (userID !== undefined) {\r\n        ref = ref.child(userID);\r\n    }\r\n    return ref;\r\n};\r\n\r\nexport function GetRoomDataPath(\r\n    room: IRoom,\r\n    roomID: string,\r\n    childKey?: string\r\n): string {\r\n\r\n    let path = `${room.rootPath}/rooms/${roomID}`;\r\n    if (childKey) {\r\n        path += `/${childKey}`;\r\n    }\r\n    return path;\r\n};\r\n\r\nexport function GetUserListPath(\r\n    room: IRoom,\r\n    roomID: string\r\n): string {\r\n\r\n    return GetRoomDataPath(room, roomID, 'users');\r\n};\r\n\r\nexport function GetItemTablePath(\r\n    room: IRoom,\r\n    roomID: string,\r\n    key?: string\r\n): string {\r\n\r\n    let path = GetRoomDataPath(room, roomID, 'tables');\r\n    if (key) {\r\n        path += `/${key}`;\r\n    }\r\n    return path;\r\n};\r\n\r\nexport function GetRoomListQuery(\r\n    room: IRoom,\r\n    roomType?: string,\r\n    roomState: RoomStateType = 'open'\r\n): firebase.database.Query {\r\n\r\n    let query: firebase.database.Query = GetRoomFilterRef(room);\r\n    query = query.orderByChild('filter');\r\n    if (roomType === undefined) {\r\n        query = query.startAt(roomState).endAt(`${roomState}~`);\r\n    } else {\r\n        query = query.equalTo(GetFilterString(roomState, roomType));\r\n    }\r\n    return query;\r\n};", "import {\r\n    IRoom,\r\n    BroadcastConfig, RoomInfoType\r\n} from './IRoom';\r\nimport { Broadcast } from '../broadcast';\r\nimport { GetRoomDataPath } from './GetRefMethods';\r\n\r\nexport function CreateBroadcast(\r\n    room: IRoom,\r\n    broadcast: boolean | BroadcastConfig\r\n): Broadcast {\r\n\r\n    if (!broadcast) {\r\n        return null;\r\n    } else if (broadcast === true) {\r\n        broadcast = {\r\n            history: false\r\n        }\r\n    }\r\n\r\n    const broadcastInstance = new Broadcast({\r\n        eventEmitter: room.eventEmitter,\r\n        eventNames: {\r\n            receive: 'broadcast.receive'\r\n        },\r\n\r\n        receiverID: 'boradcast',\r\n        senderID: room.userInfo,\r\n        history: broadcast.history\r\n    });\r\n\r\n    room\r\n        .on('room.join', function (roomInfo: RoomInfoType) {\r\n\r\n            broadcastInstance\r\n                .setRootPath(GetRoomDataPath(room, roomInfo.roomID))\r\n                .startReceiving();\r\n        })\r\n        .on('room.leave', function () {\r\n\r\n            broadcastInstance\r\n                .stopReceiving()\r\n        })\r\n        .on('userlist.changename', function (userID: string, userName: string) {\r\n\r\n            broadcastInstance\r\n                .changeUserName(userID, userName);\r\n        })\r\n\r\n    return broadcastInstance;\r\n}", "import {\r\n    IRoom,\r\n    ItemTableConfig, RoomInfoType\r\n} from './IRoom';\r\nimport { ItemTable } from '../itemtable';\r\nimport { TableType } from '../itemtable/Types';\r\nimport { GetItemTablePath } from './GetRefMethods';\r\n\r\nexport function CreateTables(\r\n    room: IRoom,\r\n    tables: ItemTableConfig[] | false\r\n): Map<string, ItemTable> {\r\n\r\n    const tableInstances: Map<string, ItemTable> = new Map();\r\n    if (!tables) {\r\n        return tableInstances;\r\n    }\r\n\r\n    tables.forEach((tableConfig) => {\r\n        tableInstances.set(tableConfig.key, CreateTable(room, tableConfig));\r\n    })\r\n\r\n    room\r\n        .on('room.join', function (roomInfo: RoomInfoType) {\r\n\r\n            for (const [key, tableInstance] of tableInstances) {\r\n                tableInstance\r\n                    .setRootPath(GetItemTablePath(room, roomInfo.roomID, key))\r\n                    .startUpdate();\r\n            }\r\n        })\r\n        .on('room.leave', function () {\r\n\r\n            for (const [key, tableInstance] of tableInstances) {\r\n                tableInstance\r\n                    .stopUpdate()\r\n                    .clear();\r\n            }\r\n        })\r\n\r\n    return tableInstances;\r\n}\r\n\r\nfunction CreateTable(\r\n    room: IRoom,\r\n    {\r\n        key,\r\n        type = TableType['1d']\r\n    }: ItemTableConfig\r\n): ItemTable {\r\n\r\n    const table = new ItemTable({\r\n        eventEmitter: room.eventEmitter,\r\n\r\n        type: type,\r\n        eventNames: {\r\n            init: `tables.${key}.init`,\r\n            update: `tables.${key}.update`,\r\n            addkey0: `tables.${key}.addkey0`,\r\n            removekey0: `tables.${key}.removekey0`,\r\n            changekey0: `tables.${key}.changekey0`,\r\n            addkey1: `tables.${key}.addkey1`,\r\n            removekey1: `tables.${key}.removekey1`,\r\n            changekey1: `tables.${key}.changekey1`,\r\n            addkey2: `tables.${key}.addkey2`,\r\n            removekey2: `tables.${key}.removekey2`,\r\n            changekey2: `tables.${key}.changekey2`\r\n        }\r\n    });\r\n\r\n    return table;\r\n}", "import {\r\n    IRoom,\r\n    RoomInfoType\r\n} from './IRoom';\r\n\r\nexport function GetRoomInfo(\r\n    room: IRoom,\r\n    roomID: string = room.roomID,\r\n    roomName: string = room.roomName\r\n): RoomInfoType {\r\n\r\n    return {\r\n        roomID: roomID,\r\n        roomName: roomName\r\n    };\r\n}", "import {\r\n    IRoom,\r\n    UserInfoType\r\n} from './IRoom';\r\n\r\nexport function IsInRoom(\r\n    room: IRoom,\r\n    roomID?: string\r\n): boolean {\r\n\r\n    return (roomID === undefined) ? (room.roomID !== undefined) : (room.roomID === roomID);\r\n}\r\n\r\nexport function IsFull(\r\n    room: IRoom\r\n): boolean {\r\n\r\n    return room.userList.isFull();\r\n}\r\n\r\nexport function IsFirstUser(\r\n    room: IRoom,\r\n    userID: string = room.userID\r\n): boolean {\r\n\r\n    return room.userList.isFirstUser(userID);\r\n}\r\n\r\nexport function GetUsers(\r\n    room: IRoom\r\n): UserInfoType[] {\r\n\r\n    return room.userList.getUsers();\r\n}", "import { IRoom } from './IRoom';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\n\r\nexport function OnJoinRoom(\r\n    room: IRoom,\r\n    roomID: string,\r\n    roomName: string,\r\n    roomType: string\r\n): void {\r\n\r\n    room.roomID = roomID;\r\n    room.roomName = roomName;\r\n    room.roomType = roomType;\r\n\r\n    room.emit('room.join', GetRoomInfo(room));\r\n}", "import {\r\n    IRoom,\r\n    ICreateRoomConfig, RoomFilterDataType, RoomInfoType\r\n} from './IRoom.js';\r\nimport {\r\n    GetRootRef, GetRoomRef, GetRoomAliveRef, GetRoomFilterRef, GetRoomMetadataRef,\r\n    GetUserListPath\r\n} from './GetRefMethods';\r\nimport { GetFilterString } from './RoomFilterMethods';\r\nimport { OnJoinRoom } from './OnJoinRoom';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\n\r\nexport function CreateRoom(\r\n    room: IRoom,\r\n    config: ICreateRoomConfig = {}\r\n): Promise<RoomInfoType> {\r\n\r\n    if (config.roomID == null) {\r\n        config.roomID = GetRoomRef(room).push().key;\r\n    }\r\n\r\n    return RegisterRoom(room, config.roomID)\r\n        .then(function () { // Create room\r\n            return _CreateRoom(room, config);\r\n        });\r\n}\r\n\r\nfunction RegisterRoom(\r\n    room: IRoom,\r\n    roomID: string\r\n): Promise<any> {\r\n\r\n    return GetRoomAliveRef(room, roomID)\r\n        .transaction(function (value) {\r\n            if (value === null) {  // Room is not existed, register success\r\n                return true;\r\n            }\r\n            else {  // Room is existed, register fail\r\n                return;    // Abort the transaction\r\n            }\r\n        });\r\n}\r\n\r\nfunction _CreateRoom(\r\n    room: IRoom,\r\n    {\r\n        roomID,\r\n        roomName = '',\r\n        roomType = '',\r\n        maxUsers = 0,\r\n        presisted = false,\r\n        door = 'open',\r\n        join = true,\r\n        filterData\r\n    }: ICreateRoomConfig\r\n): Promise<RoomInfoType> {\r\n\r\n    let roomRef = GetRoomRef(room, roomID);\r\n    let roomFilterRef = GetRoomFilterRef(room, roomID);\r\n    let roomMetadataRef = GetRoomMetadataRef(room, roomID);\r\n\r\n    // Remove room when creater is offline\r\n    room.isRemoveRoomWhenLeft = !presisted;\r\n    if (room.isRemoveRoomWhenLeft) {\r\n        roomRef.onDisconnect().remove();\r\n        roomFilterRef.onDisconnect().remove();\r\n        roomMetadataRef.onDisconnect().remove();\r\n    }\r\n\r\n    const filter = GetFilterString(door, roomType);\r\n\r\n    const d = {};\r\n\r\n    // Room-filter\r\n    const roomFilterData: RoomFilterDataType = {\r\n        filter: filter,\r\n        name: roomName\r\n    };\r\n    if (filterData) {\r\n        roomFilterData.data = filterData;\r\n    }\r\n    d[`room-filters/${roomID}`] = roomFilterData;\r\n\r\n    // Room-metadata\r\n    const roomMetadata = {\r\n        name: roomName,\r\n        filter: filter,\r\n        maxUsers: maxUsers,\r\n        moderators: {}\r\n    };\r\n    roomMetadata.moderators[room.userID] = room.userName;\r\n    d[`room-metadata/${roomID}`] = roomMetadata;\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        if (join) {\r\n            const promise = room.userList\r\n                .setRootPath(GetUserListPath(room, roomID))\r\n                .setMaxUsers(0) // Don't test max user count\r\n                .join(); // Promise\r\n            room.userList\r\n                .setMaxUsers(maxUsers);\r\n            return promise.then(resolve, reject);\r\n        } else {\r\n            return resolve();\r\n        }\r\n    })\r\n        .then(function () {\r\n            return GetRootRef(room).update(d)\r\n        })\r\n        .then(function () {\r\n            room.isRoomCreator = true;\r\n            if (join) {\r\n                OnJoinRoom(room, roomID, roomName, roomType);\r\n            }\r\n            return Promise.resolve(GetRoomInfo(room));\r\n        })\r\n}", "import {\r\n    IRoom,\r\n    ICreateRoomConfig, ICreateRandomRoomCongfig,\r\n    RoomInfoType\r\n} from './IRoom';\r\nimport { GetRandomWord } from '../../../utils/string/GetRandomWord';\r\nimport { CreateRoom } from './CreateRoom';\r\n\r\nexport function CreateRandomRoom(\r\n    room: IRoom,\r\n    {\r\n        digits = 10,\r\n        candidates = '0123456789',\r\n        retry = 1000\r\n    }: ICreateRandomRoomCongfig\r\n): Promise<RoomInfoType> {\r\n\r\n    let config: ICreateRoomConfig = arguments[1];\r\n    return TryCreateRandomRoom(room, digits, candidates, retry, config);\r\n}\r\n\r\nfunction TryCreateRandomRoom(\r\n    room: IRoom,\r\n    digits: number,\r\n    candidates: string,\r\n    retry: number,\r\n    config: ICreateRoomConfig\r\n) {\r\n\r\n    config.roomID = GetRandomWord(digits, digits, candidates);\r\n    if (retry <= 0) {\r\n        return Promise.reject(config);\r\n    }\r\n    retry--;\r\n    return CreateRoom(room, config)\r\n        .catch(function () {\r\n            return TryCreateRandomRoom(room, digits, candidates, retry, config);\r\n        })\r\n}", "import { IRoom, RoomInfoType } from './IRoom';\r\nimport { GetRootRef } from './GetRefMethods';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\n\r\nexport function RemoveRoom(\r\n    room: IRoom,\r\n    roomID: string = room.roomID\r\n): Promise<RoomInfoType> {\r\n\r\n    const d = {};\r\n    d[`room-filter/${roomID}`] = null;\r\n    d[`room-metadata/${roomID}`] = null;\r\n    d[`rooms/${roomID}`] = null;\r\n\r\n    const prevRoomInfo = GetRoomInfo(room);\r\n    return GetRootRef(room).update(d)\r\n        .then(function () {\r\n            return Promise.resolve(prevRoomInfo);\r\n        })\r\n}", "import {\r\n    IRoom,\r\n    RoomInfoType\r\n} from './IRoom';\r\nimport { IsInRoom } from './RoomMethods';\r\nimport { RemoveRoom } from './RemoveRoom';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\n\r\nexport function LeaveRoom(\r\n    room: IRoom\r\n): Promise<RoomInfoType> {\r\n\r\n    if (!IsInRoom(room)) {\r\n        return Promise.resolve(GetRoomInfo(room));\r\n    }\r\n\r\n    // 'userlist.leave' event -> 'room.leave' event -> then\r\n    room.leftRoomFlag = true;\r\n    if (room.isRemoveRoomWhenLeft) {\r\n        // Remove room, include user list\r\n        return RemoveRoom(room)\r\n    } else {\r\n        const prevRoomInfo = GetRoomInfo(room);\r\n        // Leave user list only\r\n        return room.userList.leave()\r\n            .then(function () {\r\n                return Promise.resolve(prevRoomInfo)\r\n            })\r\n    }\r\n}", "import {\r\n    IRoom,\r\n    IJoinRoomConfig, RoomMetadataType, RoomInfoType\r\n} from './IRoom';\r\nimport { GetRoomMetadataRef, GetUserListPath } from './GetRefMethods';\r\nimport { GetRoomType, GetRoomState } from './RoomFilterMethods';\r\nimport { LeaveRoom } from './LeaveRoom'\r\nimport { OnJoinRoom } from './OnJoinRoom';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\n\r\nexport function JoinRoom(\r\n    room: IRoom,\r\n    {\r\n        leftThenJoin = true,\r\n        roomID\r\n    }: IJoinRoomConfig\r\n): Promise<RoomInfoType> {\r\n\r\n    if (leftThenJoin) {\r\n        return LeaveRoom(room)\r\n            .then(function () {\r\n                return _JoinRoom(room, roomID);\r\n            })\r\n    } else {\r\n        return _JoinRoom(room, roomID);\r\n    }\r\n}\r\n\r\nfunction _JoinRoom(\r\n    room: IRoom,\r\n    roomID: string\r\n): Promise<RoomInfoType> {\r\n\r\n    if (roomID == null) {\r\n        return Promise.reject(GetRoomInfo(room, roomID, ''));\r\n    }\r\n\r\n    room.isRemoveRoomWhenLeft = false;\r\n    return GetOpenedRoomMetadata(room, roomID)\r\n        .then(function (metadata: RoomMetadataType) {\r\n            return room.userList\r\n                .setRootPath(GetUserListPath(room, roomID))\r\n                .setMaxUsers(metadata.maxUsers)\r\n                .join()\r\n                .then(function () {\r\n                    return Promise.resolve(metadata)\r\n                })\r\n        })\r\n        .then(function (metadata) {\r\n            OnJoinRoom(room, roomID, metadata.name, GetRoomType(metadata.filter));\r\n            return Promise.resolve(GetRoomInfo(room));\r\n        })\r\n}\r\n\r\nfunction GetOpenedRoomMetadata(\r\n    room: IRoom,\r\n    roomID: string\r\n): Promise<RoomMetadataType> {\r\n\r\n    return GetRoomMetadataRef(room, roomID).once('value')\r\n        .then(function (snapshot) {\r\n            let roomMetadata = snapshot.val() as RoomMetadataType;\r\n            if (!IsRoomOpened(room, roomMetadata)) {\r\n                return Promise.reject();\r\n            } else {\r\n                return Promise.resolve(roomMetadata);\r\n            }\r\n        });\r\n}\r\n\r\nfunction IsRoomOpened(\r\n    room: IRoom,\r\n    roomMetadata: RoomMetadataType\r\n): boolean {\r\n\r\n    if (roomMetadata == null) {\r\n        return false;\r\n    }\r\n\r\n    if (GetRoomState(roomMetadata.filter) === 'closed') {\r\n        return false;\r\n    }\r\n\r\n    const userID = room.userID;\r\n    if (roomMetadata.moderators[userID]) {\r\n        return true;\r\n    }\r\n\r\n    switch (roomMetadata.permission) {\r\n        case 'blocklist':\r\n            const blockList = roomMetadata['blocklist'];\r\n            return !(blockList && blockList[userID]);\r\n\r\n        case 'allowlist':\r\n            const allowList = roomMetadata['allowlist'];\r\n            return allowList && allowList[userID];\r\n\r\n        default: // 'anyone'\r\n            return true;\r\n    }\r\n}", "import {\r\n    IRoom,\r\n    RoomStateType, RoomFilterDataType\r\n} from './IRoom';\r\nimport { GetRoomListQuery } from './GetRefMethods';\r\n\r\nexport function GetRoomList(\r\n    room: IRoom,\r\n    roomType: string,\r\n    roomState: RoomStateType\r\n): Promise<RoomFilterDataType[]> {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        room.roomList\r\n            .once('roomlist.update', function (rooms: RoomFilterDataType[]) {\r\n                resolve(rooms)\r\n            })\r\n            .startUpdate(GetRoomListQuery(room, roomType, roomState));\r\n    })\r\n}", "import {\r\n    IRoom,\r\n    RoomInfoType,\r\n    IJoinRandomRoomConfig, IJoinRoomConfig, RoomFilterDataType\r\n} from './IRoom';\r\nimport { Shuffle } from '../../../utils/array/Shuffle';\r\nimport { GetRoomList } from './GetRoomList';\r\nimport { JoinRoom } from './JoinRoom';\r\n\r\nexport function JoinRandomRoom(\r\n    room: IRoom,\r\n    {\r\n        roomType = '',\r\n        leftThenJoin = true\r\n    }: IJoinRandomRoomConfig = {}\r\n): Promise<RoomInfoType> {\r\n\r\n    return GetRoomList(room, roomType, 'open')\r\n        .then(function (rooms: RoomFilterDataType[]) {\r\n            if (rooms.length === 0) {\r\n                return Promise.reject('No filtered room');\r\n            }\r\n\r\n            Shuffle(rooms);\r\n            const config = {\r\n                leftThenJoin: leftThenJoin,\r\n                roomID: ''\r\n            };\r\n            return JoinNextRoom(room, config, rooms);\r\n        })\r\n}\r\n\r\nfunction JoinNextRoom(\r\n    room: IRoom,\r\n    config: IJoinRoomConfig,\r\n    rooms: RoomFilterDataType[],\r\n    index: number = 0\r\n): Promise<RoomInfoType> {\r\n\r\n    if (index === rooms.length) {\r\n        return Promise.reject('Can\\'t join any room');\r\n    }\r\n\r\n    config.roomID = rooms[index].roomID;\r\n    index++;\r\n    return JoinRoom(room, config)\r\n        .catch(function () {\r\n            return JoinNextRoom(room, config, rooms, index);\r\n        })\r\n}\r\n", "import { IRoom } from './IRoom';\r\nimport { LeaveRoom } from './LeaveRoom';\r\n\r\nexport function KickUser(\r\n    room: IRoom,\r\n    userID: string\r\n): Promise<any> {\r\n\r\n    if (!room.userList.contains(userID)) {\r\n        return Promise.resolve();\r\n    } else if (userID === room.userID) {\r\n        return LeaveRoom(room);\r\n    } else {\r\n        // TODO: Who can kick user?\r\n        return room.userList.leave(userID);\r\n    }\r\n}", "import { IRoom } from './IRoom';\r\nimport { GetRoomMetadataRef } from './GetRefMethods';\r\n\r\nexport function HasRoom(\r\n    room: IRoom,\r\n    roomID: string\r\n): Promise<boolean> {\r\n\r\n    if (roomID === room.roomID) {\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    return GetRoomMetadataRef(room, roomID).once('value')\r\n        .then(function (snapshot) {\r\n            const hasRoom = (snapshot.val() !== null);\r\n            return Promise.resolve(hasRoom);\r\n        })\r\n}", "import {\r\n    IRoom,\r\n    RoomStateType\r\n} from './IRoom';\r\nimport { HasRoom } from './HasRoom';\r\nimport { GetFilterString } from './RoomFilterMethods';\r\nimport { GetRootRef } from './GetRefMethods';\r\n\r\nexport function ChangeRoomState(\r\n    room: IRoom,\r\n    roomState: RoomStateType,\r\n    roomID: string = room.roomID\r\n): Promise<any> {\r\n\r\n    return HasRoom(room, roomID)\r\n        .then(function (hasRoom) {\r\n\r\n            if (!hasRoom) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            const filter = GetFilterString(roomState, room.roomType);\r\n            const d = {};\r\n            d[`room-filters/${roomID}/filter`] = filter;\r\n            d[`room-metadata/${roomID}/filter`] = filter;\r\n            return GetRootRef(room).update(d);\r\n        })\r\n}\r\n\r\nexport function OpenRoom(\r\n    room: IRoom,\r\n    roomID: string = room.roomID\r\n): Promise<any> {\r\n\r\n    return ChangeRoomState(room, 'open', roomID);\r\n}\r\n\r\nexport function CloseRoom(\r\n    room: IRoom,\r\n    roomID: string = room.roomID\r\n): Promise<any> {\r\n\r\n    return ChangeRoomState(room, 'closed', roomID);\r\n}", "import { IRoom } from './IRoom';\r\nimport { HasRoom } from './HasRoom';\r\nimport { GetRoomFilterRef } from './GetRefMethods';\r\n\r\nexport function ChangeFilterData(\r\n    room: IRoom,\r\n    filterData: { [key: string]: any },\r\n    roomID: string = room.roomID\r\n): Promise<any> {\r\n\r\n    return HasRoom(room, roomID)\r\n        .then(function (hasRoom) {\r\n\r\n            if (!hasRoom) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            return GetRoomFilterRef(room, roomID).child('data').update(filterData);\r\n        })\r\n}", "import { IRoom } from './IRoom';\r\n\r\nexport function ChangeUserName(\r\n    room: IRoom,\r\n    userName: string\r\n): Promise<any> {\r\n\r\n    return room.userList.changeUserName(userName);\r\n}", "import { IRoom } from './IRoom';\r\nimport { HasRoom } from './HasRoom';\r\nimport { GetRootRef } from './GetRefMethods';\r\n\r\nexport function ChangeRoomName(\r\n    room: IRoom,\r\n    roomName: string,\r\n    roomID: string = room.roomID\r\n): Promise<any> {\r\n\r\n    return HasRoom(room, roomID)\r\n        .then(function (hasRoom) {\r\n\r\n            if (!hasRoom) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            const d = {};\r\n            d[`room-filters/${roomID}/name`] = roomName;\r\n            d[`room-metadata/${roomID}/name`] = roomName;\r\n            return GetRootRef(room).update(d);\r\n        })\r\n}", "import {\r\n    IRoom,\r\n    UserInfoType\r\n} from './IRoom';\r\nimport { GetUserListRef } from './GetRefMethods';\r\nimport { ItemList } from '../utils/itemlist';\r\n\r\nexport function GetUserList(\r\n    room: IRoom,\r\n    roomID: string = room.roomID\r\n): UserInfoType[] | Promise<UserInfoType[]> {\r\n\r\n    if (roomID === room.roomID) {\r\n        return room.userList.getUsers();\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        const userList = new ItemList<UserInfoType>({\r\n            itemIDKey: 'joinAt',\r\n            mode: 'once'\r\n        })\r\n\r\n        userList\r\n            .once('update', function (users: UserInfoType[]) {\r\n                resolve(users)\r\n            })\r\n            .startUpdate(GetUserListRef(room, roomID));\r\n    })\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    IRoom,\r\n    IConfig, UserInfoType, RoomInfoType, RoomStateType, RoomFilterDataType,\r\n    ICreateRoomConfig, ICreateRandomRoomCongfig, IJoinRoomConfig, IJoinRandomRoomConfig\r\n} from './IRoom';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport { OnlineUserList } from '../onlineuserlist';\r\nimport { CreateUserList } from './CreateUserList';\r\nimport { ItemList } from '../utils/itemlist';\r\nimport { CreateRoomList } from './CreateRoomList';\r\nimport { Broadcast } from '../broadcast';\r\nimport { CreateBroadcast } from './CreateBroadcast';\r\nimport { ItemTable } from '../itemtable'\r\nimport { CreateTables } from './CreateTables';\r\nimport { GetRoomInfo } from './GetRoomInfo';\r\nimport { IsInRoom, IsFull, IsFirstUser, GetUsers } from './RoomMethods';\r\nimport { CreateRoom } from './CreateRoom';\r\nimport { CreateRandomRoom } from './CreateRandomRoom';\r\nimport { JoinRoom } from './JoinRoom';\r\nimport { JoinRandomRoom } from './JoinRandomRoom';\r\nimport { LeaveRoom } from './LeaveRoom';\r\nimport { RemoveRoom } from './RemoveRoom';\r\nimport { KickUser } from './KickUser';\r\nimport { ChangeRoomState, OpenRoom, CloseRoom } from './ChangeRoomState';\r\nimport { ChangeFilterData } from './ChangeFilterData';\r\nimport { ChangeUserName } from './ChangeUserName';\r\nimport { ChangeRoomName } from './ChangeRoomName';\r\nimport { GetUserList } from './GetUserList';\r\nimport { GetRoomList } from './GetRoomList';\r\nimport { HasRoom } from './HasRoom';\r\n\r\nexport class Room extends BaseEventEmitter implements IRoom {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    userInfo: UserInfoType;\r\n    isRoomCreator: boolean;\r\n    roomID: string;\r\n    roomName: string;\r\n    roomType: string;\r\n    doorState: RoomStateType;\r\n    leftRoomFlag: boolean;\r\n    isRemoveRoomWhenLeft: boolean;\r\n\r\n    userList: OnlineUserList;\r\n    roomList: ItemList<RoomFilterDataType>;\r\n    broadcast: Broadcast;\r\n    tables: Map<string, ItemTable>;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        userID = '',\r\n        userName = '',\r\n        broadcast = true,\r\n        tables = false\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n\r\n        this.database = firebase.database()\r\n        this.setRootPath(root);\r\n\r\n        // User properties\r\n        this.userInfo = { userID: '', userName: '' };\r\n        this.setUser(userID, userName);\r\n        // Room properties\r\n        this.isRoomCreator = false;\r\n        this.roomID = undefined;\r\n        this.roomName = undefined;\r\n        this.roomType = undefined;\r\n        this.doorState = undefined;\r\n        this.leftRoomFlag = false;\r\n        this.isRemoveRoomWhenLeft = undefined;\r\n        // User list\r\n        this.userList = CreateUserList(this);\r\n        // Room list\r\n        this.roomList = CreateRoomList(this);\r\n        // Broadcast\r\n        this.broadcast = CreateBroadcast(this, broadcast);\r\n        // Item tables\r\n        this.tables = CreateTables(this, tables);\r\n    }\r\n\r\n    destroy() {\r\n        var self = this;\r\n        this\r\n            .destroyEventEmitter()\r\n            .leaveRoom()\r\n            .then(function () {\r\n                self.userList.destroy();\r\n                self.userList = undefined;\r\n\r\n                self.roomList.destroy();\r\n                self.roomList = undefined;\r\n\r\n                self.broadcast.destroy();\r\n                self.broadcast = undefined;\r\n            })\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = (rootPath !== '') ? this.database.ref(this.rootPath) : undefined;\r\n        return this;\r\n    }\r\n\r\n    getRoomInfo(roomID, roomName) {\r\n\r\n        return GetRoomInfo(this, roomID, roomName);\r\n    }\r\n\r\n    setUser(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    isInRoom(\r\n        roomID?: string\r\n    ): boolean {\r\n\r\n        return IsInRoom(this, roomID);\r\n    }\r\n\r\n    isFull(\r\n    ): boolean {\r\n\r\n        return IsFull(this);\r\n    }\r\n\r\n    isFirstUser(\r\n        userID: string = this.userID\r\n    ): boolean {\r\n\r\n        return IsFirstUser(this, userID);\r\n    }\r\n\r\n    getUsers(): UserInfoType[] {\r\n\r\n        return GetUsers(this);\r\n    }\r\n\r\n    get maxUsers() {\r\n\r\n        return this.userList.maxUsers;\r\n    }\r\n\r\n    getTable(\r\n        key: string\r\n    ): ItemTable {\r\n\r\n        return this.tables.get(key);\r\n    }\r\n\r\n    createRoom(\r\n        config: ICreateRoomConfig\r\n    ): Promise<RoomInfoType> {\r\n\r\n        return CreateRoom(this, config);\r\n    }\r\n\r\n    createRandomRoom(\r\n        config: ICreateRandomRoomCongfig = {}\r\n    ): Promise<RoomInfoType> {\r\n\r\n        return CreateRandomRoom(this, config);\r\n    }\r\n\r\n    joinRoom(\r\n        config: IJoinRoomConfig\r\n    ): Promise<RoomInfoType> {\r\n\r\n        return JoinRoom(this, config);\r\n    }\r\n\r\n    joinRandomRoom(\r\n        config: IJoinRandomRoomConfig = {}\r\n    ): Promise<RoomInfoType> {\r\n\r\n        return JoinRandomRoom(this, config);\r\n    }\r\n\r\n    leaveRoom(): Promise<RoomInfoType> {\r\n\r\n        return LeaveRoom(this);\r\n    }\r\n\r\n    removeRoom(\r\n        roomID: string = this.roomID\r\n    ): Promise<RoomInfoType> {\r\n\r\n        return RemoveRoom(this, roomID);\r\n    }\r\n\r\n    kickUser(\r\n        userID: string\r\n    ): Promise<any> {\r\n\r\n        return KickUser(this, userID);\r\n    }\r\n\r\n    changeRoomState(\r\n        roomState: RoomStateType,\r\n        roomID: string = this.roomID\r\n    ): Promise<any> {\r\n\r\n        return ChangeRoomState(this, roomState, roomID);\r\n    }\r\n\r\n    openRoom(\r\n        roomID: string = this.roomID\r\n    ): Promise<any> {\r\n\r\n        return OpenRoom(this, roomID);\r\n    }\r\n\r\n    closeRoom(\r\n        roomID: string = this.roomID\r\n    ): Promise<any> {\r\n\r\n        return CloseRoom(this, roomID);\r\n    }\r\n\r\n    changeUserName(\r\n        userName: string\r\n    ): Promise<any> {\r\n\r\n        return ChangeUserName(this, userName);\r\n    }\r\n\r\n    changeFilterData(\r\n        filterData: { [key: string]: any },\r\n        roomID: string = this.roomID\r\n    ): Promise<any> {\r\n\r\n        return ChangeFilterData(this, filterData, roomID);\r\n    }\r\n\r\n    changeRoomName(\r\n        room: IRoom,\r\n        roomName: string,\r\n        roomID: string = room.roomID\r\n    ): Promise<any> {\r\n\r\n        return ChangeRoomName(this, roomName, roomID);\r\n    }\r\n\r\n    getUserList(\r\n        roomID: string = this.roomID\r\n    ): UserInfoType[] | Promise<UserInfoType[]> {\r\n\r\n        return GetUserList(this, roomID);\r\n    }\r\n\r\n    getRoomList(\r\n        roomType: string,\r\n        roomState: RoomStateType\r\n    ): Promise<RoomFilterDataType[]> {\r\n\r\n        return GetRoomList(this, roomType, roomState);\r\n    }\r\n\r\n    HasRoom(\r\n        roomID: string\r\n    ): Promise<boolean> {\r\n\r\n        return HasRoom(this, roomID);\r\n    }\r\n}", "import { Room } from './Room';\r\n\r\nexport { Room };", "import * as firebase from 'firebase/app';\r\nimport { ISingleRoom } from './ISingleRoom';\r\n\r\nexport function GetRoomRef(\r\n    room: ISingleRoom,\r\n    childKey?: string\r\n): firebase.database.Reference {\r\n\r\n    let ref = room.rootRef;\r\n    if (childKey) {\r\n        ref = ref.child(childKey);\r\n    }\r\n    return ref;\r\n};\r\n\r\nexport function GetUserListRef(\r\n    room: ISingleRoom\r\n): firebase.database.Reference {\r\n\r\n    return GetRoomRef(room, 'users');\r\n}\r\n\r\nexport function GetRoomDataPath(\r\n    room: ISingleRoom,\r\n    childKey?: string\r\n): string {\r\n\r\n    let path = room.rootPath;\r\n    if (childKey) {\r\n        path += `/${childKey}`;\r\n    }\r\n    return path;\r\n}\r\n\r\nexport function GetUserListPath(\r\n    room: ISingleRoom\r\n): string {\r\n\r\n    return GetRoomDataPath(room, 'users');\r\n}\r\n\r\nexport function GetItemTablePath(\r\n    room: ISingleRoom,\r\n    key: string\r\n): string {\r\n\r\n    return `${GetRoomDataPath(room, 'tables')}/${key}`;\r\n}", "import { ISingleRoom, IConfig } from './ISingleRoom';\r\nimport { OnlineUserList } from '../onlineuserlist';\r\nimport { GetUserListPath } from './GetRefMethods';\r\n\r\nexport function CreateUserList(\r\n    room: ISingleRoom,\r\n    maxUsers: number = 0\r\n): OnlineUserList {\r\n\r\n    const userListInstance = new OnlineUserList({\r\n        eventEmitter: room.eventEmitter,\r\n        eventNames: {\r\n            join: 'userlist.join',\r\n            leave: 'userlist.leave',\r\n            update: 'userlist.update',\r\n            change: 'userlist.change',\r\n            init: 'userlist.init',\r\n            changename: 'userlist.changename'\r\n        },\r\n\r\n        root: GetUserListPath(room),\r\n        userID: room.userInfo,\r\n        maxUsers: maxUsers\r\n    });\r\n\r\n    userListInstance\r\n        .on('userlist.leave', function (user) {\r\n            if (user.userID === room.userID) {\r\n                OnLeftRoom(room);  // Current user is left or kicked\r\n            }\r\n        })\r\n\r\n    room\r\n        .on('room.join', function () {\r\n            userListInstance\r\n                .startUpdate();\r\n        })\r\n        .on('room.leave', function () {\r\n            userListInstance\r\n                .stopUpdate()\r\n                .clear();\r\n        })\r\n\r\n    return userListInstance;\r\n}\r\n\r\nfunction OnLeftRoom(\r\n    room: ISingleRoom\r\n): void {\r\n\r\n    room.emit('room.leave');\r\n\r\n    // Clear room info later\r\n    setTimeout(function () {\r\n        room.leftRoomFlag = false;\r\n    }, 0);\r\n}", "import { ISingleRoom, BroadcastConfig } from './ISingleRoom';\r\nimport { Broadcast } from '../broadcast';\r\n\r\nexport function CreateBroadcast(\r\n    room: ISingleRoom,\r\n    broadcast: boolean | BroadcastConfig\r\n): Broadcast {\r\n\r\n    if (!broadcast) {\r\n        return null;\r\n    } else if (broadcast === true) {\r\n        broadcast = {\r\n            history: false\r\n        }\r\n    }\r\n\r\n    const broadcastInstance = new Broadcast({\r\n        eventEmitter: room.eventEmitter,\r\n        eventNames: {\r\n            receive: 'broadcast.receive'\r\n        },\r\n\r\n        receiverID: 'broadcast',\r\n        senderID: room.userInfo,\r\n        history: broadcast.history\r\n    });\r\n\r\n    room\r\n        .on('room.join', function () {\r\n            broadcastInstance\r\n                .setRootPath(room.rootPath)                \r\n                .startReceiving();\r\n        })\r\n        .on('room.leave', function () {\r\n            broadcastInstance\r\n                .stopReceiving();\r\n        })\r\n        .on('userlist.changename', function (userID: string, userName: string) {\r\n            broadcastInstance\r\n                .changeUserName(userID, userName);\r\n        })\r\n\r\n    return broadcastInstance;\r\n}", "import { ISingleRoom, ItemTableConfig } from './ISingleRoom';\r\nimport { ItemTable } from '../itemtable';\r\nimport { TableType } from '../itemtable/Types';\r\nimport { GetItemTablePath } from './GetRefMethods';\r\n\r\nexport function CreateTables(\r\n    room: ISingleRoom,\r\n    tables: ItemTableConfig[] | false\r\n): Map<string, ItemTable> {\r\n\r\n    const tableInstances: Map<string, ItemTable> = new Map();\r\n    if (!tables) {\r\n        return tableInstances;\r\n    }\r\n\r\n    tables.forEach((tableConfig) => {\r\n        tableInstances.set(tableConfig.key, CreateTable(room, tableConfig));\r\n    })\r\n\r\n    room\r\n        .on('room.join', function () {\r\n\r\n            for (const [key, tableInstance] of tableInstances) {\r\n                tableInstance\r\n                    .setRootPath(GetItemTablePath(room, key))\r\n                    .startUpdate();\r\n            }\r\n        })\r\n        .on('room.leave', function () {\r\n\r\n            for (const [key, tableInstance] of tableInstances) {\r\n                tableInstance\r\n                    .stopUpdate()\r\n                    .clear();\r\n            }\r\n        })\r\n\r\n    return tableInstances;\r\n}\r\n\r\nfunction CreateTable(\r\n    room: ISingleRoom,\r\n    {\r\n        key,\r\n        type = TableType['1d']\r\n    }: ItemTableConfig\r\n): ItemTable {\r\n\r\n    const table = new ItemTable({\r\n        eventEmitter: room.eventEmitter,\r\n\r\n        type: type,\r\n        eventNames: {\r\n            init: `tables.${key}.init`,\r\n            update: `tables.${key}.update`,\r\n            addkey0: `tables.${key}.addkey0`,\r\n            removekey0: `tables.${key}.removekey0`,\r\n            changekey0: `tables.${key}.changekey0`,\r\n            addkey1: `tables.${key}.addkey1`,\r\n            removekey1: `tables.${key}.removekey1`,\r\n            changekey1: `tables.${key}.changekey1`,\r\n            addkey2: `tables.${key}.addkey2`,\r\n            removekey2: `tables.${key}.removekey2`,\r\n            changekey2: `tables.${key}.changekey2`\r\n        }\r\n    });\r\n\r\n\r\n    return table;\r\n}", "import { ISingleRoom, UserInfoType } from './ISingleRoom';\r\n\r\nexport function IsInRoom(\r\n    room: ISingleRoom\r\n): boolean {\r\n\r\n    return room.userList.isInList;\r\n}\r\n\r\nexport function IsFull(\r\n    room: ISingleRoom\r\n): boolean {\r\n\r\n    return room.userList.isFull();\r\n}\r\n\r\nexport function IsFirstUser(\r\n    room: ISingleRoom,\r\n    userID: string = room.userID\r\n): boolean {\r\n\r\n    return room.userList.isFirstUser(userID);\r\n}\r\n\r\nexport function GetUsers(\r\n    room: ISingleRoom\r\n): UserInfoType[] {\r\n\r\n    return room.userList.getUsers();\r\n}", "import { ISingleRoom } from './ISingleRoom';\r\n\r\nexport function JoinRoom(\r\n    room: ISingleRoom\r\n): Promise<any> {\r\n\r\n    return room.userList.join()\r\n        .then(function () {\r\n            room.emit('room.join');\r\n            return Promise.resolve();\r\n        })\r\n}", "import { ISingleRoom } from './ISingleRoom';\r\nimport { IsInRoom } from './RoomMethods';\r\n\r\nexport function LeaveRoom(\r\n    room: ISingleRoom\r\n): Promise<any> {\r\n\r\n    if (!IsInRoom(room)) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // 'userlist.leave' event -> 'room.leave' event -> then\r\n    room.leftRoomFlag = true;\r\n    return room.userList.leave();\r\n}", "import { ISingleRoom } from './ISingleRoom';\r\nimport { UserInfoType } from '../onlineuserlist/IOnlineUserList';\r\n\r\nexport function GetUserList(\r\n    room: ISingleRoom\r\n): UserInfoType[] {\r\n\r\n    return room.userList.getUsers();\r\n}", "import { ISingleRoom } from './ISingleRoom';\r\nimport { LeaveRoom } from './LeaveRoom'\r\n\r\nexport function KickUser(\r\n    room: ISingleRoom,\r\n    userID: string\r\n): Promise<any> {\r\n\r\n    if (!room.userList.contains(userID)) {\r\n        return Promise.resolve();\r\n    } else if (userID === room.userID) {\r\n        return LeaveRoom(room);\r\n    } else {\r\n        // TODO: Who can kick user?\r\n        return room.userList.leave(userID);\r\n    }\r\n}", "import { ISingleRoom } from './ISingleRoom';\r\n\r\nexport function ChangeUserName(\r\n    room: ISingleRoom,\r\n    userName: string\r\n): Promise<any> {\r\n\r\n    return room.userList.changeUserName(userName);\r\n}", "import * as firebase from 'firebase/app';\r\nimport {\r\n    ISingleRoom,\r\n    IConfig,\r\n    UserInfoType,\r\n} from './ISingleRoom';\r\nimport { BaseEventEmitter } from '../../../utils/eventemitter/BaseEventEmitter';\r\nimport { OnlineUserList } from '../onlineuserlist';\r\nimport { CreateUserList } from './CreateUserList';\r\nimport { Broadcast } from '../broadcast';\r\nimport { CreateBroadcast } from './CreateBroadcast';\r\nimport { ItemTable } from '../itemtable'\r\nimport { CreateTables } from './CreateTables';\r\nimport { IsInRoom, IsFull, IsFirstUser, GetUsers } from './RoomMethods';\r\nimport { JoinRoom } from './JoinRoom';\r\nimport { LeaveRoom } from './LeaveRoom';\r\nimport { GetUserList } from './GetUserList';\r\nimport { KickUser } from './KickUser';\r\nimport { ChangeUserName } from './ChangeUserName';\r\n\r\nexport class SingleRoom extends BaseEventEmitter implements ISingleRoom {\r\n    database: firebase.database.Database;\r\n    rootPath: string;\r\n    rootRef: firebase.database.Reference;\r\n\r\n    userInfo: UserInfoType;\r\n    userList: OnlineUserList;\r\n    leftRoomFlag: boolean;\r\n\r\n    broadcast: Broadcast;\r\n    tables: Map<string, ItemTable>;\r\n\r\n    constructor({\r\n        eventEmitter,\r\n        root = '',\r\n        userID = '',\r\n        userName = '',\r\n        maxUsers = 0,\r\n        broadcast = true,\r\n        tables = false\r\n    }: IConfig = {}) {\r\n\r\n        const config = arguments[0] as IConfig;\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        this.setEventEmitter(eventEmitter);\r\n\r\n        this.database = firebase.database();\r\n        this.setRootPath(root);\r\n\r\n        // User properties\r\n        this.userInfo = { userID: '', userName: '' };\r\n        this.setUser(userID, userName);\r\n        // Room properties\r\n        this.leftRoomFlag = false;\r\n        // User list\r\n        this.userList = CreateUserList(this, maxUsers);\r\n        // Broadcast\r\n        this.broadcast = CreateBroadcast(this, broadcast);\r\n        // Item tables\r\n        this.tables = CreateTables(this, tables);\r\n    }\r\n\r\n    shutdown() {\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n    }\r\n\r\n    get userID() {\r\n        return this.userInfo.userID;\r\n    }\r\n\r\n    set userID(value) {\r\n        this.userInfo.userID = value;\r\n    }\r\n\r\n    get userName() {\r\n        return this.userInfo.userName;\r\n    }\r\n\r\n    set userName(value) {\r\n        this.userInfo.userName = value;\r\n    }\r\n\r\n    setRootPath(\r\n        rootPath: string\r\n    ): this {\r\n\r\n        this.rootPath = rootPath;\r\n        this.rootRef = (rootPath !== '') ? this.database.ref(this.rootPath) : undefined;\r\n        return this;\r\n    }\r\n\r\n    setUser(\r\n        userID: string | UserInfoType,\r\n        userName?: string\r\n    ): this {\r\n\r\n        if (typeof (userID) === 'string') {\r\n            this.userID = userID;\r\n            this.userName = userName;\r\n        } else {\r\n            this.userInfo = userID;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    isInRoom(): boolean {\r\n\r\n        return IsInRoom(this);\r\n    }\r\n\r\n    isFull(): boolean {\r\n        return IsFull(this);\r\n    }\r\n\r\n    isFirstUser(\r\n        userID: string = this.userID\r\n    ): boolean {\r\n\r\n        return IsFirstUser(this, userID);\r\n    }\r\n\r\n    getUsers(): UserInfoType[] {\r\n\r\n        return GetUsers(this);\r\n    }\r\n\r\n    get maxUsers(): number {\r\n        return this.userList.maxUsers;\r\n    }\r\n\r\n    getTable(\r\n        key: string\r\n    ): ItemTable {\r\n\r\n        return this.tables.get(key);\r\n    }\r\n\r\n    joinRoom(): Promise<any> {\r\n\r\n        return JoinRoom(this);\r\n    }\r\n\r\n    leaveRoom(): Promise<any> {\r\n\r\n        return LeaveRoom(this);\r\n    }\r\n\r\n    getUserList(): UserInfoType[] {\r\n\r\n        return GetUserList(this);\r\n    }\r\n\r\n    kickUser(\r\n        userID: string\r\n    ): Promise<any> {\r\n\r\n        return KickUser(this, userID);\r\n    }\r\n\r\n    changeUserName(\r\n        userName: string\r\n    ): Promise<any> {\r\n\r\n        return ChangeUserName(this, userName);\r\n    }\r\n}", "import { SingleRoom } from './SingleRoom';\r\n\r\nexport { SingleRoom };", "import { Broadcast } from './database/broadcast';\r\nimport { IdAlias } from './firestore/idalias';\r\nimport { ItemTable } from './database/itemtable';\r\nimport { Files } from './firestore/files';\r\nimport { LeaderBoard } from './firestore/leaderboard';\r\nimport { DynamicPageLoader, StaticPageLoader } from './firestore/pageloader';\r\nimport { Messages } from './firestore/messages';\r\nimport { OnlineUserList } from './database/onlineuserlist';\r\nimport { Room } from './database/room'\r\nimport { SingleRoom } from './database/singleroom'\r\n\r\n\r\nexport {\r\n    Broadcast,\r\n    DynamicPageLoader,\r\n    IdAlias,\r\n    ItemTable,\r\n    Files,\r\n    LeaderBoard,\r\n    Messages,\r\n    OnlineUserList,\r\n    Room,\r\n    SingleRoom,\r\n    StaticPageLoader,\r\n}", "import { BaseEventEmitter } from '../../utils/eventemitter/BaseEventEmitter';\r\nimport {\r\n    IFSM,\r\n    IConfig,\r\n    StateDefineType, StatesDefineType\r\n} from './IFSM';\r\n\r\n\r\nexport class FSM extends BaseEventEmitter implements IFSM {\r\n    _stateLock: boolean;\r\n    enable: boolean = true;\r\n    _start: string;\r\n    _state: string;\r\n    _prevState: string;\r\n\r\n    constructor({\r\n        eventEmitter = true\r\n    }: IConfig = {}) {\r\n\r\n        super();\r\n\r\n        // Event emitter\r\n        if (eventEmitter) {\r\n            this.setEventEmitter();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEventEmitter();\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            curState: this.state,\r\n            prevState: this.prevState,\r\n\r\n            enable: this.enable,\r\n            start: this._start\r\n        };\r\n    }\r\n\r\n    setEnable(enable: boolean = true) {\r\n\r\n        this.enable = enable;\r\n        return this;\r\n    }\r\n\r\n    set state(newState) {\r\n        if (!this.enable || this._stateLock) {\r\n            return;\r\n        }\r\n        if (this._state === newState) {\r\n            return;\r\n        }\r\n        this._prevState = this._state;\r\n        this._state = newState;\r\n\r\n        this._stateLock = true; // lock state\r\n\r\n        this.emit('statechange', this);\r\n\r\n        if (this._prevState != null) {\r\n            let exitEventName = `exit_${this._prevState}`;\r\n            let exitCallback: (() => void) = this[exitEventName];\r\n            if (exitCallback) {\r\n                exitCallback.call(this);\r\n            }\r\n            this.emit(exitEventName, this);\r\n        }\r\n\r\n        this._stateLock = false;\r\n\r\n        if (this._state != null) {\r\n            let enterEventName = `enter_${this._state}`;\r\n            let enterCallback: (() => void) = this[enterEventName];\r\n            if (enterCallback) {\r\n                enterCallback.call(this);\r\n            }\r\n            this.emit(enterEventName, this);\r\n        }\r\n    }\r\n\r\n    get state(): string {\r\n        return this._state;\r\n    }\r\n\r\n    get prevState(): string {\r\n        return this._prevState;\r\n    }\r\n\r\n    start(\r\n        state: string\r\n    ): this {\r\n\r\n        this._start = state;\r\n        this._prevState = undefined;\r\n        this._state = state; // Won't fire statechange events\r\n        return this;\r\n    }\r\n\r\n    goto(\r\n        nextState?: string\r\n    ): this {\r\n\r\n        if (nextState != null) {\r\n            this.state = nextState;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    next(): this {\r\n\r\n        let nextState: string;\r\n        let GetNextStateCallback: (() => void) | string = this['next_' + this.state];\r\n        if (!GetNextStateCallback) {\r\n            return this;\r\n        }\r\n\r\n        if (typeof (GetNextStateCallback) === 'string') {\r\n            nextState = GetNextStateCallback;\r\n        } else {\r\n            nextState = GetNextStateCallback.call(this);\r\n        }\r\n        this.goto(nextState);\r\n        return this;\r\n    }\r\n\r\n    update(\r\n        time: number,\r\n        delta: number,\r\n        key: string = 'update'\r\n    ): void {\r\n\r\n        let fn: ((time: number, delta: number) => void) = this[`${key}_${this.state}`];\r\n        if (fn) {\r\n            fn.call(this, time, delta);\r\n        }\r\n    }\r\n\r\n    preupdate(time: number, delta: number): void {\r\n\r\n        this.update(time, delta, 'preupdate');\r\n    }\r\n\r\n    postupdate(time: number, delta: number): void {\r\n\r\n        this.update(time, delta, 'postupdate');\r\n    }\r\n\r\n    addState(\r\n        name: string,\r\n        { next, exit, enter }: StateDefineType\r\n    ): this {\r\n\r\n        if (next) {\r\n            this[`next_${name}`] = next;\r\n        }\r\n\r\n        if (exit) {\r\n            this[`exit_${name}`] = exit;\r\n        }\r\n\r\n        if (enter) {\r\n            this[`enter_${name}`] = enter;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addStates(\r\n        states: StatesDefineType\r\n    ): this {\r\n\r\n        for (const name in states) {\r\n            this.addState(name, states[name]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}", "import { FSM } from './FSM';\r\nimport {\r\n    IFSM,\r\n    StatesDefineType\r\n} from './IFSM';\r\n\r\ninterface IConfig {\r\n    start?: string;\r\n    states?: StatesDefineType;\r\n    extend?: { [propName: string]: unknown };\r\n    init?: (() => void);\r\n    enable?: boolean;\r\n    eventEmitter?: boolean;\r\n}\r\n\r\n/*\r\nlet config = {\r\n    start: 'A',   // default: undefined\r\n    states: {\r\n        A: {\r\n            next: 'B',  // function() { return 'B'; }\r\n            enter: function() {},\r\n            exit: function() {}\r\n        },\r\n        // ...\r\n    },        \r\n    extend: {\r\n        i: 0,\r\n        name: 'abc'\r\n        // ...\r\n    },\r\n    init: function() {},\r\n    enable: true,\r\n    eventEmitter: true,\r\n};\r\n*/\r\nexport function CreateFSM({\r\n    states,\r\n    extend,\r\n    eventEmitter = true,\r\n    enable = true,\r\n    start,\r\n    init\r\n}: IConfig = {}): IFSM {\r\n\r\n    const fsm = new FSM({ eventEmitter: eventEmitter });\r\n\r\n    fsm.setEnable(enable);\r\n\r\n    // Attach get-next-state function\r\n    if (states) {\r\n        fsm.addStates(states);\r\n    }\r\n\r\n    // Attach extend members\r\n    if (extend) {\r\n        for (let name in extend) {\r\n            if (!fsm.hasOwnProperty(name) || fsm[name] === undefined) {\r\n                fsm[name] = extend[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (init) {\r\n        init.call(fsm);\r\n    }\r\n\r\n    if (start) {\r\n        fsm.start(start);\r\n    }\r\n\r\n    return fsm;\r\n}", "import { FSM } from './FSM';\r\nimport { CreateFSM } from './CreateFSM';\r\n\r\nexport {\r\n    FSM,\r\n    CreateFSM\r\n}", "/**\r\n * Pick mode, put item back to box or not.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum Mode {\r\n    /**\r\n     * Don't put item back to box after pick it.\r\n     */\r\n    shuffle,\r\n\r\n    /**\r\n     * Put item back to box after pick it.\r\n     */\r\n    random\r\n}\r\n\r\nexport type ModeString = 'shuffle' | 'random';\r\n\r\nexport type ItemType = { [name: string]: number };\r\n\r\nexport type ItemMapType = Map<string, number>;\r\n\r\nexport type RNDObjType = {\r\n    frac: () => number\r\n}\r\n\r\n/**\r\n * Config of constructor.\r\n *\r\n * @export\r\n * @interface IConfig\r\n */\r\nexport interface IConfig {\r\n\r\n    /**\r\n     * Pick mode, put item back to box or not.\r\n     *\r\n     * @type {Mode}\r\n     * @memberof IState\r\n     */\r\n    mode?: Mode | ModeString;\r\n\r\n    /**\r\n     * Reload candidate items when box is empty.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof IState\r\n     */\r\n    reload?: boolean;\r\n\r\n    /**\r\n     * Candidate items.\r\n     *\r\n     * @type {ItemType}\r\n     * @memberof IState\r\n     */\r\n    items?: ItemType;\r\n\r\n    /**\r\n     * Custom random number generator, optional.\r\n     *\r\n     * @type {RNDObjType}\r\n     * @memberof IState\r\n     */\r\n    rnd?: RNDObjType;\r\n}\r\n\r\n/**\r\n * State of Gashapon instance.\r\n *\r\n * @export\r\n * @interface IState\r\n */\r\nexport interface IState {\r\n    mode?: Mode | ModeString;\r\n    reload?: boolean;\r\n    items?: ItemType;\r\n    rnd?: RNDObjType;\r\n    result?: string | null;\r\n    remainder?: ItemType;\r\n}\r\n\r\nexport interface IGashapon {\r\n    mode: Mode;\r\n    items: ItemMapType;\r\n    remainder: ItemMapType;\r\n    reload: boolean;\r\n    rnd: RNDObjType | undefined;\r\n    result: string | null;\r\n}", "export function ObjToMap(\r\n    obj: { [name: string]: any },\r\n    out: Map<string, any> = new Map\r\n): Map<string, any> {\r\n\r\n    for (let key in obj) {\r\n        out.set(key, obj[key]);\r\n    }\r\n    return out;\r\n}", "export function MapToObj(\r\n    map: Map<string, any>,\r\n    out: { [name: string]: any } = {}\r\n): { [name: string]: any } {\r\n\r\n    map.forEach((value, key) => (out[key] = value));\r\n    return out;\r\n}", "import { IGashapon, IConfig, IState, Mode, ModeString, ItemType, ItemMapType, RNDObjType } from './IGashapon';\r\nimport { ObjToMap } from '../../utils/map/ObjToMap';\r\nimport { MapToObj } from '../../utils/map/MapToObj';\r\n\r\n/**\r\n * Pick a random item from box.\r\n *\r\n * @export\r\n * @class Gashapon\r\n * @implements {IGashapon}\r\n */\r\nexport class Gashapon implements IGashapon {\r\n\r\n    mode: Mode;\r\n    items: ItemMapType;\r\n    remainder: ItemMapType;\r\n    reload: boolean;\r\n    rnd: RNDObjType | undefined;\r\n    result: string | null;\r\n\r\n\r\n    private _restartFlag: boolean;\r\n    private _totalRemainderCount: number | null;\r\n\r\n    /**\r\n     * Creates an instance of Gashapon.\r\n     * @param {IConfig} [{\r\n     *         mode = Mode.shuffle,\r\n     *         reload = true,\r\n     *         items = {},\r\n     *         rnd = undefined\r\n     *     }={}]\r\n     * @memberof Gashapon\r\n     */\r\n    constructor({\r\n        mode = Mode.shuffle,\r\n        reload = true,\r\n        items = {},\r\n        rnd = undefined\r\n    }: IConfig = {}) {\r\n\r\n        this.items = new Map();\r\n        this.remainder = new Map();\r\n        this._totalRemainderCount = null;\r\n        this.result = null;\r\n\r\n        this.setMode(mode);\r\n        this.setReload(reload);\r\n        this.setRND(rnd);\r\n        this.setItems(items);\r\n    }\r\n\r\n    /**\r\n     * Reset state.\r\n     *\r\n     * @param {IState} [{\r\n     *         mode = Mode.shuffle,\r\n     *         reload = true,\r\n     *         items = {},\r\n     *         result = null,\r\n     *         remainder = undefined,\r\n     *         rnd = undefined\r\n     *     }={}]\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    fromJSON({\r\n        mode = Mode.shuffle,\r\n        reload = true,\r\n        items = {},\r\n        result = null,\r\n        remainder = undefined,\r\n        rnd = undefined\r\n    }: IState = {}): this {\r\n\r\n        this.setMode(mode);\r\n        this.setReload(reload);\r\n        this.setRND(rnd);\r\n\r\n        // Data\r\n        this.setItems(items);\r\n        this._totalRemainderCount = null;\r\n\r\n        // Result\r\n        this.result = result;\r\n\r\n        // Flags\r\n        this._restartFlag = true; // force restart to rebuild this._list\r\n\r\n        // Initialize\r\n        if (this._restartFlag) {\r\n            this.startGen();\r\n        }\r\n        if (remainder) {\r\n            this.remainder.clear();\r\n            ObjToMap(remainder, this.remainder);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get state.\r\n     *\r\n     * @returns {IState}\r\n     * @memberof Gashapon\r\n     */\r\n    toJSON(): IState {\r\n        return {\r\n            // Configuration\r\n            mode: this.mode,\r\n            reload: this.reload,\r\n            rnd: this.rnd,\r\n\r\n            // Data\r\n            items: MapToObj(this.items),\r\n            remainder: MapToObj(this.remainder),\r\n\r\n            // Result\r\n            result: this.result\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Set pick mode.\r\n     *\r\n     * @param {(Mode | ModeString)} m Pick mode, put item back to box or not.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    setMode(m: Mode | ModeString): this {\r\n\r\n        if (typeof (m) === 'string') {\r\n            m = Mode[m] as number;\r\n        }\r\n        if (this.mode === m) {\r\n            return this;\r\n        }\r\n\r\n        this.mode = m;\r\n        this._restartFlag = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set reload.\r\n     *\r\n     * @param {boolean} [isReload=true] Set true to reload candidate items when box is empty.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    setReload(isReload: boolean = true): this {\r\n\r\n        this.reload = isReload;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set custom random number generator.\r\n     *\r\n     * @param {RNDObjType} [rnd] Custom random number generator.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    setRND(rnd?: RNDObjType): this {\r\n\r\n        this.rnd = rnd;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set a candidate item.\r\n     *\r\n     * @param {string} name Item name.\r\n     * @param {number} count Amount of this item.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    setItem(\r\n        name: string,\r\n        count: number\r\n    ): this {\r\n\r\n        if (this.items.get(name) === count) {\r\n            return this;\r\n        }\r\n\r\n        this.items.set(name, count);\r\n        this._restartFlag = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set candidate items.\r\n     *\r\n     * @param {ItemType} [items={}] Candidate items.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    setItems(items: ItemType = {}): this {\r\n\r\n        this.items.clear();\r\n        ObjToMap(items, this.items);\r\n        this._restartFlag = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a candidate item.\r\n     *\r\n     * @param {string} name Item name.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    removeItem(name: string): this {\r\n\r\n        if (!this.items.has(name)) {\r\n            return this;\r\n        }\r\n\r\n        this.items.delete(name);\r\n        this._restartFlag = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clear all candidate items.\r\n     *\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    removeAllItems(): this {\r\n\r\n        this.items.clear();\r\n        this._restartFlag = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add some candidate items.\r\n     *\r\n     * @param {string} name Item name.\r\n     * @param {number} [count=1] Amount of item.\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    addItem(\r\n        name: string,\r\n        count: number = 1\r\n    ): this {\r\n\r\n        let prevValue = this.items.get(name) || 0;\r\n        this.items.set(name, prevValue + count);\r\n\r\n        if (this._restartFlag) {\r\n            return this;\r\n        }\r\n\r\n        if (this.mode === Mode.shuffle) {\r\n            this.addRemainItem(name, count);\r\n        } else { // Mode.random\r\n            this._totalRemainderCount = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Put item back from box.\r\n     *\r\n     * @param {string} name\r\n     * @param {number} [count=1]\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    putItemBack(\r\n        name: string,\r\n        count: number = 1\r\n    ): this {\r\n\r\n        if (this.mode === Mode.random) {\r\n            return this;\r\n        } else if ( // Shuffle mode\r\n            this._restartFlag ||\r\n            (!this.items.has(name))\r\n        ) {\r\n            return this;\r\n        }\r\n\r\n        this.addRemainItem(name, count, this.items[name]);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Pick a item.\r\n     *\r\n     * @param {string} [name] If this name is undefined, pick a random item, else pick a item with this name.\r\n     * @returns {(string | null)} Item name if picked, else null.\r\n     * @memberof Gashapon\r\n     */\r\n    next(\r\n        name?: string\r\n    ): string | null {\r\n\r\n        let result = null;\r\n        if (this._restartFlag) {\r\n            this.startGen();\r\n        }\r\n\r\n        if (name === undefined) {\r\n            if (this.mode === Mode.shuffle) {\r\n                this._totalRemainderCount = null;\r\n                result = this.getRndItem();\r\n                this.addRemainItem(result, -1);\r\n            } else { // random mode\r\n                result = this.getRndItem();\r\n            }\r\n\r\n        } else { // Force picking\r\n            if (!this.remainder.has(name)) {\r\n                result = null; // Can not pick that result\r\n            } else {\r\n                result = name;\r\n                if (this.mode === Mode.shuffle) {\r\n                    this.addRemainItem(name, -1);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.result = result;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get all candidate items.\r\n     *\r\n     * @returns {ItemType} Candidate items.\r\n     * @memberof Gashapon\r\n     */\r\n    getItems(): ItemType {\r\n\r\n        return MapToObj(this.items);\r\n    }\r\n\r\n    /**\r\n     * Get all remainder items in box.\r\n     *\r\n     * @returns {ItemType} Remainder items in box.\r\n     * @memberof Gashapon\r\n     */\r\n    getRemain(): ItemType {\r\n\r\n        return MapToObj(this.remainder);\r\n    }\r\n\r\n    /**\r\n     * Get amount of a candidate item.\r\n     *\r\n     * @param {string} name Item name.\r\n     * @returns {number} Amount of a candidate item.\r\n     * @memberof Gashapon\r\n     */\r\n    getItemCount(name: string): number {\r\n\r\n        return this.items.get(name) || 0;\r\n    }\r\n\r\n    /**\r\n     * Get amount of a remainder item in box.\r\n     *\r\n     * @param {string} name Item name.\r\n     * @returns {number} Amount of a remainder item in box.\r\n     * @memberof Gashapon\r\n     */\r\n    getRemainCount(name: string): number {\r\n\r\n        return this.remainder.get(name) || 0;\r\n    }\r\n\r\n    /**\r\n     * For each candidate item.\r\n     *\r\n     * @param {((name: string, count: number) => boolean | undefined)} callback\r\n     * @param {object} [scope]\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    forEachItem(\r\n        callback: (count: number, name: string) => boolean | undefined,\r\n        scope?: object\r\n    ): this {\r\n\r\n        this.items.forEach(callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * For each remainder item in box.\r\n     *\r\n     * @param {((name: string, count: number) => boolean | undefined)} callback\r\n     * @param {object} [scope]\r\n     * @returns {this}\r\n     * @memberof Gashapon\r\n     */\r\n    forEachRemain(\r\n        callback: (count: number, name: string) => boolean | undefined,\r\n        scope?: object\r\n    ): this {\r\n\r\n        this.remainder.forEach(callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     *\r\n     * @memberof Gashapon\r\n     */\r\n    destroy() {\r\n\r\n        // data\r\n        this.items.clear();\r\n        this.remainder.clear();\r\n\r\n        // result\r\n        this.result = null;\r\n\r\n        // flags\r\n        this._restartFlag = false;\r\n    }\r\n\r\n    get totalRemainderCount() {\r\n        if (this._totalRemainderCount === null) {\r\n            this._totalRemainderCount = GetTotalItemCount(this.remainder);\r\n        }\r\n        return this._totalRemainderCount;\r\n    }\r\n\r\n    private startGen(): this {\r\n\r\n        this.remainder.clear();\r\n        for (const [name, count] of this.items) {\r\n            if (count > 0) {\r\n                this.remainder.set(name, count);\r\n            }\r\n        }\r\n\r\n        if (this.mode === Mode.random) {\r\n            this._totalRemainderCount = null;\r\n        }\r\n        this._restartFlag = false;\r\n\r\n        return this;\r\n    }\r\n\r\n    private addRemainItem(\r\n        name: string,\r\n        inc: number = 1,\r\n        maxCount?: number\r\n    ): this {\r\n\r\n        if (inc === 0) {\r\n            return this;\r\n        }\r\n\r\n        let prevValue = this.remainder.get(name) || 0,\r\n            newValue = prevValue + inc;\r\n        if ((maxCount !== undefined) && (newValue > maxCount)) {\r\n            newValue = maxCount;\r\n        }\r\n\r\n        if (newValue > 0) {\r\n            this.remainder.set(name, newValue);\r\n        } else {\r\n            this.remainder.delete(name);\r\n        }\r\n\r\n        if ((this.mode === Mode.shuffle) && this.reload &&\r\n            (this.remainder.size === 0)) {\r\n            this._restartFlag = true;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private getRndItem(): string {\r\n\r\n        let result = null;\r\n        let p = (this.rnd) ? this.rnd.frac() : Math.random();\r\n        let totalCount = p * this.totalRemainderCount;\r\n        for (const [name, count] of this.remainder) {\r\n            totalCount -= count;\r\n            if (totalCount <= 0) {\r\n                result = name;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nfunction GetTotalItemCount(items: ItemMapType) {\r\n    let result = 0;\r\n    for (const [name, count] of items) {\r\n        result += count;\r\n    }\r\n    return result;\r\n}", "import { Gashapon } from './Gashapon';\r\n\r\nexport { Gashapon };", "import LZString from './lz-string.min.js';\r\n\r\nexport { LZString };", "/**\r\n * String encoding type.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum EncodeType {\r\n    none,\r\n    base64,\r\n    utf16,\r\n    uri\r\n};\r\n\r\nexport type EncodeTypeString = 'none' | 'base64' | 'utf16' | 'uri';\r\n\r\n/**\r\n * Configuration of LZString class.\r\n *\r\n * @export\r\n * @interface IConfig\r\n */\r\nexport interface IConfig {\r\n    /**\r\n     * String encoding type.\r\n     *\r\n     * @type {EncodeType}\r\n     * @memberof IConfig\r\n     */\r\n    encoding?: EncodeType | EncodeTypeString;\r\n}\r\n\r\nexport interface IState {\r\n\r\n    encoding?: EncodeType | EncodeTypeString;\r\n}\r\n\r\n\r\nexport interface ILZString {\r\n    encoding: number;\r\n\r\n    setEncoding(m: EncodeType | EncodeTypeString): this;\r\n    compress(s: string): string;\r\n    decompress(s: string): string;\r\n}", "import { LZString as lzstring } from '../../utils/string/lzstring'\r\nimport { ILZString, IConfig, IState, EncodeType, EncodeTypeString } from './ILZString';\r\n\r\nexport class LZString implements ILZString {\r\n\r\n    encoding: number;\r\n\r\n    /**\r\n     * Creates an instance of LZString.\r\n     * @param {IConfig} [{\r\n     *         encoding = EncodeType.none\r\n     *     }={}]\r\n     * @memberof LZString\r\n     */\r\n    constructor({\r\n        encoding = EncodeType.none\r\n    }: IConfig = {}) {\r\n\r\n        this.setEncoding(encoding);\r\n    }\r\n\r\n    /**\r\n     * Reset state.\r\n     *\r\n     * @param {IState} [{\r\n     *         encoding = EncodeType.none\r\n     *     }={}]\r\n     * @returns {this}\r\n     * @memberof LZString\r\n     */\r\n    fromJSON({\r\n        encoding = EncodeType.none\r\n    }: IState = {}): this {\r\n\r\n        this.setEncoding(encoding);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get state.\r\n     *\r\n     * @returns {IState} State\r\n     * @memberof LZString\r\n     */\r\n    toJSON(): IState {\r\n\r\n        return {\r\n            encoding: this.encoding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set encoding type.\r\n     *\r\n     * @param {(EncodeType | EncodeTypeString)} [m=EncodeType.none]\r\n     * @returns {this}\r\n     * @memberof LZString\r\n     */\r\n    setEncoding(m: EncodeType | EncodeTypeString = EncodeType.none): this {\r\n\r\n        if (typeof (m) === 'string') {\r\n            m = (EncodeType[m] || 0) as number;\r\n        }\r\n        this.encoding = m;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Compress source string\r\n     *\r\n     * @param {string} s Source string\r\n     * @returns {string} Compression result\r\n     * @memberof LZString\r\n     */\r\n    compress(s: string): string {\r\n\r\n        let fnName = COMPRESSFNNAME[this.encoding];\r\n        return lzstring[fnName](s);\r\n    }\r\n\r\n    /**\r\n     * Decompress result string.\r\n     *\r\n     * @param {string} s Compression result\r\n     * @returns {string} Source string\r\n     * @memberof LZString\r\n     */\r\n    decompress(s: string): string {\r\n\r\n        let fnName = DECOMPRESSFNNAME[this.encoding];\r\n        return lzstring[fnName](s);\r\n    }\r\n}\r\n\r\nconst COMPRESSFNNAME = [\r\n    'compress',\r\n    'compressToBase64',\r\n    'compressToUTF16',\r\n    'compressToEncodedURIComponent'\r\n];\r\nconst DECOMPRESSFNNAME = [\r\n    'decompress',\r\n    'decompressFromBase64',\r\n    'decompressFromUTF16',\r\n    'decompressFromEncodedURIComponent'\r\n];", "import { LZString } from './LZString';\r\n\r\nexport { LZString };", "let FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\r\n\r\n/**\r\n * Convert string to string, number, boolean value, or null(from empty string).\r\n *\r\n * @param {string} s Source string.\r\n * @returns {(string | number | boolean | null)} String, number, boolean value, or null(from empty string).\r\n */\r\nexport function TypeConvert(\r\n    s: string\r\n): string | number | boolean | null {\r\n\r\n    let result: string | number | boolean | null;\r\n    if (s === '') {\r\n        result = null;\r\n    } else if (FLOAT.test(s)) {\r\n        result = parseFloat(s);\r\n    } else {\r\n        if (s === 'false') {\r\n            result = false;\r\n        } else if (s === 'true') {\r\n            result = true;\r\n        } else {\r\n            result = s;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};", "/**\r\n * Retrieves a value from an object.\r\n *\r\n * @param {*} source\r\n * @param {string} key\r\n * @param {*} defaultValue\r\n * @returns\r\n */\r\nexport function GetValue(\r\n    source: any,\r\n    key: string,\r\n    defaultValue: any\r\n) {\r\n\r\n    if (!source || typeof source !== 'object') {\r\n        return defaultValue;\r\n\r\n    } else if (source.hasOwnProperty(key)) {\r\n        return source[key];\r\n\r\n    } else if (key.indexOf('.') !== -1) {\r\n        let keys = key.split('.');\r\n        let parent = source;\r\n        let value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (let i = 0, cnt = keys.length; i < cnt; i++) {\r\n            if (parent.hasOwnProperty(keys[i])) {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n\r\n    } else {\r\n\r\n        return defaultValue;\r\n    }\r\n};", "import { IRunCommandConfig } from './IRunCommands';\r\nimport { TypeConvert as DefaultTypeConvert } from '../../utils/string/TypeConvert';\r\nimport { GetValue } from '../../utils/object/GetValue';\r\n\r\n/**\r\n * Invoke a callback.\r\n *\r\n * @export\r\n * @param {any[]} cmd\r\n * @param {object} scope\r\n * @param {IRunCommandConfig} [config={}]\r\n * @returns {*}\r\n */\r\nexport function RunCommand(\r\n    cmd: any[],\r\n    scope: object,\r\n    {\r\n        argsConvert = false,\r\n        argsConvertScope = undefined\r\n    }: IRunCommandConfig = {}\r\n): any {\r\n\r\n    let fnName: string,\r\n        fnArgs: any[];\r\n    ([fnName, ...fnArgs] = cmd);\r\n\r\n    if (argsConvert) {\r\n        // Convert string to number, boolean, null, or string        \r\n        if (argsConvert === true) { // Use default type convert callback\r\n            argsConvert = DefaultTypeConvert;\r\n            argsConvertScope = undefined;\r\n        }\r\n        for (let i = 0, cnt = fnArgs.length; i < cnt; i++) {\r\n            if (argsConvertScope) {\r\n                fnArgs[i] = argsConvert.call(argsConvertScope, fnArgs[i], cmd);\r\n            } else {\r\n                fnArgs[i] = argsConvert(fnArgs[i], cmd);\r\n            }\r\n        }\r\n    }\r\n\r\n    let fn: () => any;\r\n    if (typeof (fnName) === 'string') {\r\n        fn = scope[fnName];\r\n        if (fn == null) {\r\n            fn = GetValue(scope, fnName, null);\r\n        }\r\n    } else {\r\n        fn = fnName;\r\n    }\r\n\r\n    let retValue = fn.apply(scope, fnArgs as []);\r\n    return retValue;\r\n}", "import { IRunCommandsConfig } from './IRunCommands';\r\nimport { RunCommand } from './RunCommand';\r\n\r\n/**\r\n * Invoke callbacks from command queue.\r\n *\r\n * @export\r\n * @param {any[]} queue Commands queue, a single array `[fnName, ...param]` for a callback, or an array of callbacks.\r\n * @param {object} scope\r\n * @param {IRunCommandsConfig} [config={}]\r\n * @returns {*}\r\n */\r\nexport function RunCommands(\r\n    queue: any[],\r\n    scope: object,\r\n    {\r\n        reverse = false\r\n    }: IRunCommandsConfig = {}\r\n): any {\r\n\r\n    let config = arguments[2];\r\n    let retVal: any;\r\n    if (Array.isArray(queue[0])) {\r\n\r\n        if (!reverse) {\r\n            for (let i = 0, cnt = queue.length; i < cnt; i++) {\r\n                retVal = RunCommands(queue[i], scope, config);\r\n            }\r\n        } else {\r\n            for (let cnt = queue.length, i = cnt - 1; i >= 0; i--) {\r\n                retVal = RunCommands(queue[i], scope, config);\r\n            }\r\n        }\r\n    } else {\r\n        retVal = RunCommand(queue as [], scope, config);\r\n    }\r\n\r\n    return retVal;\r\n}", "import { RunCommands } from './RunCommands';\r\n\r\nexport { RunCommands };", "export type CornerRadiusType = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport type IRadiusConfig = {\r\n    x?: number,\r\n    y?: number,\r\n    tl?: number | CornerRadiusType,\r\n    tr?: number | CornerRadiusType,\r\n    bl?: number | CornerRadiusType,\r\n    br?: number | CornerRadiusType\r\n}\r\n\r\nexport interface IRoundRectangle {\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    cornerRadius: {\r\n        tl: CornerRadiusType,\r\n        tr: CornerRadiusType,\r\n        bl: CornerRadiusType,\r\n        br: CornerRadiusType\r\n    }\r\n}", "export enum WrapMode {\r\n    none = 0,\r\n    word = 1,\r\n    char = 2\r\n}\r\n\r\nexport enum NewLineMode {\r\n    none = 0,\r\n    raw = 1,\r\n    wrapped = 2\r\n}\r\n\r\nexport type LineInfo = {\r\n    text: string,\r\n    width: number,\r\n    newLineMode: NewLineMode;\r\n}\r\n\r\nexport type GetTextWidthCallbackType = (text: string, context: unknown) => number;\r\n\r\nexport const SplitTextRegExp = /(?:\\r\\n|\\r|\\n)/;\r\n\r\nexport function WrapText(\r\n    text: string,\r\n    getTextWidthCallback: GetTextWidthCallbackType,\r\n    context: unknown,\r\n    wrapMode: WrapMode,\r\n    wrapWidth: number,\r\n    offset: number = 0\r\n): LineInfo[] {\r\n\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = WrapMode.none;\r\n    }\r\n\r\n    let result: LineInfo[] = [];\r\n\r\n    if (!text || !text.length) {\r\n        return result;\r\n    }\r\n\r\n    let lines = text.split(SplitTextRegExp);\r\n    let lastLineIdx = lines.length - 1;\r\n    if (text.slice(-1) === '\\n') {\r\n        lines.length -= 1;\r\n    }\r\n\r\n    let remainWidth: number;\r\n    for (let i = 0, lineCnt = lines.length; i < lineCnt; i++) {\r\n        let line = lines[i];\r\n        let newLineMode = (i === lastLineIdx) ? NewLineMode.none : NewLineMode.raw;\r\n\r\n        if (wrapMode === WrapMode.none) {\r\n            result.push(\r\n                CreateLineInfo(line, getTextWidthCallback(line, context), newLineMode)\r\n            );\r\n            continue;\r\n        }\r\n\r\n        if (i === 0) {\r\n            remainWidth = wrapWidth - offset;\r\n        } else {\r\n            remainWidth = wrapWidth;\r\n        }\r\n\r\n        // Short string testing\r\n        if (line.length <= 100) {\r\n            let textWidth = getTextWidthCallback(line, context);\r\n            if (textWidth <= remainWidth) {\r\n                result.push(\r\n                    CreateLineInfo(line, textWidth, newLineMode)\r\n                );\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // Character mode\r\n        let tokenArray: string[] | string;\r\n        if (wrapMode === WrapMode.word) { // Word mode            \r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        let curLineText = '',\r\n            lineText = '',\r\n            lineWidth = 0;\r\n        for (let j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            let token = tokenArray[j];\r\n\r\n            if (wrapMode === WrapMode.word) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            let currLineWidth = getTextWidthCallback(curLineText, context);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    result.push(\r\n                        CreateLineInfo('', 0, NewLineMode.wrapped)\r\n                    );\r\n                } else {\r\n                    result.push(\r\n                        CreateLineInfo(lineText, lineWidth, NewLineMode.wrapped)\r\n                    );\r\n                    curLineText = token;\r\n                    if (wrapMode === WrapMode.word) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidthCallback(curLineText, context);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // For token in tokenArray\r\n\r\n        // Flush remain text\r\n        result.push(\r\n            CreateLineInfo(lineText, lineWidth, newLineMode)\r\n        );\r\n\r\n    } // For each line in lines\r\n\r\n    return result;\r\n};\r\n\r\nlet CreateLineInfo = function (\r\n    text: string,\r\n    width: number,\r\n    newLineMode: NewLineMode\r\n): LineInfo {\r\n    return { text: text, width: width, newLineMode: newLineMode }\r\n}", "export type FillStyleType = string | CanvasGradient | CanvasPattern;\r\n\r\nexport enum HAlignMode {\r\n    left = 0,\r\n    center = 1,\r\n    right = 2\r\n}\r\n\r\nexport type HAlignModeString = 'left' | 'center' | 'right';\r\n\r\nexport enum VAlignMode {\r\n    top = 0,\r\n    center = 1,\r\n    bottom = 2\r\n}\r\n\r\nexport type VAlignModeString = 'top' | 'center' | 'bottom';\r\n\r\nimport { IRadiusConfig } from '../../../utils/geom/roundrectangle/IRoundRectangle';\r\nexport { IRadiusConfig };\r\n\r\nexport interface IStyle {\r\n\r\n    backgroundFillStyle?: FillStyleType;\r\n    backgroundStrokeStyle?: FillStyleType;\r\n    backgroundStrokeThickness?: number;\r\n    cornerRadius?: IRadiusConfig | number;\r\n\r\n    antialias?: boolean;\r\n\r\n    font?: string;\r\n    fontStyle?: string;\r\n    fontFamily?: string;\r\n    fontSize?: string | number;\r\n    fillStyle?: FillStyleType;\r\n\r\n    strokeStyle?: FillStyleType;\r\n    strokeThickness?: number;\r\n\r\n    shadowColor?: string;\r\n    shadowOffsetX?: number;\r\n    shadowOffsetY?: number;\r\n    shadowBlur?: number;\r\n    shadowStroke?: boolean;\r\n    shadowFill?: boolean;\r\n\r\n    underlineStyle?: FillStyleType;\r\n    underlineThickness?: number;\r\n    underlineOffsetY?: number;\r\n\r\n    image?: string;\r\n}\r\n\r\nimport { WrapMode, NewLineMode, GetTextWidthCallbackType } from '../../../utils/string/WrapText';\r\nexport { WrapMode, NewLineMode, GetTextWidthCallbackType };\r\nexport type WrapModeString = 'none' | 'word' | 'char';", "import { Pen } from './Pen';\r\n\r\nexport class Line {\r\n    pens: Pen[] = [];\r\n    y: number;\r\n    height: number;\r\n\r\n    destroy() {\r\n        this.pens.length = 0;\r\n    }\r\n\r\n    addPen(\r\n        pen: Pen\r\n    ): this {\r\n\r\n        this.pens.push(pen);\r\n        return this;\r\n    }\r\n\r\n    get firstPen(): Pen {\r\n\r\n        return this.pens[0];\r\n    }\r\n\r\n    get lastPen(): Pen {\r\n\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    hasPen(): boolean {\r\n\r\n        return this.pens.length > 0;\r\n    }\r\n\r\n    get pensCount(): number {\r\n\r\n        return this.pens.length;\r\n    }\r\n\r\n    get startIndex(): number {\r\n\r\n        let firstPen = this.pens[0];\r\n        return (firstPen) ? firstPen.startIndex : 0;\r\n    }\r\n\r\n    get width() {\r\n\r\n        let lastPen = this.lastPen;\r\n        return (lastPen) ? lastPen.lastX : 0;\r\n    }\r\n}", "import { Clear } from './Clear';\r\n\r\nexport function Clone(\r\n    obj: any[] | { [name: string]: any },\r\n    out: any[] | { [name: string]: any } = ((Array.isArray(obj))? [] : {})\r\n): any[] | { [name: string]: any } {\r\n\r\n    Clear(out);\r\n    if (Array.isArray(obj)) {\r\n        out.length = obj.length;\r\n        for (let i = 0, cnt = obj.length; i < cnt; i++) {\r\n            out[i] = obj[i];\r\n        }\r\n    } else {\r\n        for (let key in obj) {\r\n            out[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n", "import { PropType } from '../parser/BaseParser';\r\nimport { NewLineMode } from '../Types';\r\nimport { Clone } from '../../../../utils/object/Clone';\r\n\r\nexport class Pen {\r\n    text: string = '';\r\n    x: number = 0;\r\n    y: number = 0;\r\n    width: number = 0;\r\n    height: number = 0;\r\n    ascent: number = 0;\r\n    descent: number = 0;\r\n    prop: PropType = {};\r\n    newLineMode: NewLineMode = NewLineMode.none;\r\n    startIndex: number = 0;\r\n\r\n    set(\r\n        text: string = '',\r\n        x: number = 0,\r\n        y: number = 0,\r\n        width: number = 0,\r\n        height: number = 0,\r\n        ascent: number = 0,\r\n        descent: number = 0,\r\n        prop: PropType = {},\r\n        newLineMode: NewLineMode = NewLineMode.none,\r\n        startIndex: number = 0\r\n    ): this {\r\n        this.text = text;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.ascent = ascent;\r\n        this.descent = descent;\r\n        this.prop = prop;\r\n        this.newLineMode = newLineMode;\r\n        this.startIndex = startIndex;\r\n\r\n        return this;\r\n    }\r\n\r\n    clone(): Pen {\r\n\r\n        let result = new Pen();\r\n        result.set(\r\n            this.text,\r\n            this.x, this.y,\r\n            this.width, this.height,\r\n            this.ascent, this.descent,\r\n            Clone(this.prop),\r\n            this.newLineMode,\r\n            this.startIndex\r\n        );\r\n        return result;\r\n    }\r\n\r\n    get plainText(): string {\r\n\r\n        return (this.newLineMode === NewLineMode.raw) ? `${this.text}\\n` : this.text;\r\n    }\r\n\r\n    get wrapText(): string {\r\n\r\n        return (this.newLineMode !== NewLineMode.none) ? `${this.text}\\n` : this.text;\r\n    }\r\n\r\n    get plainTextLength(): number {\r\n\r\n        let len = this.text.length;\r\n        if (this.newLineMode === NewLineMode.raw) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex(): number {\r\n\r\n        return this.startIndex + this.plainTextLength;\r\n    }\r\n\r\n    get lastX(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen(): boolean {\r\n\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen(): boolean {\r\n\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker(): boolean {\r\n\r\n        return !!this.prop.area;\r\n    }\r\n};", "import { Stack as Pool } from '../../../../utils/struct/Stack';\r\nimport { Line } from './Line';\r\nimport { Pen } from './Pen';\r\nimport { PropType } from '../parser/BaseParser';\r\nimport { NewLineMode } from '../Types';\r\n\r\nexport type PenPoolType = Pool<Pen>;\r\n\r\nexport class PenManager {\r\n    pens: Pen[] = [];\r\n    lines: Line[] = [];\r\n    maxLineWidth: number;\r\n    totalLineHeight: number;\r\n\r\n    penPool: PenPoolType;\r\n\r\n    constructor({\r\n        penPool\r\n    }: { penPool: PenPoolType }) {\r\n\r\n        this.pens = []; // all pens\r\n        this.lines = [];\r\n\r\n        this.penPool = penPool;\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n    }\r\n\r\n    freePens(): this {\r\n\r\n        this.penPool.pushMultiple(this.pens);\r\n\r\n        this.lines.forEach((l) => { l.destroy(); });\r\n        this.lines.length = 0;\r\n\r\n        this.totalLineHeight = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    addTextPen(\r\n        text: string,\r\n        x: number,\r\n        y: number,\r\n        width: number,\r\n        height: number,\r\n        ascent: number,\r\n        descent: number,\r\n        prop: PropType,\r\n        newLineMode: NewLineMode = NewLineMode.none\r\n    ): this {\r\n\r\n        let pen = this.penPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        pen.set(text,\r\n            x, y,\r\n            width, height,\r\n            ascent, descent,\r\n            prop, newLineMode);\r\n        this.addPen(pen);\r\n\r\n        return this;\r\n    }\r\n\r\n    addImagePen(\r\n        x: number,\r\n        y: number,\r\n        width: number,\r\n        height: number,\r\n        prop: PropType,\r\n    ): this {\r\n\r\n        this.addTextPen('', x, y, width, height, height, 0, prop, NewLineMode.none);\r\n\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen(\r\n        newLineMode: NewLineMode\r\n    ): this {\r\n\r\n        let lastPen = this.lastPen;\r\n        if (lastPen && (lastPen.newLineMode === NewLineMode.none)) {\r\n            lastPen.newLineMode = newLineMode;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    addPen(\r\n        pen: Pen\r\n    ): this {\r\n\r\n        let previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // Maintan lines\r\n        let line = this.lastLine;\r\n        if (line == null) {\r\n            line = new Line();\r\n            this.lines.push(line);\r\n        }\r\n        line.addPen(pen);\r\n\r\n        // New line, add an empty line\r\n        if (pen.newLineMode !== NewLineMode.none) {\r\n            line = new Line();\r\n            this.lines.push(line);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clone(\r\n        targetPenManager?: PenManager\r\n    ): PenManager {\r\n\r\n        if (targetPenManager == null) {\r\n            targetPenManager = new PenManager({\r\n                penPool: this.penPool\r\n            });\r\n        }\r\n\r\n        targetPenManager.freePens();\r\n\r\n        const pens = this.pens;\r\n        for (let i = 0, cnt = pens.length; i < cnt; i++) {\r\n            targetPenManager.addPen(pens[i].clone());\r\n        }\r\n\r\n        const srcLines = this.lines,\r\n            targetLines = targetPenManager.lines;\r\n        for (let i = 0, cnt = srcLines.length; i < cnt; i++) {\r\n\r\n            const srcLine = srcLines[i],\r\n                targetLine = targetLines[i];\r\n\r\n            targetLine.y = srcLine.y;\r\n            targetLine.height = srcLine.height;\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen(): Pen {\r\n\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine(): Line {\r\n\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(\r\n        i: number\r\n    ): number {\r\n\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            let line = this.lines[i];\r\n            if (!line) {\r\n                return 0;\r\n            }\r\n            let firstPen = line.firstPen;\r\n            return (firstPen) ? firstPen.startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(\r\n        i: number\r\n    ): number {\r\n\r\n        let lineCount = this.lines.length\r\n        if (i >= lineCount) {\r\n            i = lineCount - 1;\r\n        }\r\n\r\n        for (let li = i; li >= 0; li--) {\r\n            let line = this.lines[li];\r\n            if (line && line.hasPen()) {\r\n                return line.lastPen.endIndex;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getLineWidth(\r\n        i: number\r\n    ): number {\r\n\r\n        let line = this.lines[i];\r\n        return (line) ? line.width : 0; // start from 0\r\n    }\r\n\r\n    getLineHeights(\r\n        out: number[] = []\r\n    ): number[] {\r\n\r\n        this.lines.forEach(function (line) {\r\n            out.push(line.height);\r\n        })\r\n        return out;\r\n    }\r\n\r\n    get lineCount(): number {\r\n\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n\r\n        let arr: string[] = [],\r\n            pens = this.pens;\r\n        for (let i = 0, cnt = pens.length; i < cnt; i++) {\r\n            arr.push(pens[i].plainText);\r\n        }\r\n\r\n        return arr.join();\r\n    }\r\n\r\n    get plainTextLength(): number {\r\n\r\n        let l = 0;\r\n        for (let i = 0, cnt = this.pens.length; i < cnt; i++) {\r\n            l += this.pens[i].plainTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(\r\n        propToTextCallback: ((text: string, prop: PropType, prevProp: PropType) => string),\r\n        propToTextCallbackScope?: any,\r\n        start: number = 0,\r\n        end?: number,\r\n        wrap: boolean = false\r\n    ): string {\r\n\r\n        if (end === undefined) {\r\n            let lastPen = this.lastPen;\r\n            if (!lastPen) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n\r\n\r\n        let arr: string[] = [];\r\n        let previousProp: PropType;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            let pen = this.pens[i];\r\n            let penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n\r\n            let penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            let currentProp = pen.prop;\r\n            let penStartIdx = pen.startIndex;\r\n            let isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (propToTextCallbackScope) {\r\n                arr.push(\r\n                    propToTextCallback.call(propToTextCallbackScope, penTxt, currentProp, previousProp)\r\n                )\r\n            } else {\r\n                arr.push(\r\n                    propToTextCallback(penTxt, currentProp, previousProp)\r\n                )\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return arr.join();\r\n    }\r\n};", "import { Clone } from './Clone';\r\n\r\nexport function MergeRight<T>(\r\n    src: T,\r\n    override: { [name: string]: any },\r\n    out?: { [name: string]: any }\r\n): T {\r\n\r\n    let result = Clone(src, out) as T;\r\n\r\n    for (let key in override) {\r\n        if (result.hasOwnProperty(key)) {\r\n            result[key] = override[key];\r\n        }\r\n    }\r\n\r\n    return result;\r\n};", "import { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { IImageManager, ImageInfo } from './IImageManager';\r\nimport { MergeRight } from '../../../../utils/object/MergeRight';\r\n\r\nexport function AddImageConfig(\r\n    imageManager: IImageManager,\r\n    key: string,\r\n    config: ImageInfo = { key: key }\r\n) {\r\n\r\n    config = MergeRight(DefaultImageInfo, config);\r\n\r\n    let textureManager = TextureManagerInstance.get();\r\n    let texture = textureManager.get(config.key);\r\n    if (!texture) {\r\n        return;\r\n    }\r\n    let frame = texture.getFrame(config.frame);\r\n    if (!frame) {\r\n        return;\r\n    }\r\n\r\n    let width = config.width,\r\n        height = config.height;\r\n    if ((width === undefined) || (height === undefined)) {\r\n        if ((width === undefined) && (height === undefined)) {\r\n            config.width = frame.width;\r\n            config.height = frame.height;\r\n        } else if (width === undefined) {\r\n            config.width = frame.width * (height / frame.height);\r\n        } else if (height === undefined) {\r\n            config.height = frame.height * (width / frame.width);\r\n        }\r\n    }\r\n\r\n    imageManager.images.set(key, config);\r\n}\r\n\r\nconst DefaultImageInfo: ImageInfo = {\r\n    key: undefined,\r\n    frame: undefined,\r\n    width: undefined,\r\n    height: undefined,\r\n    y: 0,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0\r\n}", "import { TextureManagerInstance } from '@phaserjs/phaser/textures/TextureManagerInstance';\r\nimport { IImageManager, ImageInfo } from './IImageManager';\r\nimport { AddImageConfig } from './AddImageConfig';\r\nimport { Frame } from '@phaserjs/phaser/textures/Frame';\r\n\r\nexport class ImageManager implements IImageManager {\r\n    images: Map<string, ImageInfo>\r\n\r\n    constructor() {\r\n        this.images = new Map();\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.images.clear();\r\n    }\r\n\r\n    add(\r\n        key: string | string[] | { [key: string]: ImageInfo },\r\n        config?: ImageInfo\r\n    ): this {\r\n\r\n        if (typeof (key) === 'string') {\r\n            AddImageConfig(this, key, config);\r\n        } else if (Array.isArray(key)) {\r\n            let data = key;\r\n            for (let i = 0, cnt = data.length; i < cnt; i++) {\r\n                AddImageConfig(this, data[i]);\r\n            }\r\n        } else {\r\n            let data = key;\r\n            for (key in data) {\r\n                AddImageConfig(this, key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    remove(\r\n        key: string\r\n    ): this {\r\n\r\n        this.images.delete(key);\r\n        return this;\r\n    }\r\n\r\n    get(\r\n        key: string\r\n    ): ImageInfo {\r\n\r\n        return this.images.get(key);\r\n    }\r\n\r\n    getOuterWidth(\r\n        key: string\r\n    ): number {\r\n\r\n        let imageInfo = this.images.get(key);\r\n        return (imageInfo) ? (imageInfo.width + imageInfo.left + imageInfo.right) : 0;\r\n    }\r\n\r\n    getOuterHeight(\r\n        key: string\r\n    ): number {\r\n\r\n        let imageInfo = this.images.get(key);\r\n        return (imageInfo) ? (imageInfo.height + imageInfo.top + imageInfo.bottom) : 0;\r\n    }\r\n\r\n    getFrame(\r\n        key: string\r\n    ): Frame {\r\n\r\n        let imageInfo = this.images.get(key);\r\n        if (!imageInfo) {\r\n            return;\r\n        }\r\n\r\n        let textureManager = TextureManagerInstance.get();\r\n        let texture = textureManager.get(imageInfo.key);\r\n        if (!texture) {\r\n            return;\r\n        }\r\n\r\n        let frame = texture.getFrame(imageInfo.frame);\r\n        return frame;\r\n    }\r\n\r\n    hasTexture(\r\n        key: string\r\n    ): boolean {\r\n\r\n        return !!this.getFrame(key);\r\n    }\r\n}", "import { IStyle } from '../Types';\r\n\r\nexport function SyncFont(\r\n    context: CanvasRenderingContext2D,\r\n    style: IStyle\r\n): void {\r\n\r\n    context.font = style.font;\r\n}\r\n\r\nexport function SyncStyle(\r\n    context: CanvasRenderingContext2D,\r\n    style: IStyle\r\n): void {\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.textAlign = 'start';\r\n\r\n    context.fillStyle = style.fillStyle;\r\n    context.strokeStyle = style.strokeStyle;\r\n\r\n    context.lineWidth = style.strokeThickness;\r\n    context.lineCap = 'round';\r\n    context.lineJoin = 'round';\r\n    context.imageSmoothingEnabled = style.antialias;\r\n}\r\n\r\nexport function SyncShadow(\r\n    context: CanvasRenderingContext2D,\r\n    style: IStyle,\r\n    enable: boolean\r\n): void {\r\n\r\n    if (enable) {\r\n        context.shadowColor = style.shadowColor;\r\n        context.shadowBlur = style.shadowBlur;\r\n        context.shadowOffsetX = style.shadowOffsetX;\r\n        context.shadowOffsetY = style.shadowOffsetY;\r\n\r\n    } else {\r\n        context.shadowColor = '#000';\r\n        context.shadowBlur = 0;\r\n        context.shadowOffsetX = 0;\r\n        context.shadowOffsetY = 0;\r\n\r\n    }\r\n}", "export function GetTextWidth(\r\n    text: string,\r\n    context: CanvasRenderingContext2D\r\n): number {\r\n\r\n    return context.measureText(text).width;\r\n}\r\n\r\nexport type TextHeightResultType = {\r\n    ascent: number,\r\n    descent: number,\r\n    height: number\r\n}\r\n\r\nexport function GetTextHeightMetrics(\r\n    text: string,\r\n    context: CanvasRenderingContext2D,\r\n    defaultTextHeight: number = 0\r\n): TextHeightResultType {\r\n\r\n    let metrics = context.measureText(text);\r\n    let ascent = metrics.actualBoundingBoxAscent;\r\n    let descent = metrics.actualBoundingBoxDescent;\r\n    if ((!ascent && !descent) || text === '') {\r\n        ascent = defaultTextHeight;\r\n        descent = 0;\r\n    }\r\n\r\n    TextHeightResult.ascent = ascent;\r\n    TextHeightResult.descent = descent;\r\n    TextHeightResult.height = Math.ceil(Math.abs(ascent) + Math.abs(descent));\r\n    return TextHeightResult;\r\n}\r\n\r\nlet TextHeightResult: TextHeightResultType = {\r\n    ascent: 0,\r\n    descent: 0,\r\n    height: 0\r\n}", "import { ICanvasText } from '../canvastext/ICanvasText';\r\nimport { WrapMode } from '../Types';\r\nimport { PropType } from '../parser/BaseParser';\r\nimport { PenManager } from './PenManager';\r\nimport { WrapText, LineInfo, NewLineMode } from '../../../../utils/string/WrapText';\r\nimport { SyncFont, SyncStyle } from '../canvastext/SyncContextMethods';\r\nimport { Clone } from '../../../../utils/object/Clone';\r\nimport { GetTextWidth, GetTextHeightMetrics } from './TextMetrics';\r\n\r\nexport function UpdatePenManager(\r\n    penManager: PenManager,\r\n    text: string,\r\n    canvasText: ICanvasText,\r\n    wrapMode: WrapMode,\r\n    wrapWidth: number\r\n): PenManager {\r\n\r\n    penManager.freePens();\r\n    if (text === \"\") {\r\n        return penManager;\r\n    }\r\n\r\n    let canvas = canvasText.canvas,\r\n        context = canvasText.context,\r\n        parent = canvasText.parent;\r\n\r\n    let match = canvasText.parser.splitText(text),\r\n        curProp: PropType,\r\n        wrapLines: LineInfo[],\r\n        cursorX = 0;\r\n    for (var i = 0, len = match.length; i < len; i++) {\r\n        let result = canvasText.parser.tagTextToProp(match[i], curProp);\r\n        let plainText = result.text;\r\n        curProp = result.prop;\r\n\r\n        if (curProp.img) { // Image tag\r\n            let imgWidth: number,\r\n                imgHeight: number;\r\n            if (canvasText.imageManager) {\r\n                imgWidth = canvasText.imageManager.getOuterWidth(curProp.img);\r\n                imgHeight = canvasText.imageManager.getOuterHeight(curProp.img);\r\n            } else {\r\n                imgWidth = 0;\r\n                imgHeight = 0;\r\n            }\r\n\r\n            if ((wrapWidth > 0) && (wrapMode !== WrapMode.none)) {  // Wrap mode\r\n                if (wrapWidth < (cursorX + imgWidth)) { // Image at next new line\r\n                    penManager.addNewLinePen(NewLineMode.wrapped);\r\n                    cursorX = 0;\r\n                }\r\n            }\r\n            penManager.addImagePen(\r\n                cursorX,       // x\r\n                0,             // y : Add line offsetY later\r\n                imgWidth,      // width\r\n                imgHeight,     // height\r\n                Clone(curProp) // prop\r\n            );\r\n            cursorX += imgWidth;\r\n\r\n        } else if (plainText !== '') { // Text tag\r\n            // Wrap text to lines\r\n            // Save the current context.\r\n            context.save();\r\n            let curStyle = canvasText.parser.propToStyle(\r\n                parent,\r\n                curProp\r\n            );\r\n            SyncFont(context, curStyle);\r\n            SyncStyle(context, curStyle);\r\n            let strokeThickness = curStyle.strokeThickness,\r\n                halfStrokeThickness = strokeThickness / 2;\r\n\r\n            wrapLines = WrapText(plainText, GetTextWidth, context, wrapMode, wrapWidth, cursorX);\r\n\r\n            // Style of wrapped lines are the same, and has the same text height\r\n            let textHeightResult = GetTextHeightMetrics('|M\u00C9q', context);\r\n\r\n            // Add pens\r\n            for (let j = 0, jcnt = wrapLines.length; j < jcnt; j++) {\r\n\r\n                const n = wrapLines[j];\r\n                const textHeight = textHeightResult.height + strokeThickness;\r\n                const ascent = textHeightResult.ascent + halfStrokeThickness;\r\n                const descent = textHeightResult.descent + halfStrokeThickness;\r\n\r\n                penManager.addTextPen(\r\n                    n.text,              // text\r\n                    cursorX,        // x\r\n                    0,              // y : Add line offsetY later\r\n                    n.width,        // width\r\n                    textHeight,     // height\r\n                    ascent,         // ascent\r\n                    descent,        // descent\r\n                    Clone(curProp), // prop\r\n                    n.newLineMode   // new-line mode\r\n                );\r\n\r\n                if (n.newLineMode !== NewLineMode.none) {\r\n                    cursorX = 0;\r\n                } else {\r\n                    cursorX += n.width;\r\n                }\r\n\r\n            }\r\n\r\n            context.restore();\r\n        }\r\n\r\n    };\r\n\r\n    // Update cursorY of each pen in each line\r\n    // Update maxLineWidth, totalLineHeight\r\n    let lines = penManager.lines;\r\n    let lineSpacing = canvasText.parent.lineSpacing;\r\n    let maxLineWidth = 0,\r\n        totalLineHeight = 0;\r\n\r\n    for (let lIdx = 0, lcnt = lines.length; lIdx < lcnt; lIdx++) {\r\n\r\n        const line = lines[lIdx];\r\n        const pens = line.pens;\r\n        const penCnt = pens.length;\r\n\r\n        // Get lineHeight and ascentY\r\n        let ascent = 0;\r\n        let descent = 0;\r\n        for (let pIdx = 0; pIdx < penCnt; pIdx++) {\r\n\r\n            const pen = pens[pIdx];\r\n            ascent = Math.max(ascent, pen.ascent);\r\n            descent = Math.max(descent, pen.descent);\r\n        }\r\n\r\n        const currLineHeight = ascent + descent;\r\n        const cursorY = totalLineHeight + ascent;\r\n\r\n        // Set pen.y\r\n        for (let pIdx = 0; pIdx < penCnt; pIdx++) {\r\n\r\n            pens[pIdx].y += cursorY;\r\n        }\r\n\r\n        line.y = cursorY;\r\n        line.height = currLineHeight;\r\n\r\n        maxLineWidth = Math.max(maxLineWidth, line.width);\r\n        totalLineHeight += currLineHeight + lineSpacing;\r\n    }\r\n\r\n    penManager.maxLineWidth = maxLineWidth;\r\n    penManager.totalLineHeight = totalLineHeight - lineSpacing;\r\n\r\n    return penManager;\r\n}", "const MATH_CONST = {\r\n    PI2: Math.PI * 2,\r\n    HALF_PI: Math.PI * 0.5,\r\n    EPSILON: 1.0e-6,\r\n    DEG_TO_RAD: Math.PI / 180,\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n};\n\nexport { MATH_CONST };\n", "function Area(rect) {\r\n    return rect.width * rect.height;\r\n}\n\nexport { Area };\n", "function Ceil(rect) {\r\n    rect.x = Math.ceil(rect.x);\r\n    rect.y = Math.ceil(rect.y);\r\n    return rect;\r\n}\n\nexport { Ceil };\n", "function CeilAll(rect) {\r\n    rect.x = Math.ceil(rect.x);\r\n    rect.y = Math.ceil(rect.y);\r\n    rect.width = Math.ceil(rect.width);\r\n    rect.height = Math.ceil(rect.height);\r\n    return rect;\r\n}\n\nexport { CeilAll };\n", "function CenterOn(rect, x, y) {\r\n    rect.x = x - (rect.width / 2);\r\n    rect.y = y - (rect.height / 2);\r\n    return rect;\r\n}\n\nexport { CenterOn };\n", "function CenterX(rect) {\r\n    return rect.x + (rect.width / 2);\r\n}\n\nexport { CenterX };\n", "function CenterY(rect) {\r\n    return rect.y + (rect.height / 2);\r\n}\n\nexport { CenterY };\n", "import './Contains.js';\nimport { Rectangle } from './Rectangle.js';\n\nfunction Clone(source) {\r\n    return new Rectangle(source.x, source.y, source.width, source.height);\r\n}\n\nexport { Clone };\n", "import { Contains } from './Contains.js';\n\nfunction ContainsPoint(rect, point) {\r\n    return Contains(rect, point.x, point.y);\r\n}\n\nexport { ContainsPoint };\n", "function ContainsRect(rectA, rectB) {\r\n    if ((rectB.width * rectB.height) > (rectA.width * rectA.height)) {\r\n        return false;\r\n    }\r\n    return ((rectB.x > rectA.x && rectB.x < rectA.right) &&\r\n        (rectB.right > rectA.x && rectB.right < rectA.right) &&\r\n        (rectB.y > rectA.y && rectB.y < rectA.bottom) &&\r\n        (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom));\r\n}\n\nexport { ContainsRect };\n", "function CopyFrom(source, dest) {\r\n    return dest.set(source.x, source.y, source.width, source.height);\r\n}\n\nexport { CopyFrom };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\n\nfunction Decompose(rect, out = []) {\r\n    out.push(new Vec2(rect.x, rect.y), new Vec2(rect.right, rect.y), new Vec2(rect.right, rect.bottom), new Vec2(rect.x, rect.bottom));\r\n    return out;\r\n}\n\nexport { Decompose };\n", "function Equals(rect, toCompare) {\r\n    return (rect.x === toCompare.x &&\r\n        rect.y === toCompare.y &&\r\n        rect.width === toCompare.width &&\r\n        rect.height === toCompare.height);\r\n}\n\nexport { Equals };\n", "function GetAspectRatio(rect) {\r\n    return (rect.height === 0) ? NaN : rect.width / rect.height;\r\n}\n\nexport { GetAspectRatio };\n", "import { CenterX } from './CenterX.js';\nimport { CenterY } from './CenterY.js';\nimport { GetAspectRatio } from './GetAspectRatio.js';\n\nfunction FitInside(target, source) {\r\n    const ratio = GetAspectRatio(target);\r\n    let width = source.width;\r\n    let height = source.height;\r\n    if (ratio < GetAspectRatio(source)) {\r\n        width = source.height * ratio;\r\n    }\r\n    else {\r\n        height = source.width / ratio;\r\n    }\r\n    return target.set(CenterX(source) - (target.width / 2), CenterY(source) - (target.height / 2), width, height);\r\n}\n\nexport { FitInside };\n", "import { CenterX } from './CenterX.js';\nimport { CenterY } from './CenterY.js';\nimport { GetAspectRatio } from './GetAspectRatio.js';\n\nfunction FitOutside(target, source) {\r\n    const ratio = GetAspectRatio(target);\r\n    let width = source.width;\r\n    let height = source.height;\r\n    if (ratio > GetAspectRatio(source)) {\r\n        width = source.height * ratio;\r\n    }\r\n    else {\r\n        height = source.width / ratio;\r\n    }\r\n    return target.set(CenterX(source) - target.width / 2, CenterY(source) - target.height / 2, width, height);\r\n}\n\nexport { FitOutside };\n", "function Floor(rect) {\r\n    rect.x = Math.floor(rect.x);\r\n    rect.y = Math.floor(rect.y);\r\n    return rect;\r\n}\n\nexport { Floor };\n", "function FloorAll(rect) {\r\n    rect.x = Math.floor(rect.x);\r\n    rect.y = Math.floor(rect.y);\r\n    rect.width = Math.floor(rect.width);\r\n    rect.height = Math.floor(rect.height);\r\n    return rect;\r\n}\n\nexport { FloorAll };\n", "import './Contains.js';\nimport { Rectangle } from './Rectangle.js';\nimport { MATH_CONST } from '../../math/const.js';\n\nfunction FromPoints(points, out = new Rectangle()) {\r\n    if (points.length === 0) {\r\n        return out;\r\n    }\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = MATH_CONST.MIN_SAFE_INTEGER;\r\n    let maxY = MATH_CONST.MIN_SAFE_INTEGER;\r\n    for (let i = 0; i < points.length; i++) {\r\n        const px = points[i].x;\r\n        const py = points[i].y;\r\n        minX = Math.min(minX, px);\r\n        minY = Math.min(minY, py);\r\n        maxX = Math.max(maxX, px);\r\n        maxY = Math.max(maxY, py);\r\n    }\r\n    return out.set(minX, minY, maxX - minX, maxY - minY);\r\n}\n\nexport { FromPoints };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\nimport { CenterX } from './CenterX.js';\nimport { CenterY } from './CenterY.js';\n\nfunction GetCenter(rect, out = new Vec2()) {\r\n    return out.set(CenterX(rect), CenterY(rect));\r\n}\n\nexport { GetCenter };\n", "class Line {\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\r\n        this.set(x1, y1, x2, y2);\r\n    }\r\n    set(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        return this;\r\n    }\r\n    get left() {\r\n        return Math.min(this.x1, this.x2);\r\n    }\r\n    set left(value) {\r\n        if (this.x1 <= this.x2) {\r\n            this.x1 = value;\r\n        }\r\n        else {\r\n            this.x2 = value;\r\n        }\r\n    }\r\n    get right() {\r\n        return Math.max(this.x1, this.x2);\r\n    }\r\n    set right(value) {\r\n        if (this.x1 > this.x2) {\r\n            this.x1 = value;\r\n        }\r\n        else {\r\n            this.x2 = value;\r\n        }\r\n    }\r\n    get top() {\r\n        return Math.min(this.y1, this.y2);\r\n    }\r\n    set top(value) {\r\n        if (this.y1 <= this.y2) {\r\n            this.y1 = value;\r\n        }\r\n        else {\r\n            this.y2 = value;\r\n        }\r\n    }\r\n    get bottom() {\r\n        return Math.max(this.y1, this.y2);\r\n    }\r\n    set bottom(value) {\r\n        if (this.y1 > this.y2) {\r\n            this.y1 = value;\r\n        }\r\n        else {\r\n            this.y2 = value;\r\n        }\r\n    }\r\n}\n\nexport { Line };\n", "import { Line } from '../line/Line.js';\n\nfunction GetEdges(rectangle) {\r\n    const { x, y, right, bottom } = rectangle;\r\n    const line1 = new Line(x, y, right, y);\r\n    const line2 = new Line(right, y, right, bottom);\r\n    const line3 = new Line(right, bottom, x, bottom);\r\n    const line4 = new Line(x, bottom, x, y);\r\n    return [line1, line2, line3, line4];\r\n}\n\nexport { GetEdges };\n", "function Perimeter(rect) {\r\n    return 2 * (rect.width + rect.height);\r\n}\n\nexport { Perimeter };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\nimport { Perimeter } from './Perimeter.js';\n\nfunction GetPoint(rectangle, position, out = new Vec2()) {\r\n    if (position <= 0 || position >= 1) {\r\n        return out.set(rectangle.x, rectangle.y);\r\n    }\r\n    let p = Perimeter(rectangle) * position;\r\n    if (position > 0.5) {\r\n        p -= (rectangle.width + rectangle.height);\r\n        if (p <= rectangle.width) {\r\n            return out.set(rectangle.right - p, rectangle.bottom);\r\n        }\r\n        else {\r\n            return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\r\n        }\r\n    }\r\n    else if (p <= rectangle.width) {\r\n        return out.set(rectangle.x + p, rectangle.y);\r\n    }\r\n    else {\r\n        return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\r\n    }\r\n}\n\nexport { GetPoint };\n", "import '../../math/vec2/Vec2.js';\nimport { Perimeter } from './Perimeter.js';\nimport { GetPoint } from './GetPoint.js';\n\nfunction GetPoints(rectangle, step, quantity = 0, out = []) {\r\n    if (!quantity) {\r\n        quantity = Perimeter(rectangle) / step;\r\n    }\r\n    for (let i = 0; i < quantity; i++) {\r\n        out.push(GetPoint(rectangle, i / quantity));\r\n    }\r\n    return out;\r\n}\n\nexport { GetPoints };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\n\nfunction GetSize(rect, out = new Vec2()) {\r\n    return out.set(rect.width, rect.height);\r\n}\n\nexport { GetSize };\n", "import { CenterOn } from './CenterOn.js';\nimport { CenterX } from './CenterX.js';\nimport { CenterY } from './CenterY.js';\n\nfunction Inflate(rect, x, y) {\r\n    const cx = CenterX(rect);\r\n    const cy = CenterY(rect);\r\n    rect.width = rect.width + (x * 2);\r\n    rect.height = rect.height + (y * 2);\r\n    return CenterOn(rect, cx, cy);\r\n}\n\nexport { Inflate };\n", "import './Contains.js';\nimport { Rectangle } from './Rectangle.js';\nimport { RectangleToRectangle } from '../intersects/RectangleToRectangle.js';\n\nfunction Intersection(rectA, rectB, out = new Rectangle()) {\r\n    if (RectangleToRectangle(rectA, rectB)) {\r\n        out.set(Math.max(rectA.x, rectB.x), Math.max(rectA.y, rectB.y), Math.min(rectA.right, rectB.right) - out.x, Math.min(rectA.bottom, rectB.bottom) - out.y);\r\n    }\r\n    else {\r\n        out.set();\r\n    }\r\n    return out;\r\n}\n\nexport { Intersection };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\nimport { Perimeter } from './Perimeter.js';\n\nfunction MarchingAnts(rect, step, quantity, out = []) {\r\n    if (!step && !quantity) {\r\n        return out;\r\n    }\r\n    if (!step) {\r\n        step = Perimeter(rect) / quantity;\r\n    }\r\n    else {\r\n        quantity = Math.round(Perimeter(rect) / step);\r\n    }\r\n    let x = rect.x;\r\n    let y = rect.y;\r\n    let face = 0;\r\n    for (let i = 0; i < quantity; i++) {\r\n        out.push(new Vec2(x, y));\r\n        switch (face) {\r\n            case 0:\r\n                x += step;\r\n                if (x >= rect.right) {\r\n                    face = 1;\r\n                    y += (x - rect.right);\r\n                    x = rect.right;\r\n                }\r\n                break;\r\n            case 1:\r\n                y += step;\r\n                if (y >= rect.bottom) {\r\n                    face = 2;\r\n                    x -= (y - rect.bottom);\r\n                    y = rect.bottom;\r\n                }\r\n                break;\r\n            case 2:\r\n                x -= step;\r\n                if (x <= rect.x) {\r\n                    face = 3;\r\n                    y -= (rect.x - x);\r\n                    x = rect.x;\r\n                }\r\n                break;\r\n            case 3:\r\n                y -= step;\r\n                if (y <= rect.y) {\r\n                    face = 0;\r\n                    y = rect.y;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return out;\r\n}\n\nexport { MarchingAnts };\n", "function MergePoints(target, points) {\r\n    let minX = target.x;\r\n    let maxX = target.right;\r\n    let minY = target.y;\r\n    let maxY = target.bottom;\r\n    for (let i = 0; i < points.length; i++) {\r\n        minX = Math.min(minX, points[i].x);\r\n        maxX = Math.max(maxX, points[i].x);\r\n        minY = Math.min(minY, points[i].y);\r\n        maxY = Math.max(maxY, points[i].y);\r\n    }\r\n    return target.set(minX, minY, maxX - minX, maxY - minY);\r\n}\n\nexport { MergePoints };\n", "function MergeRect(target, source) {\r\n    const minX = Math.min(target.x, source.x);\r\n    const maxX = Math.max(target.right, source.right);\r\n    const minY = Math.min(target.y, source.y);\r\n    const maxY = Math.max(target.bottom, source.bottom);\r\n    return target.set(minX, minY, maxX - minX, maxY - minY);\r\n}\n\nexport { MergeRect };\n", "function MergeXY(target, x, y) {\r\n    const minX = Math.min(target.x, x);\r\n    const maxX = Math.max(target.right, x);\r\n    const minY = Math.min(target.y, y);\r\n    const maxY = Math.max(target.bottom, y);\r\n    return target.set(minX, minY, maxX - minX, maxY - minY);\r\n}\n\nexport { MergeXY };\n", "function Offset(rect, x, y) {\r\n    rect.x += x;\r\n    rect.y += y;\r\n    return rect;\r\n}\n\nexport { Offset };\n", "function OffsetPoint(rect, point) {\r\n    rect.x += point.x;\r\n    rect.y += point.y;\r\n    return rect;\r\n}\n\nexport { OffsetPoint };\n", "function Overlaps(rectA, rectB) {\r\n    return (rectA.x < rectB.right &&\r\n        rectA.right > rectB.x &&\r\n        rectA.y < rectB.bottom &&\r\n        rectA.bottom > rectB.y);\r\n}\n\nexport { Overlaps };\n", "import { MATH_CONST } from './const.js';\n\nfunction DegToRad(degrees) {\r\n    return degrees * MATH_CONST.DEG_TO_RAD;\r\n}\n\nexport { DegToRad };\n", "import '../../math/const.js';\nimport { Vec2 } from '../../math/vec2/Vec2.js';\nimport { CenterX } from './CenterX.js';\nimport { CenterY } from './CenterY.js';\nimport { DegToRad } from '../../math/DegToRad.js';\n\nfunction PerimeterPoint(rectangle, angle, out = new Vec2()) {\r\n    angle = DegToRad(angle);\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n    let dx = (c > 0) ? rectangle.width / 2 : rectangle.width / -2;\r\n    let dy = (s > 0) ? rectangle.height / 2 : rectangle.height / -2;\r\n    if (Math.abs(dx * s) < Math.abs(dy * c)) {\r\n        dy = (dx * s) / c;\r\n    }\r\n    else {\r\n        dx = (dy * c) / s;\r\n    }\r\n    return out.set(dx + CenterX(rectangle), dy + CenterY(rectangle));\r\n}\n\nexport { PerimeterPoint };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\n\nfunction Random(rect, out = new Vec2()) {\r\n    return out.set(rect.x + (Math.random() * rect.width), rect.y + (Math.random() * rect.height));\r\n}\n\nexport { Random };\n", "function Between(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\n\nexport { Between };\n", "import { Vec2 } from '../../math/vec2/Vec2.js';\nimport { ContainsRect } from './ContainsRect.js';\nimport { Between } from '../../math/Between.js';\n\nfunction RandomOutside(outer, inner, out = new Vec2()) {\r\n    if (ContainsRect(outer, inner)) {\r\n        switch (Between(0, 3)) {\r\n            case 0:\r\n                out.x = outer.x + (Math.random() * (inner.right - outer.x));\r\n                out.y = outer.y + (Math.random() * (inner.y - outer.y));\r\n                break;\r\n            case 1:\r\n                out.x = inner.x + (Math.random() * (outer.right - inner.x));\r\n                out.y = inner.bottom + (Math.random() * (outer.bottom - inner.bottom));\r\n                break;\r\n            case 2:\r\n                out.x = outer.x + (Math.random() * (inner.x - outer.x));\r\n                out.y = inner.y + (Math.random() * (outer.bottom - inner.y));\r\n                break;\r\n            case 3:\r\n                out.x = inner.right + (Math.random() * (outer.right - inner.right));\r\n                out.y = outer.y + (Math.random() * (inner.bottom - outer.y));\r\n                break;\r\n        }\r\n    }\r\n    return out;\r\n}\n\nexport { RandomOutside };\n", "function SameDimensions(rect, toCompare) {\r\n    return (rect.width === toCompare.width && rect.height === toCompare.height);\r\n}\n\nexport { SameDimensions };\n", "function Scale(rect, x, y = x) {\r\n    rect.width *= x;\r\n    rect.height *= y;\r\n    return rect;\r\n}\n\nexport { Scale };\n", "import './Contains.js';\nimport { Rectangle } from './Rectangle.js';\n\nfunction Union(rectA, rectB, out = new Rectangle()) {\r\n    const x = Math.min(rectA.x, rectB.x);\r\n    const y = Math.min(rectA.y, rectB.y);\r\n    const w = Math.max(rectA.right, rectB.right) - x;\r\n    const h = Math.max(rectA.bottom, rectB.bottom) - y;\r\n    return out.set(x, y, w, h);\r\n}\n\nexport { Union };\n", "export { Contains } from './Contains.js';\nexport { Rectangle } from './Rectangle.js';\nimport '../../math/const.js';\nimport '../intersects/RectangleToRectangle.js';\nimport '../../math/vec2/Vec2.js';\nexport { Area } from './Area.js';\nexport { Ceil } from './Ceil.js';\nexport { CeilAll } from './CeilAll.js';\nexport { CenterOn } from './CenterOn.js';\nexport { CenterX } from './CenterX.js';\nexport { CenterY } from './CenterY.js';\nexport { Clone } from './Clone.js';\nexport { ContainsPoint } from './ContainsPoint.js';\nexport { ContainsRect } from './ContainsRect.js';\nexport { CopyFrom } from './CopyFrom.js';\nexport { Decompose } from './Decompose.js';\nexport { Equals } from './Equals.js';\nexport { GetAspectRatio } from './GetAspectRatio.js';\nexport { FitInside } from './FitInside.js';\nexport { FitOutside } from './FitOutside.js';\nexport { Floor } from './Floor.js';\nexport { FloorAll } from './FloorAll.js';\nexport { FromPoints } from './FromPoints.js';\nexport { GetCenter } from './GetCenter.js';\nimport '../line/Line.js';\nexport { GetEdges } from './GetEdges.js';\nexport { Perimeter } from './Perimeter.js';\nexport { GetPoint } from './GetPoint.js';\nexport { GetPoints } from './GetPoints.js';\nexport { GetSize } from './GetSize.js';\nexport { Inflate } from './Inflate.js';\nexport { Intersection } from './Intersection.js';\nexport { MarchingAnts } from './MarchingAnts.js';\nexport { MergePoints } from './MergePoints.js';\nexport { MergeRect } from './MergeRect.js';\nexport { MergeXY } from './MergeXY.js';\nexport { Offset } from './Offset.js';\nexport { OffsetPoint } from './OffsetPoint.js';\nexport { Overlaps } from './Overlaps.js';\nimport '../../math/DegToRad.js';\nexport { PerimeterPoint } from './PerimeterPoint.js';\nexport { Random } from './Random.js';\nimport '../../math/Between.js';\nexport { RandomOutside } from './RandomOutside.js';\nexport { SameDimensions } from './SameDimensions.js';\nexport { Scale } from './Scale.js';\nexport { Union } from './Union.js';\n", "import { Rectangle } from '@phaserjs/phaser/geom/rectangle';\r\n\r\nexport class HitArea extends Rectangle {\r\n    name: string;\r\n\r\n    constructor(x: number, y: number, width: number, height: number, name: string) {\r\n\r\n        super(x, y, width, height);\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class HitAreaManager {\r\n    hitAreas: HitArea[] = [];\r\n\r\n    destroy(): void {\r\n\r\n        this.clear();\r\n    }\r\n\r\n    clear(): this {\r\n\r\n        this.hitAreas.length = 0;\r\n        return this;\r\n    }\r\n\r\n    add(\r\n        key: string,\r\n        x: number,\r\n        y: number,\r\n        width: number,\r\n        height: number\r\n    ): this {\r\n\r\n        let area = new HitArea(x, y, width, height, key);\r\n        this.hitAreas.push(area);\r\n        return this;\r\n    }\r\n\r\n    getFirstHitArea(\r\n        x: number,\r\n        y: number\r\n    ): HitArea {\r\n\r\n        for (let i = 0, cnt = this.hitAreas.length; i < cnt; i++) {\r\n            let area = this.hitAreas[i];\r\n            if (area.contains(x, y)) {\r\n                return area;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    //TODO\r\n    //drawBounds(graphics, fillStyle, parent) {\r\n    //    if (fillStyle === undefined) {\r\n    //        fillStyle = 0xffffff;\r\n    //    }\r\n    //\r\n    //    if (parent) {\r\n    //        graphics\r\n    //            .save()\r\n    //            .scaleCanvas(parent.scaleX, parent.scaleY)\r\n    //            .rotateCanvas(parent.rotation)\r\n    //            .translateCanvas(parent.x, parent.y)\r\n    //    }\r\n    //\r\n    //    var hitAreas = this.hitAreas, hitArea;\r\n    //    for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n    //        hitArea = hitAreas[i];\r\n    //        graphics.lineStyle(1, fillStyle).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n    //    }\r\n    //\r\n    //    if (parent) {\r\n    //        graphics\r\n    //            .restore()\r\n    //    }\r\n    //    return this;\r\n    //}\r\n}\r\n", "import { ICanvasText } from './ICanvasText';\r\nimport { Pen } from '../penmanger/Pen';\r\nimport {\r\n    IStyle, FillStyleType,\r\n    HAlignMode, VAlignMode\r\n} from '../Types';\r\nimport { SyncFont, SyncStyle, SyncShadow } from './SyncContextMethods';\r\nimport { HitAreaManager } from '../hitareamanager/HitAreaManager';\r\nimport { PenManager } from '../penmanger/PenManager';\r\nimport { DrawRoundRectangle } from '../../../../utils/canvas/DrawRoundRectangle'\r\n\r\nexport function Draw(\r\n    canvasText: ICanvasText,\r\n    startX: number = 0,\r\n    startY: number = 0,\r\n    textWidth: number = canvasText.textWidth,\r\n    textHeight: number = canvasText.textHeight,\r\n    penManager: PenManager = canvasText.penManager\r\n) {\r\n\r\n    if (canvasText.hitAreaManager) {\r\n        canvasText.hitAreaManager.clear();\r\n    }\r\n\r\n    let totalLineHeight = penManager.totalLineHeight;\r\n    if (totalLineHeight === 0) {\r\n        return;\r\n    }\r\n\r\n    let context = canvasText.context;\r\n    context.save();\r\n\r\n    let parent = canvasText.parent;\r\n\r\n    DrawBackground(canvasText, parent);\r\n\r\n    startX += canvasText.startXOffset;\r\n    startY += canvasText.startYOffset;\r\n\r\n    let halign = parent.halign,\r\n        valign = parent.valign;\r\n\r\n    // Shift offsetY\r\n    let offsetY = startY;\r\n    switch (valign) {\r\n        case VAlignMode.center:\r\n            offsetY += (textHeight - totalLineHeight) / 2;\r\n            break;\r\n\r\n        case VAlignMode.bottom:\r\n            offsetY += textHeight - totalLineHeight - 2;\r\n            break;\r\n    }\r\n\r\n    // Draw each line\r\n    let lines = penManager.lines;\r\n    for (let lineIdx = 0, lineCnt = lines.length; lineIdx < lineCnt; lineIdx++) {\r\n        let line = lines[lineIdx];\r\n        let lineWidth = line.width;\r\n        if (lineWidth === 0) {\r\n            continue;\r\n        }\r\n\r\n        // Shift offsetX\r\n        let offsetX = startX;\r\n        switch (halign) {\r\n            case HAlignMode.center:\r\n                offsetX += (textWidth - lineWidth) / 2;\r\n                break;\r\n\r\n            case HAlignMode.right:\r\n                offsetX += textWidth - lineWidth;\r\n                break;\r\n        }\r\n\r\n        // Draw each pen in this line\r\n        let pens = line.pens;\r\n        for (let penIdx = 0, penCnt = pens.length; penIdx < penCnt; penIdx++) {\r\n            DrawPen(canvasText, pens[penIdx], offsetX, offsetY);\r\n        }\r\n    }\r\n\r\n    context.restore();\r\n};\r\n\r\nexport function DrawPen(\r\n    canvasText: ICanvasText,\r\n    pen: Pen,\r\n    offsetX: number,\r\n    offsetY: number\r\n): void {\r\n\r\n    offsetX += pen.x;\r\n    offsetY += pen.y;\r\n\r\n    let canvas = canvasText.canvas,\r\n        context = canvasText.context,\r\n        defaultStyle = canvasText.parent;\r\n\r\n    context.save();\r\n    let curStyle = canvasText.parser.propToStyle(defaultStyle, pen.prop);\r\n    SyncFont(context, curStyle);\r\n    SyncStyle(context, curStyle);\r\n\r\n    // Underline\r\n    if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n        DrawUnderline(canvasText, offsetX, offsetY, pen.width, curStyle);\r\n    }\r\n\r\n    // Text\r\n    if (pen.isTextPen) {\r\n        DrawText(canvasText, offsetX, offsetY, pen.text, curStyle);\r\n    }\r\n\r\n    // Image\r\n    if (pen.isImagePen) {\r\n        DrawImage(canvasText,\r\n            offsetX,\r\n            offsetY,\r\n            pen.prop.img,\r\n            curStyle\r\n        );\r\n    }\r\n\r\n    context.restore();\r\n\r\n    if (pen.hasAreaMarker && (pen.width > 0)) {\r\n        if (!canvasText.hitAreaManager) {\r\n            canvasText.hitAreaManager = new HitAreaManager();\r\n        }\r\n        canvasText.hitAreaManager.add(\r\n            pen.prop.area, // key\r\n            offsetX, // x\r\n            (offsetY - canvasText.startYOffset), // y\r\n            pen.width, // width\r\n            pen.height // height\r\n        );\r\n    }\r\n};\r\n\r\nexport function DrawBackground(\r\n    canvasText: ICanvasText,\r\n    style: IStyle\r\n): void {\r\n\r\n    let canvas = canvasText.canvas,\r\n        context = canvasText.context;\r\n\r\n    const fillStyle = style.backgroundFillStyle,\r\n        strokeStyle = style.backgroundStrokeStyle;\r\n    if (fillStyle || strokeStyle) {\r\n        const lineWidth = style.backgroundStrokeThickness,\r\n            halfLineWidth = lineWidth / 2,\r\n            radius = style.cornerRadius,\r\n            x = halfLineWidth,\r\n            y = halfLineWidth,\r\n            width = canvas.width - lineWidth,\r\n            height = canvas.height - lineWidth;\r\n\r\n        DrawRoundRectangle(\r\n            canvas, context,\r\n            x, y,\r\n            width, height,\r\n            radius,\r\n            fillStyle, strokeStyle,\r\n            lineWidth\r\n        )\r\n\r\n    } else {\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n};\r\n\r\nexport function DrawUnderline(\r\n    canvasText: ICanvasText,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    style: IStyle\r\n): void {\r\n\r\n    y += style.underlineOffsetY - (style.underlineThickness / 2);\r\n\r\n    let context = canvasText.context;\r\n    let savedLineCap = context.lineCap;\r\n    context.lineCap = 'butt';\r\n    context.beginPath();\r\n    context.strokeStyle = style.underlineStyle;\r\n    context.lineWidth = style.underlineThickness;\r\n    context.moveTo(x, y);\r\n    context.lineTo((x + width), y);\r\n    context.stroke();\r\n    context.lineCap = savedLineCap;\r\n};\r\n\r\nexport function DrawText(\r\n    canvasText: ICanvasText,\r\n    x: number,\r\n    y: number,\r\n    text: string,\r\n    style: IStyle\r\n): void {\r\n\r\n    let context = canvasText.context;\r\n    if (style.strokeThickness) {\r\n        SyncShadow(context, style, style.shadowStroke);\r\n        context.strokeText(text, x, y);\r\n    }\r\n\r\n    if (style.fillStyle && (style.fillStyle !== 'none')) {\r\n        SyncShadow(context, style, style.shadowFill);\r\n        context.fillText(text, x, y);\r\n    }\r\n};\r\n\r\nexport function DrawImage(\r\n    canvasText: ICanvasText,\r\n    x: number,\r\n    y: number,\r\n    imgKey: string,\r\n    style: IStyle\r\n): void {\r\n\r\n    let imageManager = canvasText.imageManager;\r\n    if (!imageManager) {\r\n        return;\r\n    }\r\n\r\n    let imgInfo = imageManager.get(imgKey);\r\n    let frame = imageManager.getFrame(imgKey);\r\n\r\n    x += imgInfo.left;\r\n    y += imgInfo.y - imgInfo.height;\r\n\r\n    let context = canvasText.context;\r\n    context.drawImage(\r\n        frame.texture.image as HTMLCanvasElement,\r\n        frame.x, frame.y, frame.width, frame.height,\r\n        x, y, imgInfo.width, imgInfo.height\r\n    );\r\n};", "import {\r\n    ICanvasText,\r\n    IConfig\r\n} from './ICanvasText';\r\nimport { IStyle, WrapMode } from '../Types';\r\nimport { IBaseText } from '../IBaseText';\r\nimport { BaseParser } from '../parser/BaseParser';\r\nimport { Stack as Pool } from '../../../../utils/struct/Stack';\r\nimport { PenManager, PenPoolType } from '../penmanger/PenManager';\r\nimport { Line } from '../penmanger/Line';\r\nimport { ImageManager } from '../imagemanager/ImageManager';\r\nimport { ImageInfo } from '../imagemanager/IImageManager';\r\nimport { HitAreaManager } from '../hitareamanager/HitAreaManager';\r\n// import SetInteractive from './SetInteractive';\r\nimport { Pen } from '../penmanger/Pen';\r\nimport { UpdatePenManager } from '../penmanger/UpdatePenManager';\r\nimport { Draw } from './Draw';\r\n\r\nexport class CanvasText implements ICanvasText {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    resolution: number;\r\n\r\n    parent: IBaseText;\r\n\r\n    parser: BaseParser;\r\n    penManager: PenManager;\r\n    _tmpPenManager: PenManager\r\n    penPool: PenPoolType;\r\n    imageManager: ImageManager;\r\n    hitAreaManager: HitAreaManager;\r\n\r\n    constructor({\r\n        canvas,\r\n        context,\r\n        parent,\r\n        parser,\r\n        penPool = new Pool<Pen>()\r\n    }: IConfig) {\r\n\r\n        this.canvas = canvas;\r\n        this.context = context;\r\n        this.parser = parser;\r\n        this.parent = parent;\r\n\r\n        this.penPool = penPool;\r\n        this.penManager = new PenManager({\r\n            penPool: penPool\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.canvas = null;\r\n        this.context = null;\r\n        this.parser = null;\r\n        this.parent = null;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = null;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = null;\r\n        }\r\n        if (this.imageManager) {\r\n            this.imageManager.destroy();\r\n            this.imageManager = null;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = null;\r\n        }\r\n    }\r\n\r\n    get textWidth() {\r\n        return this.penManager.maxLineWidth;\r\n    }\r\n\r\n    get textHeight() {\r\n        return this.penManager.totalLineHeight;\r\n    }\r\n\r\n    updatePenManager(\r\n        text: string,\r\n        wrapMode: WrapMode,\r\n        wrapWidth: number,\r\n        penManager: PenManager = this.penManager\r\n    ): PenManager {\r\n\r\n        return UpdatePenManager(penManager, text, this, wrapMode, wrapWidth);\r\n    }\r\n\r\n    draw(\r\n        startX: number = 0,\r\n        startY: number = 0,\r\n        textWidth: number = this.textWidth,\r\n        textHeight: number = this.textHeight\r\n    ): this {\r\n\r\n        Draw(this, startX, startY, textWidth, textHeight, this.penManager);\r\n        return this;\r\n    }\r\n\r\n    get startXOffset() {\r\n        let strokeStyle = this.parent.strokeStyle;\r\n        let strokeThickness = this.parent.strokeThickness;\r\n        return ((strokeStyle != null) && (strokeThickness != null)) ? (strokeThickness / 2) : 0;\r\n    }\r\n\r\n    get startYOffset() {\r\n        let strokeStyle = this.parent.strokeStyle;\r\n        let strokeThickness = this.parent.strokeThickness;\r\n        return ((strokeStyle != null) && (strokeThickness != null)) ? (strokeThickness / 2) : 0;\r\n    }\r\n\r\n    get lines(): Line[] {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = new PenManager({\r\n                penPool: this.penPool\r\n            });\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number\r\n    ): string {\r\n\r\n        let plainText: string;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            plainText = this.parser.splitText(text, true).join('');\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(\r\n        text?: string,\r\n        retPenManager?: PenManager\r\n    ): PenManager {\r\n\r\n        if (text === undefined) {\r\n            return this.clonePenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = new PenManager({\r\n                penPool: this.penPool\r\n            });\r\n        }\r\n\r\n        this.updatePenManager(\r\n            text,\r\n            this.parent.wrapMode,\r\n            this.parent.wrapWidth,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number,\r\n        wrap?: boolean\r\n    ): string {\r\n\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(\r\n                this.parser.propToTagText,\r\n                this.parser,\r\n                start, end, wrap);\r\n        }\r\n\r\n        let penManager = this.tmpPenManager;\r\n        this.updatePenManager(\r\n            text,\r\n            this.parent.wrapMode,\r\n            this.parent.wrapWidth,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(\r\n            this.parser.propToTagText,\r\n            this.parser,\r\n            start, end, wrap);\r\n    }\r\n\r\n    clonePenManager(\r\n        ret: PenManager,\r\n        src: PenManager = this.penManager\r\n    ): PenManager {\r\n\r\n        return src.clone(ret);\r\n    }\r\n\r\n    getLastPen(\r\n        penManager: PenManager = this.penManager\r\n    ): Pen {\r\n\r\n        return penManager.lastPen;\r\n    }\r\n\r\n    addImageInfo(\r\n        key: string | string[] | { [key: string]: ImageInfo },\r\n        config?: ImageInfo\r\n    ): this {\r\n\r\n        if (this.imageManager === undefined) {\r\n            this.imageManager = new ImageManager();\r\n        }\r\n\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n};\r\n", "import { IBaseText } from './IBaseText';\r\nimport { DIRTY_CONST } from '@phaserjs/phaser/gameobjects/DIRTY_CONST';\r\n\r\nexport function UpdateText(\r\n    baseText: IBaseText\r\n):void {\r\n\r\n    let canvasText = baseText.canvasText;\r\n    baseText.canvasText.updatePenManager(\r\n        baseText.text,\r\n        baseText.wrapMode,\r\n        baseText.wrapWidth\r\n    );\r\n\r\n    // Resize\r\n    let padding = baseText.padding;\r\n    let textWidth: number,\r\n        textHeight: number,\r\n        displayWidth: number,\r\n        displayHeight: number;\r\n    if (baseText.fixedWidth === 0) {\r\n        textWidth = canvasText.textWidth;\r\n        displayWidth = textWidth + padding.left + padding.right;\r\n    }\r\n    else {\r\n        displayWidth = baseText.fixedWidth;\r\n        textWidth = displayWidth - padding.left - padding.right;\r\n        if (textWidth < canvasText.textWidth) {\r\n            textWidth = canvasText.textWidth;\r\n        }\r\n    }\r\n    if (baseText.fixedHeight === 0) {\r\n        textHeight = canvasText.textHeight;\r\n        displayHeight = textHeight + padding.top + padding.bottom;\r\n    }\r\n    else {\r\n        displayHeight = baseText.fixedHeight;\r\n        textHeight = displayHeight - padding.top - padding.bottom;\r\n        if (textHeight < canvasText.textHeight) {\r\n            textHeight = canvasText.textHeight;\r\n        }\r\n    }\r\n\r\n    let resolution = baseText.resolution;\r\n    let canvasWidth = Math.ceil(displayWidth * resolution);\r\n    let canvasHeight = Math.ceil(displayHeight * resolution);\r\n    let canvas = baseText.canvas;\r\n    if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n\r\n        baseText.texture.setSize(displayWidth, displayHeight);\r\n        baseText.setSize(displayWidth, displayHeight);\r\n    }\r\n\r\n    // Draw content on canvas\r\n    let context = baseText.context;\r\n    context.save();\r\n    context.scale(resolution, resolution);\r\n\r\n    canvasText.draw(\r\n        padding.left,\r\n        padding.top,\r\n        textWidth,\r\n        textHeight\r\n    );\r\n\r\n    context.restore();\r\n\r\n    // Update texture\r\n    if (baseText.texture.binding) {\r\n        baseText.texture.binding.update();\r\n    }\r\n\r\n    baseText.setDirty(DIRTY_CONST.TEXTURE);\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { FillStyleType, IRadiusConfig } from './Types';\r\n\r\nexport function SetBackgroundStyle(\r\n    baseText: IBaseText,\r\n    fillStyle: FillStyleType,\r\n    strokeStyle: FillStyleType,\r\n    strokeThickness: number = 0,\r\n    radius: IRadiusConfig | number = 0\r\n) {\r\n    if (!strokeStyle) {\r\n        strokeThickness = 0;\r\n    }\r\n\r\n    baseText.backgroundFillStyle = fillStyle;\r\n    baseText.backgroundStrokeStyle = strokeStyle;\r\n    baseText.backgroundStrokeThickness = strokeThickness;\r\n    baseText.cornerRadius = radius;\r\n}", "import { IBaseText, PaddingConfigType } from './IBaseText';\r\n\r\nexport function SetPadding(\r\n    baseText: IBaseText,\r\n    left: number | PaddingConfigType,\r\n    right?: number,\r\n    top?: number,\r\n    bottom?: number\r\n) {\r\n\r\n    const padding = baseText.padding;\r\n    if (typeof (left) === 'number') {\r\n        padding.left = left;\r\n        padding.right = (right === undefined) ? left : right;\r\n        padding.top = (top === undefined) ? left : top;\r\n        padding.bottom = (bottom === undefined) ? left : bottom;\r\n    } else {\r\n        let paddingConfig = left;\r\n        padding.left = paddingConfig.left || 0;\r\n        padding.right = paddingConfig.right || 0;\r\n        padding.top = paddingConfig.top || 0;\r\n        padding.bottom = paddingConfig.bottom || 0;\r\n    }\r\n}", "import { IBaseText } from './IBaseText';\r\n\r\nexport function SetFont(\r\n    baseText: IBaseText,\r\n    fontFamily: string,\r\n    fontSize: string | number\r\n): void {\r\n\r\n    if (fontFamily) {\r\n        SetFontFamily(baseText, fontFamily);\r\n    }\r\n\r\n    if (fontSize) {\r\n        SetFontSize(baseText, fontSize);\r\n    }\r\n}\r\n\r\nexport function SetFontFamily(\r\n    baseText: IBaseText,\r\n    fontFamily: string\r\n) {\r\n\r\n    baseText.fontFamily = fontFamily;\r\n}\r\n\r\nexport function SetFontSize(\r\n    baseText: IBaseText,\r\n    fontSize: string | number\r\n) {\r\n\r\n    if (typeof (fontSize) === 'number') {\r\n        fontSize = `${fontSize}px`;\r\n    }\r\n    baseText.fontSize = fontSize;\r\n}\r\n\r\n\r\nimport { FillStyleType } from './Types';\r\n\r\nexport function SetFillStyle(\r\n    baseText: IBaseText,\r\n    style?: FillStyleType\r\n) {\r\n\r\n    baseText.fillStyle = style;\r\n}\r\n\r\nexport function SetStrokeStyle(\r\n    baseText: IBaseText,\r\n    style?: FillStyleType,\r\n    thickness: number = 2\r\n) {\r\n\r\n    baseText.strokeStyle = style;\r\n    baseText.strokeThickness = thickness;\r\n}\r\n\r\nexport function SetShadow(\r\n    baseText: IBaseText,\r\n    enableFillShadow: boolean,\r\n    enableStrokeShadow: boolean,\r\n    color: string = '#000',\r\n    blur: number = 5,\r\n    offsetX: number = 0,\r\n    offsetY: number = 0\r\n) {\r\n\r\n    baseText.shadowFill = enableFillShadow;\r\n    baseText.shadowStroke = enableStrokeShadow;\r\n    baseText.shadowColor = color;\r\n    baseText.shadowBlur = blur;\r\n    baseText.shadowOffsetX = offsetX;\r\n    baseText.shadowOffsetY = offsetY;\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { WrapMode } from './Types';\r\n\r\nexport function SetFixedSize(\r\n    baseText: IBaseText,\r\n    width: number,\r\n    height?: number\r\n): void {\r\n\r\n    baseText.fixedWidth = width;\r\n    baseText.fixedHeight = height;\r\n\r\n    if (baseText.wrapMode !== WrapMode.none) {\r\n        const padding = baseText.padding;\r\n        const wrapWidth = width - padding.left - padding.right;\r\n        baseText.wrapWidth = Math.max(wrapWidth, 0);\r\n    }\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { WrapMode, WrapModeString } from './Types';\r\n\r\nexport function SetWrapMode(\r\n    baseText: IBaseText,\r\n    wrapMode: WrapMode | WrapModeString,\r\n    wrapWidth: number = 0\r\n): void {\r\n\r\n    if (typeof (wrapMode) === 'string') {\r\n        wrapMode = WrapMode[wrapMode];\r\n    }\r\n    baseText.wrapMode = wrapMode;\r\n\r\n    if (wrapMode !== WrapMode.none) {\r\n        const width = baseText.fixedWidth;\r\n        if (width > 0) {\r\n            const padding = baseText.padding;\r\n            wrapWidth = width - padding.left - padding.right;\r\n        }\r\n    }\r\n    baseText.wrapWidth = wrapWidth;\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { FillStyleType } from './Types';\r\n\r\nexport function SetUnderline(\r\n    baseText: IBaseText,\r\n    style: FillStyleType,\r\n    thickness: number = 2,\r\n    offsetY: number = 0\r\n): void {\r\n\r\n    baseText.underlineStyle = style;\r\n    baseText.underlineThickness = thickness;\r\n    baseText.underlineOffsetY = offsetY;\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { ImageInfo } from './imagemanager/IImageManager'\r\n\r\nexport function AddImageInfo(\r\n    baseText: IBaseText,\r\n    key: string | string[] | { [key: string]: ImageInfo },\r\n    config?: ImageInfo\r\n) {\r\n\r\n    baseText.canvasText.addImageInfo(key, config);\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { SplitTextRegExp } from '../../../utils/string/WrapText';\r\n\r\nexport function GetWrappedText(\r\n    baseText: IBaseText,\r\n    text?: string,\r\n    start?: number,\r\n    end?: number\r\n): string[] {\r\n\r\n    text = baseText.canvasText.getText(text, start, end, true);\r\n    return text.split(SplitTextRegExp);\r\n}\r\n\r\nexport function GetPlainText(\r\n    baseText: IBaseText,\r\n    text?: string,\r\n    start?: number,\r\n    end?: number\r\n): string {\r\n\r\n    return baseText.canvasText.getPlainText(text, start, end);\r\n}\r\n\r\nexport function GetText(\r\n    baseText: IBaseText,\r\n    text?: string,\r\n    start?: number,\r\n    end?: number\r\n): string {\r\n\r\n    return baseText.canvasText.getText(text, start, end, false);\r\n}\r\n\r\nexport function GetSubString(\r\n    baseText: IBaseText,\r\n    text?: string,\r\n    start?: number,\r\n    end?: number\r\n): string {\r\n\r\n    return baseText.canvasText.getText(text, start, end, false);\r\n}", "import { IBaseText } from './IBaseText';\r\nimport { PenManager } from './penmanger/PenManager';\r\n\r\nexport function ClonePenManager(\r\n    baseText: IBaseText,\r\n    penManager?: PenManager\r\n): PenManager {\r\n\r\n    return baseText.canvasText.clonePenManager(penManager);\r\n}\r\n\r\nexport function GetPenManager(\r\n    baseText: IBaseText,\r\n    text?: string,\r\n    penManager?: PenManager\r\n): PenManager {\r\n\r\n    return baseText.canvasText.getPenManager(text, penManager);\r\n}", "import { CanvasTexture } from '@phaserjs/phaser/textures/types/CanvasTexture';\r\nimport { GameInstance } from '@phaserjs/phaser/GameInstance';\r\nimport { IContainer } from '@phaserjs/phaser/gameobjects/container/IContainer';\r\nimport { Sprite } from '@phaserjs/phaser/gameobjects/sprite/Sprite';\r\n\r\nimport { IBaseText, IConfig, PaddingConfigType } from './IBaseText';\r\nimport {\r\n    IStyle, IRadiusConfig,\r\n    FillStyleType,\r\n    WrapMode, WrapModeString,\r\n    HAlignMode, VAlignMode\r\n} from './Types';\r\nimport { CanvasText } from './canvastext/CanvasText';\r\nimport { ImageInfo } from './imagemanager/IImageManager';\r\nimport { PenManager } from './penmanger/PenManager';\r\nimport { BaseParser } from './parser/BaseParser';\r\n\r\nimport { UpdateText } from './UpdateText';\r\nimport { SetBackgroundStyle } from './SetBackgroundStyle';\r\nimport { SetPadding } from './SetPadding';\r\nimport {\r\n    SetFont, SetFontFamily, SetFontSize,\r\n    SetFillStyle, SetStrokeStyle, SetShadow\r\n} from './SetFontMethods';\r\nimport { SetFixedSize } from './SetFixedSize';\r\nimport { SetWrapMode } from './SetWrapMode';\r\nimport { SetUnderline } from './SetUnderline';\r\nimport { AddImageInfo } from './AddImageInfo';\r\nimport { GetWrappedText, GetPlainText, GetText, GetSubString } from './GetTextMethods';\r\nimport { ClonePenManager, GetPenManager } from './PenManagerMethods';\r\n\r\nexport class BaseText extends Sprite implements IBaseText {\r\n\r\n    private _text: string;\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    canvasText: CanvasText;\r\n\r\n    backgroundFillStyle: FillStyleType;\r\n    backgroundStrokeStyle: FillStyleType;\r\n    backgroundStrokeThickness: number;\r\n    cornerRadius: IRadiusConfig;\r\n\r\n    antialias: boolean = false;\r\n\r\n    fontFamily: string = 'monospace';\r\n    fontSize: string = '16px';\r\n    fillStyle: FillStyleType = '#fff';\r\n    strokeStyle: FillStyleType;\r\n    strokeThickness: number = 1;\r\n\r\n    shadowStroke: boolean = false;\r\n    shadowFill: boolean = false;\r\n    shadowColor: string = '#000';\r\n    shadowBlur: number = 4;\r\n    shadowOffsetX: number = 0;\r\n    shadowOffsetY: number = 0;\r\n\r\n    underlineStyle: FillStyleType = '#fff';\r\n    underlineThickness: number = 1;\r\n    underlineOffsetY: number = 0;\r\n\r\n    halign: HAlignMode = HAlignMode.left;\r\n    valign: VAlignMode = VAlignMode.top;\r\n    lineSpacing: number = 0;\r\n    wrapMode: WrapMode = WrapMode.none;\r\n    wrapWidth: number = 0;\r\n    fixedWidth: number = 0;\r\n    fixedHeight: number = 0;\r\n    resolution: number;\r\n    padding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n\r\n    constructor(\r\n        x: number,\r\n        y: number,\r\n        text: string | string[] = '',\r\n        {\r\n            backgroundFillStyle,\r\n            backgroundStrokeStyle,\r\n            backgroundStrokeThickness,\r\n            cornerRadius = 0,\r\n            padding,\r\n\r\n            fontFamily,\r\n            fontSize,\r\n            fillStyle,\r\n            strokeStyle,\r\n            strokeThickness = 1,\r\n\r\n            underlineStyle,\r\n            underlineThickness = 1,\r\n            underlineOffsetY = 0,\r\n\r\n            images\r\n        }: IConfig = {},\r\n        parser?: BaseParser\r\n    ) {\r\n\r\n        super(x, y, CanvasTexture());\r\n\r\n        this.type = 'rexText';\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.resolution = game.renderer.resolution;\r\n\r\n        this.canvas = this.texture.image as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        this.canvasText = new CanvasText({\r\n            canvas: this.canvas,\r\n            context: this.context,\r\n            parent: this,\r\n            parser: parser\r\n        });\r\n\r\n        SetBackgroundStyle(this, backgroundFillStyle, backgroundStrokeStyle, backgroundStrokeThickness, cornerRadius);\r\n\r\n        if (padding) {\r\n            SetPadding(this, padding)\r\n        }\r\n\r\n        if (fontFamily) {\r\n            SetFontFamily(this, fontFamily);\r\n        }\r\n        if (fontSize) {\r\n            SetFontSize(this, fontSize);\r\n        }\r\n\r\n        if (fillStyle) {\r\n            SetFillStyle(this, fillStyle);\r\n        }\r\n\r\n        if (strokeStyle) {\r\n            SetStrokeStyle(this, strokeStyle, strokeThickness);\r\n        }\r\n\r\n        if (underlineStyle) {\r\n            SetUnderline(this, underlineStyle, underlineThickness, underlineOffsetY);\r\n        }\r\n\r\n        if (images) {\r\n            AddImageInfo(this, images);\r\n        }\r\n\r\n        this.setText(text);\r\n    }\r\n\r\n    destroy(reparentChildren?: IContainer): void {\r\n\r\n        this.texture.destroy();\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        super.destroy(reparentChildren);\r\n    }\r\n\r\n    updateText(): this {\r\n\r\n        UpdateText(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    get text(): string {\r\n\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n\r\n        this.setText(value);\r\n    }\r\n\r\n    setText(\r\n        value: string | string[] = '',\r\n        updateTexture: boolean = true\r\n    ): this {\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            if (updateTexture) {\r\n                this.updateText();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setBackgroundStyle(\r\n        fillStyle: FillStyleType,\r\n        strokeStyle: FillStyleType,\r\n        strokeThickness: number = 2,\r\n        radius: IRadiusConfig | number = 0\r\n    ): this {\r\n\r\n        SetBackgroundStyle(this, fillStyle, strokeStyle, strokeThickness, radius);\r\n        return this;\r\n    }\r\n\r\n    setPadding(\r\n        left: number | PaddingConfigType,\r\n        right?: number,\r\n        top?: number,\r\n        bottom?: number\r\n    ): this {\r\n\r\n        SetPadding(this, left, right, top, bottom);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFont(\r\n        fontFamily: string,\r\n        fontSize: string | number\r\n    ): this {\r\n\r\n        SetFont(this, fontFamily, fontSize);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFillStyle(\r\n        style?: FillStyleType\r\n    ): this {\r\n\r\n        SetFillStyle(this, style);\r\n\r\n        return this;\r\n    }\r\n\r\n    setStrokeStyle(\r\n        style?: FillStyleType,\r\n        thickness: number = 2\r\n    ) {\r\n\r\n        SetStrokeStyle(this, style, thickness);\r\n\r\n        return this;\r\n    }\r\n\r\n    setShadow(\r\n        enableFillShadow: boolean,\r\n        enableStrokeShadow: boolean,\r\n        color: string = '#000',\r\n        blur: number = 5,\r\n        offsetX: number = 0,\r\n        offsetY: number = 0\r\n    ): this {\r\n\r\n        SetShadow(this, enableFillShadow, enableStrokeShadow, color, blur, offsetX, offsetY);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFixedSize(\r\n        width: number,\r\n        height: number\r\n    ): this {\r\n\r\n        SetFixedSize(this, width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    resize(\r\n        width: number,\r\n        height: number\r\n    ): this {\r\n\r\n        SetFixedSize(this, width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    setWrapMode(\r\n        wrapMode: WrapMode | WrapModeString,\r\n        wrapWidth: number = 0\r\n    ): this {\r\n\r\n        SetWrapMode(this, wrapMode, wrapWidth);\r\n        return this;\r\n    }\r\n\r\n    setUnderline(\r\n        style: FillStyleType,\r\n        thickness: number = 2,\r\n        offsetY: number = 0\r\n    ): this {\r\n\r\n        SetUnderline(this, style, thickness, offsetY);\r\n        return this;\r\n    }\r\n\r\n    addImageInfo(\r\n        key: string | string[] | { [key: string]: ImageInfo },\r\n        config?: ImageInfo\r\n    ): this {\r\n\r\n        AddImageInfo(this, key, config);\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number\r\n    ): string[] {\r\n\r\n        return GetWrappedText(this, text, start, end);\r\n    }\r\n\r\n    getPlainText(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number\r\n    ): string {\r\n\r\n        return GetPlainText(this, text, start, end);\r\n    }\r\n\r\n    getText(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number\r\n    ): string {\r\n\r\n        return GetText(this, text, start, end);\r\n    }\r\n\r\n    getSubString(\r\n        text?: string,\r\n        start?: number,\r\n        end?: number\r\n    ): string {\r\n\r\n        return GetSubString(this, text, start, end);\r\n    }\r\n\r\n    clonePenManager(\r\n        penManager?: PenManager\r\n    ): PenManager {\r\n\r\n        return ClonePenManager(this, penManager);\r\n    }\r\n\r\n    getPenManager(\r\n        text?: string,\r\n        penManager?: PenManager\r\n    ): PenManager {\r\n\r\n        return GetPenManager(this, text, penManager);\r\n    }\r\n}", "import { IStyle } from '../Types';\r\n\r\nexport type PropType = { [key: string]: any };\r\n\r\nexport abstract class BaseParser {\r\n\r\n    abstract splitText(\r\n        text: string,\r\n        isPlainTextMode?: boolean\r\n    ): string[];\r\n\r\n    abstract tagTextToProp(\r\n        text: string,\r\n        prevProp: PropType\r\n    ): { text: string, prop: PropType };\r\n\r\n    abstract propToStyle(\r\n        defaultStyle: IStyle,\r\n        prop: PropType\r\n    ): IStyle;\r\n\r\n    abstract propToTagText(\r\n        text: string,\r\n        prop: PropType,\r\n        prevProp: PropType\r\n    ): string;\r\n}\r\n\r\nexport const ContextStyleResult: IStyle = {\r\n    font: undefined,\r\n    fontFamily: undefined,\r\n    fontStyle: undefined,\r\n    fontSize: undefined,\r\n    fillStyle: undefined,\r\n\r\n    strokeStyle: undefined,\r\n    strokeThickness: undefined,\r\n\r\n    shadowColor: undefined,\r\n    shadowOffsetX: undefined,\r\n    shadowOffsetY: undefined,\r\n    shadowBlur: undefined,\r\n    shadowStroke: undefined,\r\n    shadowFill: undefined,\r\n\r\n    underlineStyle: undefined,\r\n    underlineThickness: undefined,\r\n    underlineOffsetY: undefined,\r\n\r\n    image: undefined,\r\n}", "import {\r\n    BaseParser,\r\n    ContextStyleResult\r\n} from '../basetext/parser/BaseParser';\r\nimport { IStyle } from '../basetext/Types';\r\n\r\ntype PropType = {\r\n    b?: true,\r\n    i?: true,\r\n    size?: string,\r\n    color?: string,\r\n    stroke?: string | true,\r\n    u?: string | true,\r\n    shadow?: true,\r\n    img?: string,\r\n    area?: string\r\n}\r\n\r\nexport class Parser extends BaseParser {\r\n    splitText(\r\n        text: string,\r\n        isPlainTextMode: boolean = false\r\n    ): string[] {\r\n\r\n        let result: string[] = [];\r\n\r\n        let charIdx = 0;\r\n        while (true) {\r\n            const arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            const m = arr[0];\r\n            const matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n\r\n            if (!isPlainTextMode) {\r\n                result.push(m);\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n        let totalLen = text.length;\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(\r\n        text: string,\r\n        prevProp: PropType\r\n    ): { text: string, prop: PropType } {\r\n\r\n        let plainText: string,\r\n            innerMatch: RegExpMatchArray;\r\n\r\n        if (prevProp == null) {\r\n            prevProp = {};\r\n        }\r\n\r\n        // close image tag\r\n        if (prevProp.img) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'img');\r\n        }\r\n        // Check if current fragment is a class tag\r\n        if (RE_BLOD_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'b', true);\r\n            plainText = '';\r\n        } else if (RE_BLOD_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'b');\r\n            plainText = '';\r\n\r\n        } else if (RE_ITALICS_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'i', true);\r\n            plainText = '';\r\n        } else if (RE_ITALICS_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'i');\r\n            plainText = '';\r\n\r\n        } else if (RE_SIZE_OPEN.test(text)) {\r\n            innerMatch = text.match(RE_SIZE_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'size', innerMatch[1] + 'px');\r\n            plainText = '';\r\n        } else if (RE_SIZE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'size');\r\n            plainText = '';\r\n\r\n        } else if (RE_COLOR_OPEN.test(text)) {\r\n            innerMatch = text.match(RE_COLOR_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'color', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_COLOR_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'color');\r\n            plainText = '';\r\n\r\n        } else if (RE_UNDERLINE_OPEN.test(text)) {\r\n            innerMatch = text.match(RE_UNDERLINE_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'u', true);\r\n            plainText = '';\r\n        } else if (RE_UNDERLINE_OPENC.test(text)) {\r\n            innerMatch = text.match(RE_UNDERLINE_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'u', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_UNDERLINE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'u');\r\n            plainText = '';\r\n\r\n        } else if (RE_SHADOW_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'shadow', true);\r\n            plainText = '';\r\n        } else if (RE_SHADOW_OPENC.test(text)) {\r\n            innerMatch = text.match(RE_SHADOW_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'shadow', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_SHADOW_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'shadow');\r\n            plainText = '';\r\n\r\n        } else if (RE_STROKE_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'stroke', true);\r\n            plainText = '';\r\n        } else if (RE_STROKE_OPENC.test(text)) {\r\n            innerMatch = text.match(RE_STROKE_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'stroke', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_STROKE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'stroke');\r\n            plainText = '';\r\n\r\n        } else if (RE_IMAGE_OPEN.test(text)) {\r\n            innerMatch = text.match(RE_IMAGE_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'img', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_IMAGE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'img');\r\n            plainText = '';\r\n\r\n        } else if (RE_AREA_OPEN.test(text)) {\r\n            innerMatch = text.match(RE_AREA_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'area', innerMatch[1]);\r\n            plainText = '';\r\n        } else if (RE_AREA_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'area');\r\n            plainText = '';\r\n\r\n        } else {\r\n            plainText = text\r\n        }\r\n\r\n        let result = TagTextToPropResult;\r\n        result.text = plainText;\r\n        result.prop = prevProp;\r\n        return result;\r\n    }\r\n\r\n    propToStyle(\r\n        defaultStyle: IStyle,\r\n        prop: PropType\r\n    ): IStyle {\r\n\r\n        let result = ContextStyleResult;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            // TODO\r\n            // if (prop.hasOwnProperty('family')) {\r\n            //     result.fontFamily = prop.family;\r\n            // } else {\r\n            //     result.fontFamily = defaultStyle.fontFamily;\r\n            // }\r\n            result.fontFamily = defaultStyle.fontFamily;\r\n\r\n            if (prop.hasOwnProperty('size')) {\r\n                result.fontSize = prop.size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n            result.fontStyle = GetFontStyle(prop.b, prop.i);\r\n\r\n            result.font = `${result.fontStyle} ${result.fontSize} ${result.fontFamily}`;\r\n\r\n            if (prop.hasOwnProperty('color')) {\r\n                result.fillStyle = prop.color;\r\n            } else {\r\n                result.fillStyle = defaultStyle.fillStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                if (prop.stroke === true) {\r\n                    result.strokeStyle = defaultStyle.strokeStyle;\r\n                    result.strokeThickness = defaultStyle.strokeThickness;\r\n                } else {\r\n                    result.strokeStyle = prop.stroke;\r\n                    result.strokeThickness = defaultStyle.strokeThickness;\r\n                }\r\n            } else {\r\n                result.strokeStyle = defaultStyle.strokeStyle;\r\n                result.strokeThickness = 0;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            if (prop.shadow === true) {\r\n                result.shadowColor = defaultStyle.shadowColor;\r\n                result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n                result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n                result.shadowBlur = defaultStyle.shadowBlur;\r\n                result.shadowStroke = true;\r\n                result.shadowFill = true;\r\n            } else {\r\n                result.shadowColor = prop.shadow;\r\n                result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n                result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n                result.shadowBlur = defaultStyle.shadowBlur;\r\n                result.shadowStroke = true;\r\n                result.shadowFill = true;\r\n            }\r\n        } else {\r\n            result.shadowColor = '#000';\r\n            result.shadowOffsetX = 0;\r\n            result.shadowOffsetY = 0;\r\n            result.shadowBlur = 0;\r\n            result.shadowStroke = false;\r\n            result.shadowFill = false;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u')) {\r\n            if (prop.u === true) {\r\n                result.underlineStyle = defaultStyle.underlineStyle;\r\n                result.underlineThickness = defaultStyle.underlineThickness;\r\n                result.underlineOffsetY = defaultStyle.underlineOffsetY;\r\n            } else {\r\n                result.underlineStyle = prop.u;\r\n                result.underlineThickness = defaultStyle.underlineThickness;\r\n                result.underlineOffsetY = defaultStyle.underlineOffsetY;\r\n            }\r\n        } else {\r\n            result.underlineStyle = '#000';\r\n            result.underlineThickness = 0;\r\n            result.underlineOffsetY = 0;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(\r\n        text: string,\r\n        prop: PropType,\r\n        prevProp: PropType\r\n    ): string {\r\n\r\n        if (prevProp == null) {\r\n            prevProp = EmptyProp;\r\n        }\r\n\r\n        // Close previous tag\r\n        let closedHeaders: string[] = [];\r\n        for (const k in prevProp) {\r\n            if (prop.hasOwnProperty(k)) {\r\n                continue;\r\n            }\r\n\r\n            closedHeaders.push(`[/${k}]`);\r\n        }\r\n        text = `${closedHeaders.join()}${text}`;\r\n\r\n        let openHeaders: string[] = [];\r\n        for (const k in prop) {\r\n            if (prevProp[k] === prop[k]) {\r\n                continue;\r\n            }\r\n\r\n            switch (k) {\r\n                case 'size':\r\n                    const fontSize = prop.size.replace('px', '');\r\n                    openHeaders.push(`[size=${fontSize}]`);\r\n                    break;\r\n\r\n                case 'color':\r\n                case 'img':\r\n                case 'area':\r\n                    openHeaders.push(`[${k}=${prop[k]}]`);\r\n                    break;\r\n\r\n                case 'stroke':\r\n                case 'u':\r\n                    if (prop[k] === true) {\r\n                        openHeaders.push(`[${k}]`);\r\n                    } else {\r\n                        openHeaders.push(`[${k}=${prop[k]}]`)\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    openHeaders.push(`[${k}]`);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        text = `${text}${openHeaders.join()}`;\r\n\r\n        return text;\r\n    }\r\n}\r\n\r\nconst UpdateProp = function (\r\n    prop: PropType,\r\n    op: boolean,\r\n    key: string,\r\n    value?: any\r\n): PropType {\r\n\r\n    if (op === PROP_ADD) {\r\n        // PROP_ADD\r\n        prop[key] = value;\r\n    } else {\r\n        // PROP_REMOVE        \r\n        if (prop.hasOwnProperty(key)) {\r\n            delete prop[key];\r\n        }\r\n    }\r\n\r\n    return prop;\r\n};\r\n\r\n\r\nvar GetFontStyle = function (\r\n    isBold: boolean,\r\n    isItalic: boolean\r\n): string {\r\n\r\n    if (isBold && isItalic) {\r\n        return 'bold italic';\r\n    } else if (isBold) {\r\n        return 'bold';\r\n    } else if (isItalic) {\r\n        return 'italic';\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n\r\nconst TagTextToPropResult: { text: string, prop: PropType } = { text: null, prop: null };\r\nconst EmptyProp: PropType = {};\r\n\r\nconst RE_SPLITTEXT = /\\[b\\]|\\[\\/b\\]|\\[i\\]|\\[\\/i\\]|\\[size=(\\d+)\\]|\\[\\/size\\]|\\[color=([a-z]+|#[0-9abcdef]+)\\]|\\[\\/color\\]|\\[u\\]|\\[u=([a-z]+|#[0-9abcdef]+)\\]|\\[\\/u\\]|\\[shadow\\]|\\[shadow=([a-z]+|#[0-9abcdef]+)\\]|\\[\\/shadow\\]|\\[stroke\\]|\\[stroke=([a-z]+|#[0-9abcdef]+)\\]|\\[\\/stroke\\]|\\[img=([^\\]]+)\\]|\\[\\/img\\]|\\[area=([^\\]]+)\\]|\\[\\/area\\]/ig;\r\n\r\nvar RE_BLOD_OPEN = /\\[b\\]/i;\r\nvar RE_BLOD_CLOSE = /\\[\\/b\\]/i;\r\nvar RE_ITALICS_OPEN = /\\[i\\]/i;\r\nvar RE_ITALICS_CLOSE = /\\[\\/i\\]/i;\r\nvar RE_SIZE_OPEN = /\\[size=(\\d+)\\]/i;\r\nvar RE_SIZE_CLOSE = /\\[\\/size\\]/i;\r\nvar RE_COLOR_OPEN = /\\[color=([a-z]+|#[0-9abcdef]+)\\]/i;\r\nvar RE_COLOR_CLOSE = /\\[\\/color\\]/i;\r\nvar RE_UNDERLINE_OPEN = /\\[u\\]/i;\r\nvar RE_UNDERLINE_OPENC = /\\[u=([a-z]+|#[0-9abcdef]+)\\]/i;\r\nvar RE_UNDERLINE_CLOSE = /\\[\\/u\\]/i;\r\nvar RE_SHADOW_OPEN = /\\[shadow\\]/i;\r\nvar RE_SHADOW_OPENC = /\\[shadow=([a-z]+|#[0-9abcdef]+)\\]/i;\r\nvar RE_SHADOW_CLOSE = /\\[\\/shadow\\]/i;\r\nvar RE_STROKE_OPEN = /\\[stroke\\]/i;\r\nvar RE_STROKE_OPENC = /\\[stroke=([a-z]+|#[0-9abcdef]+)\\]/i;\r\nvar RE_STROKE_CLOSE = /\\[\\/stroke\\]/i;\r\nvar RE_IMAGE_OPEN = /\\[img=([^\\]]+)\\]/i;\r\nvar RE_IMAGE_CLOSE = /\\[\\/img\\]/i;\r\nvar RE_AREA_OPEN = /\\[area=([^\\]]+)\\]/i;\r\nvar RE_AREA_CLOSE = /\\[\\/area\\]/i;\r\nconst PROP_REMOVE = false;\r\nconst PROP_ADD = true;", "import { BaseText } from '../basetext/BaseText';\r\nimport { IConfig } from '../basetext/IBaseText'\r\nimport { Parser } from './Parser';\r\n\r\nexport class BBCodeText extends BaseText {\r\n\r\n    constructor(\r\n        x: number,\r\n        y: number,\r\n        text: string | string[] = '',\r\n        style?: IConfig\r\n    ) {\r\n\r\n        super(x, y, text, style, (new Parser()));\r\n\r\n        this.type = 'rexBBcodeText';\r\n    }\r\n}", "import {BBCodeText} from './bbocdetext/BBCodeText';\r\n\r\nexport {\r\n    BBCodeText\r\n}", "export function GetKey(\r\n    rowKey: string,\r\n    colKey: string\r\n): string {\r\n\r\n    return `(${rowKey}][${colKey})`;\r\n}", "import { ITable, JSONDataType } from './ITable';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function DataToJSON(\r\n    table: ITable\r\n): JSONDataType {\r\n\r\n    let obj: JSONDataType = {};\r\n    let data = table.data;\r\n    let rowKeys = table.rowKeys,\r\n        colKeys = table.colKeys;\r\n    rowKeys.forEach(function (rowKey) {\r\n        let row: { [key: string]: any } = {};\r\n        obj[rowKey] = row;\r\n        colKeys.forEach(function (colKey) {\r\n            row[colKey] = data.get(GetKey(rowKey, colKey));\r\n        })\r\n    })\r\n\r\n    return obj;\r\n}", "import { TypeConvert as DefaultTypeConvert } from '../../utils/string/TypeConvert';\r\n\r\nexport { DefaultTypeConvert };", "import { ITable } from './ITable';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function Clear(\r\n    table: ITable\r\n) {\r\n    table.data.clear();\r\n    table.rowKeys.length = 0;\r\n    table.colKeys.length = 0;\r\n}\r\n\r\nexport function RemoveRow(\r\n    table: ITable,\r\n    rowKey: string\r\n): void {\r\n\r\n    let idx = table.rowKeys.indexOf(rowKey);\r\n    if (idx === -1) {\r\n        return;\r\n    }\r\n    table.rowKeys.splice(idx, 1);\r\n\r\n    table.colKeys.forEach(function (colKey) {\r\n        table.data.delete(GetKey(rowKey, colKey));\r\n    })\r\n}\r\n\r\nexport function RemoveCol(\r\n    table: ITable,\r\n    colKey: string\r\n): void {\r\n\r\n    let idx: number = table.colKeys.indexOf(colKey);\r\n    if (idx === -1) {\r\n        return;\r\n    }\r\n    table.colKeys.splice(idx, 1);\r\n\r\n    table.rowKeys.forEach(function (rowKey) {\r\n        table.data.delete(GetKey(rowKey, colKey));\r\n    })\r\n}\r\n", "export function Copy<T>(\r\n    dest: any[],\r\n    src: T[],\r\n    startIdx: number = 0,\r\n    endIdx: number = src.length\r\n): T[] {\r\n\r\n    dest.length = endIdx - startIdx;\r\n    for (let i = 0, cnt = dest.length; i < cnt; i++) {\r\n        dest[i] = src[i + startIdx];\r\n    }\r\n    return dest;\r\n};", "import { ITable, ILoadCSVConfig, CellValueCallbackType } from './ITable';\r\nimport { DefaultTypeConvert } from './TypeConvert';\r\nimport { CSVParser } from '../../utils/string/papaparse';\r\nimport { Clear } from './Remove';\r\nimport { Copy as ArrayCopy } from '../../utils/array/Copy';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function LoadCSV(\r\n    table: ITable,\r\n    csvString: string,\r\n    config?: ILoadCSVConfig\r\n): void {\r\n\r\n    let delimiter: string,\r\n        convert: boolean,\r\n        convertCallback: CellValueCallbackType | undefined,\r\n        convertScope: object | undefined;\r\n    ({\r\n        delimiter = ',',\r\n        convert = true,\r\n        convertCallback = DefaultTypeConvert,\r\n        convertScope = undefined\r\n    } = config || {})\r\n    if (!convert) {\r\n        convertCallback = undefined;\r\n    }\r\n\r\n    Clear(table);\r\n\r\n    let arr: any[] = CSVParser.parse(csvString, {\r\n        delimiter: delimiter\r\n    }).data;\r\n\r\n    table.colKeys = ArrayCopy(table.colKeys, arr[0]);\r\n    table.rowKeys.length = arr.length - 1;\r\n    for (let i = 0, cnt = table.rowKeys.length; i < cnt; i++) {\r\n        table.rowKeys[i] = arr[i + 1][0]; // skip 1st row\r\n    }\r\n\r\n    let colKeys = table.colKeys,\r\n        rowKeys = table.rowKeys;\r\n    let data = table.data;\r\n    let colKey: string,\r\n        rowKey: string,\r\n        value: any;\r\n    for (let r = 0, rcnt = rowKeys.length; r < rcnt; r++) {\r\n        rowKey = rowKeys[r];\r\n\r\n        for (let c = 0, ccnt = colKeys.length; c < ccnt; c++) {\r\n            colKey = colKeys[c];\r\n            value = arr[r + 1][c];\r\n\r\n            if (convertCallback) {\r\n                if (convertScope) {\r\n                    value = convertCallback.call(convertScope, value, rowKey, colKey, table);\r\n                } else {\r\n                    value = convertCallback(value, rowKey, colKey, table);\r\n                }\r\n            }\r\n\r\n            data.set(GetKey(rowKey, colKey), value);\r\n        }\r\n    }\r\n}", "import { ITable } from './ITable';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function Get(\r\n    table: ITable,\r\n    rowKey: string,\r\n    colKey: string\r\n): any {\r\n\r\n    return table.data.get(GetKey(rowKey, colKey));\r\n}\r\n\r\nexport function HasRowKey(\r\n    table: ITable,\r\n    rowKey: string\r\n): boolean {\r\n\r\n    return (table.rowKeys.indexOf(rowKey) !== -1);\r\n}\r\n\r\nexport function HasColKey(\r\n    table: ITable,\r\n    colKey: string\r\n): boolean {\r\n\r\n    return (table.colKeys.indexOf(colKey) !== -1);\r\n}\r\n\r\nexport function HasKey(\r\n    table: ITable,\r\n    rowKey: string,\r\n    colKey: string\r\n): boolean {\r\n\r\n    return HasRowKey(table, rowKey) && HasColKey(table, colKey);\r\n}", "import { ITable, CellValueCallbackType } from './ITable';\r\nimport { GetKey } from './MapKey';\r\nimport { DefaultTypeConvert } from './TypeConvert';\r\nimport { HasRowKey, HasColKey } from './Get';\r\n\r\nexport function ConvertRow(\r\n    table: ITable,\r\n    rowKey: string | string[],\r\n    callback: CellValueCallbackType = DefaultTypeConvert,\r\n    scope?: object\r\n): void {\r\n\r\n    if (Array.isArray(rowKey)) {\r\n        for (let i = 0, cnt = rowKey.length; i < cnt; i++) {\r\n            ConvertRow(table, rowKey[i], callback, scope);\r\n        }\r\n        return;\r\n    }\r\n\r\n    if (!HasRowKey(table, rowKey)) {\r\n        return;\r\n    }\r\n\r\n    let data = table.data;\r\n    table.colKeys.forEach(function (colKey) {\r\n        let key = GetKey(rowKey, colKey);\r\n        let value = data.get(key);\r\n\r\n        if (scope) {\r\n            value = callback.call(scope, value, rowKey, colKey, table);\r\n        } else {\r\n            value = callback(value, rowKey, colKey, table);\r\n        }\r\n\r\n        data.set(key, value);\r\n    })\r\n}\r\n\r\nexport function ConvertCol(\r\n    table: ITable,\r\n    colKey: string | string[],\r\n    callback: CellValueCallbackType = DefaultTypeConvert,\r\n    scope?: object\r\n): void {\r\n\r\n    if (Array.isArray(colKey)) {\r\n        for (let i = 0, cnt = colKey.length; i < cnt; i++) {\r\n            ConvertCol(table, colKey[i], callback, scope)\r\n        }\r\n        return;\r\n    }\r\n\r\n    if (!HasColKey(table, colKey)) {\r\n        return;\r\n    }\r\n\r\n    let data = table.data;\r\n    table.rowKeys.forEach(function (rowKey) {\r\n        let key = GetKey(rowKey, colKey);\r\n        let value = data.get(key);\r\n\r\n        if (scope) {\r\n            value = callback.call(scope, value, rowKey, colKey, table);\r\n        } else {\r\n            value = callback(value, rowKey, colKey, table);\r\n        }\r\n\r\n        data.set(key, value);\r\n    })\r\n}\r\n", "import { ITable, EachKeyCallback } from './ITable';\r\n\r\nexport function EachRow(\r\n    table: ITable,\r\n    callback: EachKeyCallback,\r\n    scope?: object\r\n): void {\r\n\r\n    let rowKeys = table.rowKeys,\r\n        rowKey: string;\r\n    for (let i = 0, cnt = rowKeys.length; i < cnt; i++) {\r\n        rowKey = rowKeys[i];\r\n\r\n        if (scope) {\r\n            callback.call(scope, rowKey, table);\r\n        } else {\r\n            callback(rowKey, table);\r\n        }\r\n    }\r\n}\r\n\r\nexport function EachCol(\r\n    table: ITable,\r\n    callback: EachKeyCallback,\r\n    scope?: object\r\n): void {\r\n\r\n    let colKeys = table.colKeys,\r\n        colKey: string;\r\n    for (let i = 0, len = colKeys.length; i < len; i++) {\r\n        colKey = colKeys[i];\r\n\r\n        if (scope) {\r\n            callback.call(scope, colKey, table);\r\n        } else {\r\n            callback(colKey, table);\r\n        }\r\n    }\r\n}", "import { ITable } from './ITable';\r\nimport { HasKey } from './Get';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function Set(\r\n    table: ITable,\r\n    rowKey: string,\r\n    colKey: string,\r\n    value: any\r\n): void {\r\n\r\n    if (!HasKey(table, rowKey, colKey)) {\r\n        return;\r\n    }\r\n\r\n    table.data.set(GetKey(rowKey, colKey), value);\r\n}\r\n\r\nexport function Add(\r\n    table: ITable,\r\n    rowKey: string,\r\n    colKey: string,\r\n    value: number = 1\r\n): void {\r\n\r\n    if (!HasKey(table, rowKey, colKey)) {\r\n        return;\r\n    }\r\n\r\n    let key = GetKey(rowKey, colKey);\r\n    let data = table.data;\r\n    let prevValue = data.get(key) || 0;\r\n    data.set(key, prevValue + value);\r\n}", "import { ITable, AppendCallbackType } from './ITable';\r\nimport { HasRowKey, HasColKey } from './Get';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function AppendRow(\r\n    table: ITable,\r\n    rowKey: string,\r\n    callback: AppendCallbackType | any = 0,\r\n    scope?: unknown\r\n): void {\r\n\r\n    if (HasRowKey(table, rowKey)) {\r\n        return;\r\n    }\r\n\r\n    let isCallbackMode = (typeof (callback) === 'function');\r\n    let initValue = (isCallbackMode) ? undefined : callback;\r\n\r\n    table.rowKeys.push(rowKey);\r\n\r\n    let data = table.data;\r\n    table.colKeys.forEach(function (colKey) {\r\n        let key = GetKey(rowKey, colKey);\r\n        let value: any;\r\n        if (isCallbackMode) {\r\n            if (scope) {\r\n                value = callback.call(scope, table, rowKey, colKey);\r\n            } else {\r\n                value = callback(table, rowKey, colKey)\r\n            }\r\n        } else {\r\n            value = initValue;\r\n        }\r\n\r\n        data.set(key, value);\r\n    })\r\n}\r\n\r\nexport function AppendCol(\r\n    table: ITable,\r\n    colKey: string,\r\n    callback: AppendCallbackType | any = 0,\r\n    scope?: unknown\r\n): void {\r\n\r\n    if (HasColKey(table, colKey)) {\r\n        return;\r\n    }\r\n\r\n    let isCallbackMode = (typeof (callback) === 'function');\r\n    let initValue = (isCallbackMode) ? undefined : callback;\r\n\r\n    table.colKeys.push(colKey);\r\n\r\n\r\n    let data = table.data;\r\n    table.rowKeys.forEach(function (rowKey) {\r\n        let key = GetKey(rowKey, colKey);\r\n        let value: any;\r\n        if (isCallbackMode) {\r\n            if (scope) {\r\n                value = callback.call(scope, table, rowKey, colKey);\r\n            } else {\r\n                value = callback(table, rowKey, colKey)\r\n            }\r\n        } else {\r\n            value = initValue;\r\n        }\r\n\r\n        data.set(key, value);\r\n    })\r\n}", "export type RowType = { [colKey: string]: any };\r\nexport type JSONDataType = {\r\n    [rowKey: string]: {\r\n        [colKey: string]: any\r\n    }\r\n};\r\nexport type MapDataType = Map<string, any>;\r\n\r\nexport type KeyType = string[];\r\nexport type CursorType = {\r\n    colKey: string,\r\n    rowKey: string\r\n};\r\n\r\nexport type CellValueCallbackType = (value?: any, rowKey?: string, colKey?: string, table?: ITable) => any;\r\nexport type AppendCallbackType = (table: ITable, rowKey: string, colKey: string) => any;\r\nexport type EachKeyCallback = (key?: string, table?: ITable) => boolean;\r\n\r\nexport enum SortMode {\r\n    ascending = 0,\r\n    descending = 1,\r\n    logical_ascending = 2,\r\n    logical_descending = 3\r\n}\r\nexport type SortModeString = 'ascending' | 'descending' | 'logical_ascending' | 'logical_descending';\r\nexport type SortCallback = (keyA: string, keyB: string) => number;\r\n\r\nexport interface IState {\r\n    data?: JSONDataType;\r\n    row?: KeyType;\r\n    col?: KeyType;\r\n    cursor?: CursorType;\r\n}\r\n\r\nexport interface ILoadCSVConfig {\r\n    delimiter?: string,\r\n    convert?: boolean,\r\n    convertCallback?: CellValueCallbackType,\r\n    convertScope?: object\r\n}\r\n\r\nexport interface ITable {\r\n    data: MapDataType;\r\n    rowKeys: KeyType;\r\n    colKeys: KeyType;\r\n    cursor: CursorType;\r\n}", "import { ITable, SortMode, SortModeString, SortCallback } from './ITable';\r\nimport { HasRowKey, HasColKey } from './Get';\r\nimport { GetKey } from './MapKey';\r\n\r\nexport function SortRow(\r\n    table: ITable,\r\n    callback: SortCallback | string,\r\n    scope?: object | SortMode | SortModeString\r\n): void {\r\n\r\n    let sortCallback: SortCallback;\r\n    if (typeof (callback) === 'function') {\r\n        if (scope) {\r\n            sortCallback = callback.bind(scope);\r\n        } else {\r\n            sortCallback = callback;\r\n        }\r\n    } else {\r\n        let rowKey = callback;\r\n        if (!HasRowKey(table, rowKey)) {\r\n            return;\r\n        }\r\n        let mode = scope as SortMode | SortModeString;\r\n        if (typeof (mode) === 'string') {\r\n            mode = SortMode[mode] as number;\r\n        }\r\n\r\n        let data = table.data;\r\n        sortCallback = function (colKeyA: string, colKeyB: string) {\r\n            let valA = data.get(GetKey(rowKey, colKeyA));\r\n            let valB = data.get(GetKey(rowKey, colKeyB));\r\n            let retVal: number;\r\n            if ((mode === SortMode.logical_ascending) || (mode === SortMode.logical_descending)) {\r\n                valA = parseFloat(valA);\r\n                valB = parseFloat(valB);\r\n            }\r\n            switch (mode) {\r\n                case SortMode.ascending:\r\n                case SortMode.logical_ascending:\r\n                    retVal = (valA > valB) ? 1 :\r\n                        (valA < valB) ? -1 : 0;\r\n                    break;\r\n\r\n                case SortMode.descending:\r\n                case SortMode.logical_descending:\r\n                    retVal = (valA < valB) ? 1 :\r\n                        (valA > valB) ? -1 : 0;\r\n                    break;\r\n            }\r\n            return retVal;\r\n        }\r\n    }\r\n\r\n    table.colKeys.sort(sortCallback);\r\n}\r\n\r\nexport function SortCol(\r\n    table: ITable,\r\n    callback: SortCallback | string,\r\n    scope?: object | SortMode | SortModeString\r\n): void {\r\n\r\n    let sortCallback: SortCallback;\r\n    if (typeof (callback) === 'function') {\r\n        if (scope) {\r\n            sortCallback = callback.bind(scope);\r\n        } else {\r\n            sortCallback = callback;\r\n        }\r\n    } else {\r\n        let colKey = callback;\r\n        if (!HasColKey(table, colKey)) {\r\n            return\r\n        }\r\n\r\n        let mode = scope;\r\n        if (typeof (mode) === 'string') {\r\n            mode = SortMode[mode] as number;\r\n        }\r\n\r\n        let data = table.data;\r\n        sortCallback = function (rowKeyA: string, rowKeyB: string): number {\r\n            let valA = data.get(GetKey(rowKeyA, colKey));\r\n            let valB = data.get(GetKey(rowKeyB, colKey));\r\n            let retVal: any;\r\n            if ((mode === SortMode.logical_ascending) || (mode === SortMode.logical_descending)) {\r\n                valA = parseFloat(valA);\r\n                valB = parseFloat(valB);\r\n            }\r\n            switch (mode) {\r\n                case SortMode.ascending:\r\n                case SortMode.logical_ascending:\r\n                    retVal = (valA > valB) ? 1 :\r\n                        (valA < valB) ? -1 : 0;\r\n                    break;\r\n\r\n                case SortMode.descending:\r\n                case SortMode.logical_descending:\r\n                    retVal = (valA < valB) ? 1 :\r\n                        (valA > valB) ? -1 : 0;\r\n                    break;\r\n            }\r\n            return retVal;\r\n        };\r\n    }\r\n\r\n    table.rowKeys.sort(sortCallback);\r\n}\r\n", "import { ITable } from './ITable';\r\n\r\nexport function NextColKey(\r\n    table: ITable,\r\n    colKey: string,\r\n    step: number = 1,\r\n    wrap: boolean = true\r\n): string | undefined {\r\n\r\n    let colKeys = table.colKeys;\r\n    let idx = colKeys.indexOf(colKey);\r\n    if (idx === -1) {\r\n        return undefined;\r\n    }\r\n    idx += step;\r\n    if (wrap) {\r\n        idx = idx % colKeys.length;\r\n    }\r\n    return colKeys[idx];\r\n}\r\n\r\nexport function PreviousColKey(\r\n    table: ITable,\r\n    colKey: string,\r\n    step: number = 1,\r\n    wrap: boolean = true\r\n): string | undefined {\r\n\r\n    return NextColKey(table, colKey, -step, wrap);\r\n}\r\n\r\nexport function NextRowKey(\r\n    table: ITable,\r\n    rowKey: string,\r\n    step: number = 1,\r\n    wrap: boolean = true\r\n): string | undefined {\r\n\r\n    let rowKeys = table.rowKeys;\r\n    let idx = rowKeys.indexOf(rowKey);\r\n    if (idx === -1) {\r\n        return undefined;\r\n    }\r\n    idx += step;\r\n    if (wrap) {\r\n        idx = idx % rowKeys.length;\r\n    }\r\n    return rowKeys[idx];\r\n}\r\n\r\nexport function PreviousRowKey(\r\n    table: ITable,\r\n    rowKey: string,\r\n    step: number = 1,\r\n    wrap: boolean = true\r\n): string | undefined {\r\n\r\n    return NextRowKey(table, rowKey, -step, wrap);\r\n}", "import { ITable } from \"./ITable\";\r\nimport { HasRowKey, HasColKey } from './Get';\r\nimport { GetKey } from './MapKey';\r\n\r\n\r\nexport function IsValueInRow(\r\n    table: ITable,\r\n    rowKey: string,\r\n    value: any\r\n): boolean {\r\n\r\n    if (!HasRowKey(table, rowKey)) {\r\n        return false;\r\n    }\r\n\r\n    let found = false;\r\n    let data = table.data;\r\n    table.colKeys.forEach(function (colKey) {\r\n        if (data.get(GetKey(rowKey, colKey)) === value) {\r\n            found = true;\r\n            return true; // Break forEach\r\n        }\r\n    })\r\n\r\n    return found;\r\n}\r\n\r\nexport function IsValueInCol(\r\n    table: ITable,\r\n    colKey: string,\r\n    value: any\r\n): boolean {\r\n\r\n    if (!HasColKey(table, colKey)) {\r\n        return false;\r\n    }\r\n\r\n    let found = false;\r\n    let data = table.data;\r\n    table.rowKeys.forEach(function (rowKey) {\r\n        if (data.get(GetKey(rowKey, colKey)) === value) {\r\n            found = true;\r\n            return true; // Break forEach\r\n        }\r\n    })\r\n\r\n    return found;\r\n}\r\n", "import { ITable } from './ITable';\r\n\r\nexport function SetCursor(\r\n    table: ITable,\r\n    rowKey: string = '',\r\n    colKey: string = ''\r\n): void {\r\n\r\n    table.cursor.rowKey = rowKey;\r\n    table.cursor.colKey = colKey;\r\n}", "import {\r\n    ITable,\r\n    MapDataType, JSONDataType, KeyType, CursorType,\r\n    IState, ILoadCSVConfig,\r\n    CellValueCallbackType, AppendCallbackType, EachKeyCallback,\r\n    SortMode, SortModeString, SortCallback\r\n} from './ITable';\r\nimport { GetKey } from './MapKey';\r\nimport { DataToJSON } from './DataToJSON';\r\nimport { LoadCSV } from './LoadCSV';\r\nimport { ConvertCol, ConvertRow } from './Convert';\r\nimport { EachRow, EachCol } from './ForEach';\r\nimport { Get, HasRowKey, HasColKey, HasKey } from './Get';\r\nimport { Set, Add } from './Set';\r\nimport { AppendRow, AppendCol } from './Append';\r\nimport { Clear, RemoveRow, RemoveCol } from './Remove';\r\nimport { SortCol, SortRow } from './Sort';\r\nimport { NextColKey, PreviousColKey, NextRowKey, PreviousRowKey } from './NextKey';\r\nimport { IsValueInRow, IsValueInCol } from './Search';\r\nimport { SetCursor } from './Cursor';\r\nimport { Copy as ArrayCopy } from '../../utils/array/Copy'\r\n\r\n/**\r\n * A 2-Dimations table indexed by (rowKey, columnKey).\r\n *\r\n * @export\r\n * @class Table\r\n * @implements {ITable}\r\n */\r\nexport class Table implements ITable {\r\n    data: MapDataType;\r\n    rowKeys: KeyType;\r\n    colKeys: KeyType;\r\n    cursor: CursorType;\r\n\r\n    /**\r\n     * Creates an instance of Table.\r\n     * @param {JSONDataType} [data]\r\n     * @memberof Table\r\n     */\r\n    constructor(data?: JSONDataType) {\r\n        this.data = new Map();\r\n        this.rowKeys = [];\r\n        this.colKeys = [];\r\n        this.cursor = { colKey: '', rowKey: '' };\r\n\r\n        if (data) {\r\n            this.fromJSON({ data: data });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset state.\r\n     *\r\n     * @param {IState} [{\r\n     *         data = {},\r\n     *         row = undefined,\r\n     *         col = undefined,\r\n     *         cursor = undefined\r\n     *     }={}]\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    fromJSON({\r\n        data = {},\r\n        row = undefined,\r\n        col = undefined,\r\n        cursor = undefined\r\n    }: IState = {}) {\r\n\r\n        Clear(this);\r\n\r\n        // Assign rowKeys and colKeys\r\n        if ((row === undefined) || (col === undefined)) {\r\n            row = [];\r\n            col = [];\r\n            for (let rowKey in data) {\r\n                row.push(rowKey);\r\n            }\r\n            if (row.length > 0) {\r\n                let firstRow = data[row[0]];\r\n                for (let colKey in firstRow) {\r\n                    col.push(colKey);\r\n                }\r\n            }\r\n        }\r\n        ArrayCopy(this.rowKeys, row);\r\n        ArrayCopy(this.colKeys, col);\r\n\r\n        // Fill data\r\n        let mapData = this.data;\r\n        for (let j = 0, jcnt = row.length; j < jcnt; j++) {\r\n            let rowKey = row[j];\r\n            for (let i = 0, icnt = col.length; i < icnt; i++) {\r\n                let colKey = col[i];\r\n                mapData.set(GetKey(rowKey, colKey), data[rowKey][colKey]);\r\n            }\r\n        }\r\n\r\n        if (cursor) {\r\n            this.setCursor(cursor.rowKey, cursor.colKey);\r\n        } else {\r\n            this.setCursor();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get state.\r\n     *\r\n     * @returns {IState}\r\n     * @memberof Table\r\n     */\r\n    toJSON(): IState {\r\n        return {\r\n            data: DataToJSON(this),\r\n            row: this.rowKeys,\r\n            col: this.colKeys,\r\n            cursor: this.cursor\r\n        };\r\n    }\r\n\r\n    shutdown() {\r\n\r\n        this.destroy();\r\n    }\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     *\r\n     * @memberof Table\r\n     */\r\n    destroy() {\r\n\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Load data from a csv-format string.\r\n     *\r\n     * @param {string} csvString\r\n     * @param {ILoadCSVConfig} [config]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    loadCSV(\r\n        csvString: string,\r\n        config?: ILoadCSVConfig\r\n    ): this {\r\n\r\n        LoadCSV(this, csvString, config);\r\n        this.setCursor();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Convert string value to number/boolean/null value of a row.\r\n     *\r\n     * @param {string} rowKey\r\n     * @param {CellValueCallbackType} [callback]\r\n     * @param {object} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    convertRow(\r\n        rowKey: string,\r\n        callback?: CellValueCallbackType,\r\n        scope?: object\r\n    ): this {\r\n\r\n        ConvertRow(this, rowKey, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Convert string value to number/boolean/null value of a column.\r\n     *\r\n     * @param {string} colKey\r\n     * @param {CellValueCallbackType} [callback]\r\n     * @param {object} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    convertCol(\r\n        colKey: string,\r\n        callback?: CellValueCallbackType,\r\n        scope?: object\r\n    ): this {\r\n\r\n        ConvertCol(this, colKey, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove all cells in this table.\r\n     *\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    clear(): this {\r\n\r\n        Clear(this);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Get value in a cell.\r\n     * This operation will change the cursor.\r\n     *\r\n     * @param {string} [rowKey=this.curRowKey]\r\n     * @param {string} [colKey=this.curColKey]\r\n     * @returns {*}\r\n     * @memberof Table\r\n     */\r\n    get(\r\n        rowKey: string = this.curRowKey,\r\n        colKey: string = this.curColKey\r\n    ): any {\r\n\r\n        let value: any = Get(this, rowKey, colKey);\r\n        this.setCursor(rowKey, colKey);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Set value of a cell. It has 2 parameter modes :  \r\n     * \r\n     * - `table.set(rowKey, colKey, value)` : Set value to (rowKey, colKey) cell.\r\n     * - `table.set(value)` : Set value to cursor cell.\r\n     * \r\n     * This operation will change the cursor.\r\n     *\r\n     * @param {(string | any)} rowKey\r\n     * @param {string} [colKey]\r\n     * @param {*} [value]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    set(\r\n        rowKey: string | any,\r\n        colKey?: string,\r\n        value?: any\r\n    ): this {\r\n\r\n        if (arguments.length === 1) {\r\n            value = rowKey;\r\n            rowKey = this.curRowKey;\r\n            colKey = this.curColKey;\r\n        }\r\n\r\n        Set(this, rowKey, colKey, value);\r\n        this.setCursor(rowKey, colKey);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add a number value to a cell. It has 4 parameter modes :  \r\n     * \r\n     * - `table.add(rowKey, colKey, value)` : Add value to (rowKey, colKey) cell.\r\n     * - `table.add(rowKey, colKey)` : Add 1 to (rowKey, colKey) cell.\r\n     * - `table.add(value)` : Add value to cursor cell.\r\n     * - `table.add()` : Add 1 to cursor cell.\r\n     * \r\n     * This operation also change the cursor.\r\n     *\r\n     * @param {(string | any)} [rowKey]\r\n     * @param {string} [colKey]\r\n     * @param {number} [value]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    add(\r\n        rowKey?: string | any,\r\n        colKey?: string,\r\n        value?: number\r\n    ): this {\r\n\r\n        if (arguments.length <= 1) {\r\n            value = (arguments.length === 0) ? 1 : rowKey;\r\n            rowKey = this.curRowKey;\r\n            colKey = this.curColKey;\r\n        }\r\n\r\n        Add(this, rowKey, colKey, value);\r\n        this.setCursor(rowKey, colKey);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Dose table has this row-key?\r\n     *\r\n     * @param {string} rowKey\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    hasRowKey(rowKey: string) {\r\n\r\n        return HasRowKey(this, rowKey);\r\n    }\r\n\r\n    /**\r\n     * Dose table has this column-key?\r\n     *\r\n     * @param {string} colKey\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    hasColKey(colKey: string) {\r\n\r\n        return HasColKey(this, colKey);\r\n    }\r\n\r\n    /**\r\n     * Dose table has this row-key and column-key?\r\n     *\r\n     * @param {string} rowKey\r\n     * @param {string} colKey\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    hasKey(rowKey: string, colKey: string) {\r\n\r\n        return HasKey(this, rowKey, colKey);\r\n    }\r\n\r\n    /**\r\n     * Append a new row, filled by callback, or a constant value.\r\n     *\r\n     * @param {string} rowKey\r\n     * @param {(AppendCallbackType | any)} [callback]\r\n     * @param {object} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    appendRow(\r\n        rowKey: string,\r\n        callback?: AppendCallbackType | any,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        AppendRow(this, rowKey, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Append a new column, filled by callback, or a constant value.\r\n     *\r\n     * @param {string} colKey\r\n     * @param {(AppendCallbackType | any)} [callback]\r\n     * @param {unknown} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    appendCol(\r\n        colKey: string,\r\n        callback?: AppendCallbackType | any,\r\n        scope?: unknown\r\n    ): this {\r\n\r\n        AppendCol(this, colKey, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a row.\r\n     *\r\n     * @param {string} rowKey\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    removeRol(rowKey: string): this {\r\n\r\n        RemoveRow(this, rowKey);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a column.\r\n     *\r\n     * @param {string} colKey\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    removeCol(colKey: string): this {\r\n\r\n        RemoveCol(this, colKey);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Run callback for each row.\r\n     *\r\n     * @param {EachKeyCallback} callback\r\n     * @param {object} [scope]\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    eachRow(callback: EachKeyCallback, scope?: object) {\r\n\r\n        EachRow(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Run callback for each column.\r\n     *\r\n     * @param {EachKeyCallback} callback\r\n     * @param {object} [scope]\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    eachCol(callback: EachKeyCallback, scope?: object) {\r\n\r\n        EachCol(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get next row key.\r\n     * This operation also change the cursor.\r\n     *\r\n     * @param {string} [rowKey=this.curRowKey]\r\n     * @param {number} [step]\r\n     * @param {boolean} [wrap]\r\n     * @returns {(string | undefined)}\r\n     * @memberof Table\r\n     */\r\n    nextRowKey(\r\n        rowKey: string = this.curRowKey,\r\n        step?: number,\r\n        wrap?: boolean\r\n    ): string | undefined {\r\n\r\n        let key = NextRowKey(this, rowKey, step, wrap);\r\n        if (key) {\r\n            this.cursor.rowKey = key;\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * Get next column key.\r\n     * This operation will change the cursor.\r\n     *\r\n     * @param {string} [colKey=this.curColKey]\r\n     * @param {number} [step]\r\n     * @param {boolean} [wrap]\r\n     * @returns {(string | undefined)}\r\n     * @memberof Table\r\n     */\r\n    nextColKey(\r\n        colKey: string = this.curColKey,\r\n        step?: number,\r\n        wrap?: boolean\r\n    ): string | undefined {\r\n\r\n        let key = NextColKey(this, colKey, step, wrap);\r\n        if (key) {\r\n            this.cursor.colKey = key;\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * Get previous row key.\r\n     * This operation will change the cursor.\r\n     *\r\n     * @param {string} [rowKey=this.curRowKey]\r\n     * @param {number} [step]\r\n     * @param {boolean} [wrap]\r\n     * @returns {(string | undefined)}\r\n     * @memberof Table\r\n     */\r\n    previousRowKey(\r\n        rowKey: string = this.curRowKey,\r\n        step?: number,\r\n        wrap?: boolean\r\n    ): string | undefined {\r\n\r\n        let key = PreviousRowKey(this, rowKey, step, wrap);\r\n        if (key) {\r\n            this.cursor.rowKey = key;\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * Get previous column key.\r\n     * This operation will change the cursor.\r\n     *\r\n     * @param {string} [colKey=this.curColKey]\r\n     * @param {number} [step]\r\n     * @param {boolean} [wrap]\r\n     * @returns {(string | undefined)}\r\n     * @memberof Table\r\n     */\r\n    previousColKey(\r\n        colKey: string = this.curColKey,\r\n        step?: number,\r\n        wrap?: boolean\r\n    ): string | undefined {\r\n\r\n        let key = PreviousColKey(this, colKey, step, wrap);\r\n        if (key) {\r\n            this.cursor.colKey = key;\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * Sort rows.\r\n     *\r\n     * @param {(SortCallback | string)} callback\r\n     * @param {(object | SortMode | SortModeString)} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    sortRow(\r\n        callback: SortCallback | string,\r\n        scope?: object | SortMode | SortModeString\r\n    ): this {\r\n\r\n        SortRow(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sort columns.\r\n     *\r\n     * @param {(SortCallback | string)} callback\r\n     * @param {(object | SortMode | SortModeString)} [scope]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    sortCol(\r\n        callback: SortCallback | string,\r\n        scope?: object | SortMode | SortModeString\r\n    ): this {\r\n\r\n        SortCol(this, callback, scope);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Dose a row has a specific value?\r\n     *\r\n     * @param {string} rowKey\r\n     * @param {*} value\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    isValueInRoW(rowKey: string, value: any) {\r\n\r\n        return IsValueInRow(this, rowKey, value);\r\n    }\r\n\r\n    /**\r\n     * Dose a columns has a specific value?\r\n     *\r\n     * @param {string} colKey\r\n     * @param {unknown} value\r\n     * @returns\r\n     * @memberof Table\r\n     */\r\n    isValueInCol(colKey: string, value: unknown) {\r\n\r\n        return IsValueInCol(this, colKey, value)\r\n    }\r\n\r\n    /**\r\n     * Get key of first row.\r\n     *\r\n     * @readonly\r\n     * @memberof Table\r\n     */\r\n    get firstRowKey(): string {\r\n        if (this.rowKeys.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.rowKeys[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get key of first column.\r\n     *\r\n     * @readonly\r\n     * @memberof Table\r\n     */\r\n    get firstColKey(): string {\r\n        if (this.colKeys.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.colKeys[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get row key of last access (get or set cell).\r\n     *\r\n     * @readonly\r\n     * @memberof Table\r\n     */\r\n    get curRowKey(): string {\r\n        return this.cursor.rowKey;\r\n    }\r\n\r\n    /**\r\n     * Get column key of last access (get or set cell).\r\n     *\r\n     * @readonly\r\n     * @memberof Table\r\n     */\r\n    get curColKey(): string {\r\n        return this.cursor.colKey;\r\n    }\r\n\r\n    /**\r\n     * Set cursor to (rowKey, colKey).\r\n     *\r\n     * @param {string} [rowKey=this.firstRowKey]\r\n     * @param {string} [colKey=this.firstColKey]\r\n     * @returns {this}\r\n     * @memberof Table\r\n     */\r\n    setCursor(\r\n        rowKey: string = this.firstRowKey,\r\n        colKey: string = this.firstColKey\r\n    ): this {\r\n\r\n        SetCursor(this, rowKey, colKey);\r\n        return this;\r\n    }\r\n\r\n}", "import { Table } from './Table';\r\n\r\nexport { Table as TwoDTable };", "function XOREncrypt(str, pwd) {\r\n    if (pwd == null || pwd.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    let prand = \"\";\r\n    for (let i = 0; i < pwd.length; i++) {\r\n        prand += pwd.charCodeAt(i).toString();\r\n    }\r\n    let spos = Math.floor(prand.length / 5);\r\n    let mult = parseInt(prand.charAt(spos) + prand.charAt(spos * 2) + prand.charAt(spos * 3) + prand.charAt(spos * 4) + prand.charAt(spos * 5));\r\n    let incr = Math.ceil(pwd.length / 2);\r\n    let modu = Math.pow(2, 31) - 1;\r\n    if (mult < 2) {\r\n        return null;\r\n    }\r\n    let salt = Math.round(Math.random() * 1000000000) % 100000000;\r\n    prand += salt;\r\n    while (prand.length > 10) {\r\n        prand = (parseInt(prand.substring(0, 10)) + parseInt(prand.substring(10, prand.length))).toString();\r\n    }\r\n    prand = (mult * prand + incr) % modu;\r\n    let enc_chr = \"\";\r\n    let enc_str = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        enc_chr = parseInt(str.charCodeAt(i) ^ Math.floor((prand / modu) * 255));\r\n        if (enc_chr < 16) {\r\n            enc_str += \"0\" + enc_chr.toString(16);\r\n        } else {\r\n            enc_str += enc_chr.toString(16);\r\n        }\r\n        prand = (mult * prand + incr) % modu;\r\n    }\r\n    salt = salt.toString(16);\r\n    while (salt.length < 8) {\r\n        salt = 0 + salt;\r\n    }\r\n    enc_str += salt;\r\n    return enc_str;\r\n}\r\n\r\nexport function Encrypt(src, pwd) {\r\n    src = escape(src);\r\n    pwd = escape(pwd.toString());\r\n    return XOREncrypt(src, pwd);\r\n};", "function XORDecrypt(str, pwd) {\r\n    if (str == null || str.length < 8) {\r\n        return null;\r\n    }\r\n    if (pwd == null || pwd.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    let prand = \"\";\r\n    for (let i = 0; i < pwd.length; i++) {\r\n        prand += pwd.charCodeAt(i).toString();\r\n    }\r\n    let spos = Math.floor(prand.length / 5);\r\n    let mult = parseInt(prand.charAt(spos) + prand.charAt(spos * 2) + prand.charAt(spos * 3) + prand.charAt(spos * 4) + prand.charAt(spos * 5));\r\n    let incr = Math.round(pwd.length / 2);\r\n    let modu = Math.pow(2, 31) - 1;\r\n    let salt = parseInt(str.substring(str.length - 8, str.length), 16);\r\n    str = str.substring(0, str.length - 8);\r\n    prand += salt;\r\n    while (prand.length > 10) {\r\n        prand = (parseInt(prand.substring(0, 10)) + parseInt(prand.substring(10, prand.length))).toString();\r\n    }\r\n    prand = (mult * prand + incr) % modu;\r\n    let enc_chr = \"\";\r\n    let enc_str = \"\";\r\n    for (let i = 0; i < str.length; i += 2) {\r\n        enc_chr = parseInt(parseInt(str.substring(i, i + 2), 16) ^ Math.floor((prand / modu) * 255));\r\n        enc_str += String.fromCharCode(enc_chr);\r\n        prand = (mult * prand + incr) % modu;\r\n    }\r\n    return enc_str;\r\n}\r\n\r\nexport function Decrypt(data, pwd) {\r\n    pwd = escape(pwd.toString());\r\n    let result = XORDecrypt(data, pwd);\r\n    if (result != null) {\r\n        result = unescape(result)\r\n    }\r\n    return result;\r\n};", "import { Encrypt } from './Encrypt';\r\nimport { Decrypt } from './Decrypt';\r\n\r\nlet XOR = {\r\n    /**\r\n     * Encrypt source string with password via XOR algorithm\r\n     *\r\n     * @param {string} src Source string\r\n     * @param {string} pwd Password\r\n     * @returns {(string | null)} Encrypted result\r\n     */\r\n    encrypt(src: string, pwd: string): string | null {\r\n        return Encrypt(src, pwd);\r\n    },\r\n\r\n    /**\r\n     * Decrypt result string with password via XOR algorithm\r\n     *\r\n     * @param {string} data Encrypted result\r\n     * @param {string} pwd Password\r\n     * @returns {(string | null)} Source string\r\n     */\r\n    decrypt(data: string, pwd: string): string | null {\r\n        return Decrypt(data, pwd);\r\n    }\r\n}\r\n\r\nexport { XOR };", "import { XOR } from './XOR';\r\n\r\nexport { XOR };", "import { AwayTime } from './time/awaytime';\r\nimport * as Board from './board'\r\nimport { Canvas } from './gameobjects/canvas';\r\nimport * as CanvasTexture from './texture/canvastexture';\r\nimport { CSVToArray } from './data/csvtoarray';\r\nimport { DrawCanvasTexture } from './texture/canvastexture';\r\nimport * as Firebase from './firebase';\r\nimport { FSM, CreateFSM } from './logic/fsm';\r\nimport { Gashapon } from './math/gashapon';\r\nimport { LZString } from './string/lzstring';\r\nimport { RunCommands } from './logic/runcommands';\r\nimport { BBCodeText } from './gameobjects/text';\r\nimport { TwoDTable } from './data/twodtable';\r\nimport { XOR } from './string/xor';\r\n\r\nexport {\r\n    AwayTime,\r\n    BBCodeText,\r\n    Board,\r\n    Canvas,\r\n    CanvasTexture,\r\n    CreateFSM,\r\n    CSVToArray,\r\n    DrawCanvasTexture,\r\n    Firebase,\r\n    FSM,\r\n    Gashapon,\r\n    LZString,\r\n    RunCommands,\r\n    TwoDTable,\r\n    XOR\r\n}", "import { BackgroundColor, Parent, Scenes, Size, WebGLRenderer } from '@phaserjs/phaser/config';\r\nimport { Game } from '@phaserjs/phaser/Game';\r\nimport { Scene } from '@phaserjs/phaser/scenes/Scene';\r\nimport { StaticWorld } from '@phaserjs/phaser/world';\r\nimport { AddChild } from '@phaserjs/phaser/display/';\r\nimport { ImageFile } from '@phaserjs/phaser/loader/files/ImageFile';\r\n\r\nimport { BBCodeText } from '../../src'\r\n\r\nclass Demo extends Scene {\r\n    constructor() {\r\n        super();\r\n\r\n        ImageFile('dude', '../assets/phaser-dude.png')\r\n            .load()\r\n            .then(() => {\r\n                this.create();\r\n            });\r\n    }\r\n\r\n    create() {\r\n\r\n        const s = `[color=red][size=30][i][u]Phaser[/i][img=dude][/u]\r\n[color=blue][size=20][shadow=yellow]is[/shadow]\r\n[size=40][color=none][stroke=green]Fun`;\r\n\r\n        const text = new BBCodeText(400, 300, s,\r\n            {\r\n                backgroundStrokeStyle: 'BurlyWood',\r\n                backgroundStrokeThickness: 4,\r\n                cornerRadius: 20,\r\n                padding: 10,\r\n                images: ['dude']\r\n            }\r\n        );\r\n\r\n        const world = new StaticWorld(this);\r\n        AddChild(world, text);\r\n    }\r\n}\r\n\r\nnew Game(\r\n    WebGLRenderer(),\r\n    Size(800, 600),\r\n    Parent('game'),\r\n    BackgroundColor(0x2d2d2d),\r\n    Scenes(Demo)\r\n);\r\n"],
  "mappings": "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",
  "names": []
}
